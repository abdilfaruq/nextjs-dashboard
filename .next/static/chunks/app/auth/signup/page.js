/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/auth/signup/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Cimage-component.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Clink.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Clayouts%5CDefaultLayout.tsx&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Cutility%5CLottie%5CSigninLottie.tsx&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Cimage-component.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Clink.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Clayouts%5CDefaultLayout.tsx&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Cutility%5CLottie%5CSigninLottie.tsx&server=false! ***!

/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/image-component.js */ \"(app-pages-browser)/./node_modules/next/dist/client/image-component.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/link.js */ \"(app-pages-browser)/./node_modules/next/dist/client/link.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/layouts/DefaultLayout.tsx */ \"(app-pages-browser)/./src/components/layouts/DefaultLayout.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/utility/Lottie/SigninLottie.tsx */ \"(app-pages-browser)/./src/components/utility/Lottie/SigninLottie.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1EJTNBJTVDTm90aWNlZCU1Q2RvY3VtZW50cyU1Q2ZhJTVDbmV4dGpzLWRhc2hib2FyZCU1Q25vZGVfbW9kdWxlcyU1Q25leHQlNUNkaXN0JTVDY2xpZW50JTVDaW1hZ2UtY29tcG9uZW50LmpzJm1vZHVsZXM9RCUzQSU1Q05vdGljZWQlNUNkb2N1bWVudHMlNUNmYSU1Q25leHRqcy1kYXNoYm9hcmQlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2xpbmsuanMmbW9kdWxlcz1EJTNBJTVDTm90aWNlZCU1Q2RvY3VtZW50cyU1Q2ZhJTVDbmV4dGpzLWRhc2hib2FyZCU1Q3NyYyU1Q2NvbXBvbmVudHMlNUNsYXlvdXRzJTVDRGVmYXVsdExheW91dC50c3gmbW9kdWxlcz1EJTNBJTVDTm90aWNlZCU1Q2RvY3VtZW50cyU1Q2ZhJTVDbmV4dGpzLWRhc2hib2FyZCU1Q3NyYyU1Q2NvbXBvbmVudHMlNUN1dGlsaXR5JTVDTG90dGllJTVDU2lnbmluTG90dGllLnRzeCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLG9PQUF1STtBQUN2SSw4TUFBNEg7QUFDNUgsOE1BQThIO0FBQzlIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/Mjk2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXE5vdGljZWRcXFxcZG9jdW1lbnRzXFxcXGZhXFxcXG5leHRqcy1kYXNoYm9hcmRcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcaW1hZ2UtY29tcG9uZW50LmpzXCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxOb3RpY2VkXFxcXGRvY3VtZW50c1xcXFxmYVxcXFxuZXh0anMtZGFzaGJvYXJkXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGxpbmsuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXE5vdGljZWRcXFxcZG9jdW1lbnRzXFxcXGZhXFxcXG5leHRqcy1kYXNoYm9hcmRcXFxcc3JjXFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0c1xcXFxEZWZhdWx0TGF5b3V0LnRzeFwiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcTm90aWNlZFxcXFxkb2N1bWVudHNcXFxcZmFcXFxcbmV4dGpzLWRhc2hib2FyZFxcXFxzcmNcXFxcY29tcG9uZW50c1xcXFx1dGlsaXR5XFxcXExvdHRpZVxcXFxTaWduaW5Mb3R0aWUudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Cimage-component.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Clink.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Clayouts%5CDefaultLayout.tsx&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Cutility%5CLottie%5CSigninLottie.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@lottiefiles/react-lottie-player/dist/lottie-react.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@lottiefiles/react-lottie-player/dist/lottie-react.esm.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Controls: function() { return /* binding */ Controls; },\n/* harmony export */   Player: function() { return /* binding */ Player; },\n/* harmony export */   PlayerEvent: function() { return /* binding */ PlayerEvent; },\n/* harmony export */   PlayerState: function() { return /* binding */ PlayerState; },\n/* harmony export */   Seeker: function() { return /* binding */ Seeker; },\n/* harmony export */   parseSrc: function() { return /* binding */ parseSrc; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */ var extendStatics = function(t, e) {\n    return (extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(t, e) {\n        t.__proto__ = e;\n    } || function(t, e) {\n        for(var r in e)Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n    })(t, e);\n};\nfunction __extends(t, e) {\n    if (\"function\" != typeof e && null !== e) throw new TypeError(\"Class extends value \" + String(e) + \" is not a constructor or null\");\n    function r() {\n        this.constructor = t;\n    }\n    extendStatics(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r);\n}\nvar __assign = function() {\n    return (__assign = Object.assign || function(t) {\n        for(var e, r = 1, i = arguments.length; r < i; r++)for(var a in e = arguments[r])Object.prototype.hasOwnProperty.call(e, a) && (t[a] = e[a]);\n        return t;\n    }).apply(this, arguments);\n};\nfunction __rest(t, e) {\n    var r = {};\n    for(var i in t)Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);\n    if (null != t && \"function\" == typeof Object.getOwnPropertySymbols) {\n        var a = 0;\n        for(i = Object.getOwnPropertySymbols(t); a < i.length; a++)e.indexOf(i[a]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[a]) && (r[i[a]] = t[i[a]]);\n    }\n    return r;\n}\nfunction __decorate(t, e, r, i) {\n    var a, s = arguments.length, n = s < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;\n    if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate) n = Reflect.decorate(t, e, r, i);\n    else for(var o = t.length - 1; o >= 0; o--)(a = t[o]) && (n = (s < 3 ? a(n) : s > 3 ? a(e, r, n) : a(e, r)) || n);\n    return s > 3 && n && Object.defineProperty(e, r, n), n;\n}\nfunction __param(t, e) {\n    return function(r, i) {\n        e(r, i, t);\n    };\n}\nfunction __metadata(t, e) {\n    if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.metadata) return Reflect.metadata(t, e);\n}\nfunction __awaiter(t, e, r, i) {\n    return new (r || (r = Promise))(function(a, s) {\n        function n(t) {\n            try {\n                h(i.next(t));\n            } catch (t) {\n                s(t);\n            }\n        }\n        function o(t) {\n            try {\n                h(i.throw(t));\n            } catch (t) {\n                s(t);\n            }\n        }\n        function h(t) {\n            var e;\n            t.done ? a(t.value) : (e = t.value, e instanceof r ? e : new r(function(t) {\n                t(e);\n            })).then(n, o);\n        }\n        h((i = i.apply(t, e || [])).next());\n    });\n}\nfunction __generator(t, e) {\n    var r, i, a, s, n = {\n        label: 0,\n        sent: function() {\n            if (1 & a[0]) throw a[1];\n            return a[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return s = {\n        next: o(0),\n        throw: o(1),\n        return: o(2)\n    }, \"function\" == typeof Symbol && (s[Symbol.iterator] = function() {\n        return this;\n    }), s;\n    function o(s) {\n        return function(o) {\n            return function(s) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for(; n;)try {\n                    if (r = 1, i && (a = 2 & s[0] ? i.return : s[0] ? i.throw || ((a = i.return) && a.call(i), 0) : i.next) && !(a = a.call(i, s[1])).done) return a;\n                    switch(i = 0, a && (s = [\n                        2 & s[0],\n                        a.value\n                    ]), s[0]){\n                        case 0:\n                        case 1:\n                            a = s;\n                            break;\n                        case 4:\n                            return n.label++, {\n                                value: s[1],\n                                done: !1\n                            };\n                        case 5:\n                            n.label++, i = s[1], s = [\n                                0\n                            ];\n                            continue;\n                        case 7:\n                            s = n.ops.pop(), n.trys.pop();\n                            continue;\n                        default:\n                            if (!(a = n.trys, (a = a.length > 0 && a[a.length - 1]) || 6 !== s[0] && 2 !== s[0])) {\n                                n = 0;\n                                continue;\n                            }\n                            if (3 === s[0] && (!a || s[1] > a[0] && s[1] < a[3])) {\n                                n.label = s[1];\n                                break;\n                            }\n                            if (6 === s[0] && n.label < a[1]) {\n                                n.label = a[1], a = s;\n                                break;\n                            }\n                            if (a && n.label < a[2]) {\n                                n.label = a[2], n.ops.push(s);\n                                break;\n                            }\n                            a[2] && n.ops.pop(), n.trys.pop();\n                            continue;\n                    }\n                    s = e.call(t, n);\n                } catch (t) {\n                    s = [\n                        6,\n                        t\n                    ], i = 0;\n                } finally{\n                    r = a = 0;\n                }\n                if (5 & s[0]) throw s[1];\n                return {\n                    value: s[0] ? s[1] : void 0,\n                    done: !0\n                };\n            }([\n                s,\n                o\n            ]);\n        };\n    }\n}\nvar __createBinding = Object.create ? function(t, e, r, i) {\n    void 0 === i && (i = r), Object.defineProperty(t, i, {\n        enumerable: !0,\n        get: function() {\n            return e[r];\n        }\n    });\n} : function(t, e, r, i) {\n    void 0 === i && (i = r), t[i] = e[r];\n};\nfunction __exportStar(t, e) {\n    for(var r in t)\"default\" === r || Object.prototype.hasOwnProperty.call(e, r) || __createBinding(e, t, r);\n}\nfunction __values(t) {\n    var e = \"function\" == typeof Symbol && Symbol.iterator, r = e && t[e], i = 0;\n    if (r) return r.call(t);\n    if (t && \"number\" == typeof t.length) return {\n        next: function() {\n            return t && i >= t.length && (t = void 0), {\n                value: t && t[i++],\n                done: !t\n            };\n        }\n    };\n    throw new TypeError(e ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(t, e) {\n    var r = \"function\" == typeof Symbol && t[Symbol.iterator];\n    if (!r) return t;\n    var i, a, s = r.call(t), n = [];\n    try {\n        for(; (void 0 === e || e-- > 0) && !(i = s.next()).done;)n.push(i.value);\n    } catch (t) {\n        a = {\n            error: t\n        };\n    } finally{\n        try {\n            i && !i.done && (r = s.return) && r.call(s);\n        } finally{\n            if (a) throw a.error;\n        }\n    }\n    return n;\n}\nfunction __spread() {\n    for(var t = [], e = 0; e < arguments.length; e++)t = t.concat(__read(arguments[e]));\n    return t;\n}\nfunction __spreadArrays() {\n    for(var t = 0, e = 0, r = arguments.length; e < r; e++)t += arguments[e].length;\n    var i = Array(t), a = 0;\n    for(e = 0; e < r; e++)for(var s = arguments[e], n = 0, o = s.length; n < o; n++, a++)i[a] = s[n];\n    return i;\n}\nfunction __spreadArray(t, e, r) {\n    if (r || 2 === arguments.length) for(var i, a = 0, s = e.length; a < s; a++)!i && a in e || (i || (i = Array.prototype.slice.call(e, 0, a)), i[a] = e[a]);\n    return t.concat(i || Array.prototype.slice.call(e));\n}\nfunction __await(t) {\n    return this instanceof __await ? (this.v = t, this) : new __await(t);\n}\nfunction __asyncGenerator(t, e, r) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var i, a = r.apply(t, e || []), s = [];\n    return i = {}, n(\"next\"), n(\"throw\"), n(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function n(t) {\n        a[t] && (i[t] = function(e) {\n            return new Promise(function(r, i) {\n                s.push([\n                    t,\n                    e,\n                    r,\n                    i\n                ]) > 1 || o(t, e);\n            });\n        });\n    }\n    function o(t, e) {\n        try {\n            (r = a[t](e)).value instanceof __await ? Promise.resolve(r.value.v).then(h, l) : p(s[0][2], r);\n        } catch (t) {\n            p(s[0][3], t);\n        }\n        var r;\n    }\n    function h(t) {\n        o(\"next\", t);\n    }\n    function l(t) {\n        o(\"throw\", t);\n    }\n    function p(t, e) {\n        t(e), s.shift(), s.length && o(s[0][0], s[0][1]);\n    }\n}\nfunction __asyncDelegator(t) {\n    var e, r;\n    return e = {}, i(\"next\"), i(\"throw\", function(t) {\n        throw t;\n    }), i(\"return\"), e[Symbol.iterator] = function() {\n        return this;\n    }, e;\n    function i(i, a) {\n        e[i] = t[i] ? function(e) {\n            return (r = !r) ? {\n                value: __await(t[i](e)),\n                done: \"return\" === i\n            } : a ? a(e) : e;\n        } : a;\n    }\n}\nfunction __asyncValues(t) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var e, r = t[Symbol.asyncIterator];\n    return r ? r.call(t) : (t = \"function\" == typeof __values ? __values(t) : t[Symbol.iterator](), e = {}, i(\"next\"), i(\"throw\"), i(\"return\"), e[Symbol.asyncIterator] = function() {\n        return this;\n    }, e);\n    function i(r) {\n        e[r] = t[r] && function(e) {\n            return new Promise(function(i, a) {\n                (function(t, e, r, i) {\n                    Promise.resolve(i).then(function(e) {\n                        t({\n                            value: e,\n                            done: r\n                        });\n                    }, e);\n                })(i, a, (e = t[r](e)).done, e.value);\n            });\n        };\n    }\n}\nfunction __makeTemplateObject(t, e) {\n    return Object.defineProperty ? Object.defineProperty(t, \"raw\", {\n        value: e\n    }) : t.raw = e, t;\n}\nvar __setModuleDefault = Object.create ? function(t, e) {\n    Object.defineProperty(t, \"default\", {\n        enumerable: !0,\n        value: e\n    });\n} : function(t, e) {\n    t.default = e;\n};\nfunction __importStar(t) {\n    if (t && t.__esModule) return t;\n    var e = {};\n    if (null != t) for(var r in t)\"default\" !== r && Object.prototype.hasOwnProperty.call(t, r) && __createBinding(e, t, r);\n    return __setModuleDefault(e, t), e;\n}\nfunction __importDefault(t) {\n    return t && t.__esModule ? t : {\n        default: t\n    };\n}\nfunction __classPrivateFieldGet(t, e, r, i) {\n    if (\"a\" === r && !i) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (\"function\" == typeof e ? t !== e || !i : !e.has(t)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return \"m\" === r ? i : \"a\" === r ? i.call(t) : i ? i.value : e.get(t);\n}\nfunction __classPrivateFieldSet(t, e, r, i, a) {\n    if (\"m\" === i) throw new TypeError(\"Private method is not writable\");\n    if (\"a\" === i && !a) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (\"function\" == typeof e ? t !== e || !a : !e.has(t)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return \"a\" === i ? a.call(t, r) : a ? a.value = r : e.set(t, r), r;\n}\nvar commonjsGlobal = \"undefined\" != typeof globalThis ? globalThis :  true ? window : 0;\nfunction unwrapExports(t) {\n    return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, \"default\") ? t.default : t;\n}\nfunction createCommonjsModule(t, e) {\n    return t(e = {\n        exports: {}\n    }, e.exports), e.exports;\n}\nfunction getCjsExportFromNamespace(t) {\n    return t && t.default || t;\n}\nfunction commonjsRequire() {\n    throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\nvar lottie = createCommonjsModule(function(module, exports) {\n    \"undefined\" != typeof navigator && function(t, e) {\n        module.exports = e();\n    }(0, function() {\n        var svgNS = \"http://www.w3.org/2000/svg\", locationHref = \"\", _useWebWorker = !1, initialDefaultFrame = -999999, setWebWorker = function(t) {\n            _useWebWorker = !!t;\n        }, getWebWorker = function() {\n            return _useWebWorker;\n        }, setLocationHref = function(t) {\n            locationHref = t;\n        }, getLocationHref = function() {\n            return locationHref;\n        };\n        function createTag(t) {\n            return document.createElement(t);\n        }\n        function extendPrototype(t, e) {\n            var r, i, a = t.length;\n            for(r = 0; r < a; r += 1)for(var s in i = t[r].prototype)Object.prototype.hasOwnProperty.call(i, s) && (e.prototype[s] = i[s]);\n        }\n        function getDescriptor(t, e) {\n            return Object.getOwnPropertyDescriptor(t, e);\n        }\n        function createProxyFunction(t) {\n            function e() {}\n            return e.prototype = t, e;\n        }\n        var audioControllerFactory = function() {\n            function t(t) {\n                this.audios = [], this.audioFactory = t, this._volume = 1, this._isMuted = !1;\n            }\n            return t.prototype = {\n                addAudio: function(t) {\n                    this.audios.push(t);\n                },\n                pause: function() {\n                    var t, e = this.audios.length;\n                    for(t = 0; t < e; t += 1)this.audios[t].pause();\n                },\n                resume: function() {\n                    var t, e = this.audios.length;\n                    for(t = 0; t < e; t += 1)this.audios[t].resume();\n                },\n                setRate: function(t) {\n                    var e, r = this.audios.length;\n                    for(e = 0; e < r; e += 1)this.audios[e].setRate(t);\n                },\n                createAudio: function(t) {\n                    return this.audioFactory ? this.audioFactory(t) : window.Howl ? new window.Howl({\n                        src: [\n                            t\n                        ]\n                    }) : {\n                        isPlaying: !1,\n                        play: function() {\n                            this.isPlaying = !0;\n                        },\n                        seek: function() {\n                            this.isPlaying = !1;\n                        },\n                        playing: function() {},\n                        rate: function() {},\n                        setVolume: function() {}\n                    };\n                },\n                setAudioFactory: function(t) {\n                    this.audioFactory = t;\n                },\n                setVolume: function(t) {\n                    this._volume = t, this._updateVolume();\n                },\n                mute: function() {\n                    this._isMuted = !0, this._updateVolume();\n                },\n                unmute: function() {\n                    this._isMuted = !1, this._updateVolume();\n                },\n                getVolume: function() {\n                    return this._volume;\n                },\n                _updateVolume: function() {\n                    var t, e = this.audios.length;\n                    for(t = 0; t < e; t += 1)this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1));\n                }\n            }, function() {\n                return new t;\n            };\n        }(), createTypedArray = function() {\n            function t(t, e) {\n                var r, i = 0, a = [];\n                switch(t){\n                    case \"int16\":\n                    case \"uint8c\":\n                        r = 1;\n                        break;\n                    default:\n                        r = 1.1;\n                }\n                for(i = 0; i < e; i += 1)a.push(r);\n                return a;\n            }\n            return \"function\" == typeof Uint8ClampedArray && \"function\" == typeof Float32Array ? function(e, r) {\n                return \"float32\" === e ? new Float32Array(r) : \"int16\" === e ? new Int16Array(r) : \"uint8c\" === e ? new Uint8ClampedArray(r) : t(e, r);\n            } : t;\n        }();\n        function createSizedArray(t) {\n            return Array.apply(null, {\n                length: t\n            });\n        }\n        function _typeof$6(t) {\n            return (_typeof$6 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        var subframeEnabled = !0, expressionsPlugin = null, expressionsInterfaces = null, idPrefix$1 = \"\", isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent), _shouldRoundValues = !1, bmPow = Math.pow, bmSqrt = Math.sqrt, bmFloor = Math.floor, bmMax = Math.max, bmMin = Math.min, BMMath = {};\n        function ProjectInterface$1() {\n            return {};\n        }\n        !function() {\n            var t, e = [\n                \"abs\",\n                \"acos\",\n                \"acosh\",\n                \"asin\",\n                \"asinh\",\n                \"atan\",\n                \"atanh\",\n                \"atan2\",\n                \"ceil\",\n                \"cbrt\",\n                \"expm1\",\n                \"clz32\",\n                \"cos\",\n                \"cosh\",\n                \"exp\",\n                \"floor\",\n                \"fround\",\n                \"hypot\",\n                \"imul\",\n                \"log\",\n                \"log1p\",\n                \"log2\",\n                \"log10\",\n                \"max\",\n                \"min\",\n                \"pow\",\n                \"random\",\n                \"round\",\n                \"sign\",\n                \"sin\",\n                \"sinh\",\n                \"sqrt\",\n                \"tan\",\n                \"tanh\",\n                \"trunc\",\n                \"E\",\n                \"LN10\",\n                \"LN2\",\n                \"LOG10E\",\n                \"LOG2E\",\n                \"PI\",\n                \"SQRT1_2\",\n                \"SQRT2\"\n            ], r = e.length;\n            for(t = 0; t < r; t += 1)BMMath[e[t]] = Math[e[t]];\n        }(), BMMath.random = Math.random, BMMath.abs = function(t) {\n            if (\"object\" === _typeof$6(t) && t.length) {\n                var e, r = createSizedArray(t.length), i = t.length;\n                for(e = 0; e < i; e += 1)r[e] = Math.abs(t[e]);\n                return r;\n            }\n            return Math.abs(t);\n        };\n        var defaultCurveSegments = 150, degToRads = Math.PI / 180, roundCorner = .5519;\n        function roundValues(t) {\n            _shouldRoundValues = !!t;\n        }\n        function bmRnd(t) {\n            return _shouldRoundValues ? Math.round(t) : t;\n        }\n        function styleDiv(t) {\n            t.style.position = \"absolute\", t.style.top = 0, t.style.left = 0, t.style.display = \"block\", t.style.transformOrigin = \"0 0\", t.style.webkitTransformOrigin = \"0 0\", t.style.backfaceVisibility = \"visible\", t.style.webkitBackfaceVisibility = \"visible\", t.style.transformStyle = \"preserve-3d\", t.style.webkitTransformStyle = \"preserve-3d\", t.style.mozTransformStyle = \"preserve-3d\";\n        }\n        function BMEnterFrameEvent(t, e, r, i) {\n            this.type = t, this.currentTime = e, this.totalTime = r, this.direction = i < 0 ? -1 : 1;\n        }\n        function BMCompleteEvent(t, e) {\n            this.type = t, this.direction = e < 0 ? -1 : 1;\n        }\n        function BMCompleteLoopEvent(t, e, r, i) {\n            this.type = t, this.currentLoop = r, this.totalLoops = e, this.direction = i < 0 ? -1 : 1;\n        }\n        function BMSegmentStartEvent(t, e, r) {\n            this.type = t, this.firstFrame = e, this.totalFrames = r;\n        }\n        function BMDestroyEvent(t, e) {\n            this.type = t, this.target = e;\n        }\n        function BMRenderFrameErrorEvent(t, e) {\n            this.type = \"renderFrameError\", this.nativeError = t, this.currentTime = e;\n        }\n        function BMConfigErrorEvent(t) {\n            this.type = \"configError\", this.nativeError = t;\n        }\n        function BMAnimationConfigErrorEvent(t, e) {\n            this.type = t, this.nativeError = e;\n        }\n        var createElementID = (_count = 0, function() {\n            return idPrefix$1 + \"__lottie_element_\" + (_count += 1);\n        }), _count;\n        function HSVtoRGB(t, e, r) {\n            var i, a, s, n, o, h, l, p;\n            switch(h = r * (1 - e), l = r * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e), p = r * (1 - (1 - o) * e), n % 6){\n                case 0:\n                    i = r, a = p, s = h;\n                    break;\n                case 1:\n                    i = l, a = r, s = h;\n                    break;\n                case 2:\n                    i = h, a = r, s = p;\n                    break;\n                case 3:\n                    i = h, a = l, s = r;\n                    break;\n                case 4:\n                    i = p, a = h, s = r;\n                    break;\n                case 5:\n                    i = r, a = h, s = l;\n            }\n            return [\n                i,\n                a,\n                s\n            ];\n        }\n        function RGBtoHSV(t, e, r) {\n            var i, a = Math.max(t, e, r), s = Math.min(t, e, r), n = a - s, o = 0 === a ? 0 : n / a, h = a / 255;\n            switch(a){\n                case s:\n                    i = 0;\n                    break;\n                case t:\n                    i = e - r + n * (e < r ? 6 : 0), i /= 6 * n;\n                    break;\n                case e:\n                    i = r - t + 2 * n, i /= 6 * n;\n                    break;\n                case r:\n                    i = t - e + 4 * n, i /= 6 * n;\n            }\n            return [\n                i,\n                o,\n                h\n            ];\n        }\n        function addSaturationToRGB(t, e) {\n            var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);\n            return r[1] += e, r[1] > 1 ? r[1] = 1 : r[1] <= 0 && (r[1] = 0), HSVtoRGB(r[0], r[1], r[2]);\n        }\n        function addBrightnessToRGB(t, e) {\n            var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);\n            return r[2] += e, r[2] > 1 ? r[2] = 1 : r[2] < 0 && (r[2] = 0), HSVtoRGB(r[0], r[1], r[2]);\n        }\n        function addHueToRGB(t, e) {\n            var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);\n            return r[0] += e / 360, r[0] > 1 ? r[0] -= 1 : r[0] < 0 && (r[0] += 1), HSVtoRGB(r[0], r[1], r[2]);\n        }\n        var rgbToHex = function() {\n            var t, e, r = [];\n            for(t = 0; t < 256; t += 1)e = t.toString(16), r[t] = 1 === e.length ? \"0\" + e : e;\n            return function(t, e, i) {\n                return t < 0 && (t = 0), e < 0 && (e = 0), i < 0 && (i = 0), \"#\" + r[t] + r[e] + r[i];\n            };\n        }(), setSubframeEnabled = function(t) {\n            subframeEnabled = !!t;\n        }, getSubframeEnabled = function() {\n            return subframeEnabled;\n        }, setExpressionsPlugin = function(t) {\n            expressionsPlugin = t;\n        }, getExpressionsPlugin = function() {\n            return expressionsPlugin;\n        }, setExpressionInterfaces = function(t) {\n            expressionsInterfaces = t;\n        }, getExpressionInterfaces = function() {\n            return expressionsInterfaces;\n        }, setDefaultCurveSegments = function(t) {\n            defaultCurveSegments = t;\n        }, getDefaultCurveSegments = function() {\n            return defaultCurveSegments;\n        }, setIdPrefix = function(t) {\n            idPrefix$1 = t;\n        }, getIdPrefix = function() {\n            return idPrefix$1;\n        };\n        function createNS(t) {\n            return document.createElementNS(svgNS, t);\n        }\n        function _typeof$5(t) {\n            return (_typeof$5 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        var dataManager = function() {\n            var t, e, r = 1, i = [], a = {\n                onmessage: function() {},\n                postMessage: function(e) {\n                    t({\n                        data: e\n                    });\n                }\n            }, s = {\n                postMessage: function(t) {\n                    a.onmessage({\n                        data: t\n                    });\n                }\n            };\n            function n() {\n                e || ((e = function(e) {\n                    if (window.Worker && window.Blob && getWebWorker()) {\n                        var r = new Blob([\n                            \"var _workerSelf = self; self.onmessage = \",\n                            e.toString()\n                        ], {\n                            type: \"text/javascript\"\n                        }), i = URL.createObjectURL(r);\n                        return new Worker(i);\n                    }\n                    return t = e, a;\n                }(function(t) {\n                    if (s.dataManager || (s.dataManager = function() {\n                        function t(a, s) {\n                            var n, o, h, l, p, c, m = a.length;\n                            for(o = 0; o < m; o += 1)if (\"ks\" in (n = a[o]) && !n.completed) {\n                                if (n.completed = !0, n.hasMask) {\n                                    var d = n.masksProperties;\n                                    for(l = d.length, h = 0; h < l; h += 1)if (d[h].pt.k.i) i(d[h].pt.k);\n                                    else for(c = d[h].pt.k.length, p = 0; p < c; p += 1)d[h].pt.k[p].s && i(d[h].pt.k[p].s[0]), d[h].pt.k[p].e && i(d[h].pt.k[p].e[0]);\n                                }\n                                0 === n.ty ? (n.layers = e(n.refId, s), t(n.layers, s)) : 4 === n.ty ? r(n.shapes) : 5 === n.ty && f(n);\n                            }\n                        }\n                        function e(t, e) {\n                            var r = function(t, e) {\n                                for(var r = 0, i = e.length; r < i;){\n                                    if (e[r].id === t) return e[r];\n                                    r += 1;\n                                }\n                                return null;\n                            }(t, e);\n                            return r ? r.layers.__used ? JSON.parse(JSON.stringify(r.layers)) : (r.layers.__used = !0, r.layers) : null;\n                        }\n                        function r(t) {\n                            var e, a, s;\n                            for(e = t.length - 1; e >= 0; e -= 1)if (\"sh\" === t[e].ty) if (t[e].ks.k.i) i(t[e].ks.k);\n                            else for(s = t[e].ks.k.length, a = 0; a < s; a += 1)t[e].ks.k[a].s && i(t[e].ks.k[a].s[0]), t[e].ks.k[a].e && i(t[e].ks.k[a].e[0]);\n                            else \"gr\" === t[e].ty && r(t[e].it);\n                        }\n                        function i(t) {\n                            var e, r = t.i.length;\n                            for(e = 0; e < r; e += 1)t.i[e][0] += t.v[e][0], t.i[e][1] += t.v[e][1], t.o[e][0] += t.v[e][0], t.o[e][1] += t.v[e][1];\n                        }\n                        function a(t, e) {\n                            var r = e ? e.split(\".\") : [\n                                100,\n                                100,\n                                100\n                            ];\n                            return t[0] > r[0] || !(r[0] > t[0]) && (t[1] > r[1] || !(r[1] > t[1]) && (t[2] > r[2] || !(r[2] > t[2]) && null));\n                        }\n                        var s, n = function() {\n                            var t = [\n                                4,\n                                4,\n                                14\n                            ];\n                            function e(t) {\n                                var e, r, i, a = t.length;\n                                for(e = 0; e < a; e += 1)5 === t[e].ty && (r = t[e], i = void 0, i = r.t.d, r.t.d = {\n                                    k: [\n                                        {\n                                            s: i,\n                                            t: 0\n                                        }\n                                    ]\n                                });\n                            }\n                            return function(r) {\n                                if (a(t, r.v) && (e(r.layers), r.assets)) {\n                                    var i, s = r.assets.length;\n                                    for(i = 0; i < s; i += 1)r.assets[i].layers && e(r.assets[i].layers);\n                                }\n                            };\n                        }(), o = (s = [\n                            4,\n                            7,\n                            99\n                        ], function(t) {\n                            if (t.chars && !a(s, t.v)) {\n                                var e, i = t.chars.length;\n                                for(e = 0; e < i; e += 1){\n                                    var n = t.chars[e];\n                                    n.data && n.data.shapes && (r(n.data.shapes), n.data.ip = 0, n.data.op = 99999, n.data.st = 0, n.data.sr = 1, n.data.ks = {\n                                        p: {\n                                            k: [\n                                                0,\n                                                0\n                                            ],\n                                            a: 0\n                                        },\n                                        s: {\n                                            k: [\n                                                100,\n                                                100\n                                            ],\n                                            a: 0\n                                        },\n                                        a: {\n                                            k: [\n                                                0,\n                                                0\n                                            ],\n                                            a: 0\n                                        },\n                                        r: {\n                                            k: 0,\n                                            a: 0\n                                        },\n                                        o: {\n                                            k: 100,\n                                            a: 0\n                                        }\n                                    }, t.chars[e].t || (n.data.shapes.push({\n                                        ty: \"no\"\n                                    }), n.data.shapes[0].it.push({\n                                        p: {\n                                            k: [\n                                                0,\n                                                0\n                                            ],\n                                            a: 0\n                                        },\n                                        s: {\n                                            k: [\n                                                100,\n                                                100\n                                            ],\n                                            a: 0\n                                        },\n                                        a: {\n                                            k: [\n                                                0,\n                                                0\n                                            ],\n                                            a: 0\n                                        },\n                                        r: {\n                                            k: 0,\n                                            a: 0\n                                        },\n                                        o: {\n                                            k: 100,\n                                            a: 0\n                                        },\n                                        sk: {\n                                            k: 0,\n                                            a: 0\n                                        },\n                                        sa: {\n                                            k: 0,\n                                            a: 0\n                                        },\n                                        ty: \"tr\"\n                                    })));\n                                }\n                            }\n                        }), h = function() {\n                            var t = [\n                                5,\n                                7,\n                                15\n                            ];\n                            function e(t) {\n                                var e, r, i, a = t.length;\n                                for(e = 0; e < a; e += 1)5 === t[e].ty && (r = t[e], i = void 0, \"number\" == typeof (i = r.t.p).a && (i.a = {\n                                    a: 0,\n                                    k: i.a\n                                }), \"number\" == typeof i.p && (i.p = {\n                                    a: 0,\n                                    k: i.p\n                                }), \"number\" == typeof i.r && (i.r = {\n                                    a: 0,\n                                    k: i.r\n                                }));\n                            }\n                            return function(r) {\n                                if (a(t, r.v) && (e(r.layers), r.assets)) {\n                                    var i, s = r.assets.length;\n                                    for(i = 0; i < s; i += 1)r.assets[i].layers && e(r.assets[i].layers);\n                                }\n                            };\n                        }(), l = function() {\n                            var t = [\n                                4,\n                                1,\n                                9\n                            ];\n                            function e(t) {\n                                var r, i, a, s = t.length;\n                                for(r = 0; r < s; r += 1)if (\"gr\" === t[r].ty) e(t[r].it);\n                                else if (\"fl\" === t[r].ty || \"st\" === t[r].ty) if (t[r].c.k && t[r].c.k[0].i) for(a = t[r].c.k.length, i = 0; i < a; i += 1)t[r].c.k[i].s && (t[r].c.k[i].s[0] /= 255, t[r].c.k[i].s[1] /= 255, t[r].c.k[i].s[2] /= 255, t[r].c.k[i].s[3] /= 255), t[r].c.k[i].e && (t[r].c.k[i].e[0] /= 255, t[r].c.k[i].e[1] /= 255, t[r].c.k[i].e[2] /= 255, t[r].c.k[i].e[3] /= 255);\n                                else t[r].c.k[0] /= 255, t[r].c.k[1] /= 255, t[r].c.k[2] /= 255, t[r].c.k[3] /= 255;\n                            }\n                            function r(t) {\n                                var r, i = t.length;\n                                for(r = 0; r < i; r += 1)4 === t[r].ty && e(t[r].shapes);\n                            }\n                            return function(e) {\n                                if (a(t, e.v) && (r(e.layers), e.assets)) {\n                                    var i, s = e.assets.length;\n                                    for(i = 0; i < s; i += 1)e.assets[i].layers && r(e.assets[i].layers);\n                                }\n                            };\n                        }(), p = function() {\n                            var t = [\n                                4,\n                                4,\n                                18\n                            ];\n                            function e(t) {\n                                var r, i, a;\n                                for(r = t.length - 1; r >= 0; r -= 1)if (\"sh\" === t[r].ty) if (t[r].ks.k.i) t[r].ks.k.c = t[r].closed;\n                                else for(a = t[r].ks.k.length, i = 0; i < a; i += 1)t[r].ks.k[i].s && (t[r].ks.k[i].s[0].c = t[r].closed), t[r].ks.k[i].e && (t[r].ks.k[i].e[0].c = t[r].closed);\n                                else \"gr\" === t[r].ty && e(t[r].it);\n                            }\n                            function r(t) {\n                                var r, i, a, s, n, o, h = t.length;\n                                for(i = 0; i < h; i += 1){\n                                    if ((r = t[i]).hasMask) {\n                                        var l = r.masksProperties;\n                                        for(s = l.length, a = 0; a < s; a += 1)if (l[a].pt.k.i) l[a].pt.k.c = l[a].cl;\n                                        else for(o = l[a].pt.k.length, n = 0; n < o; n += 1)l[a].pt.k[n].s && (l[a].pt.k[n].s[0].c = l[a].cl), l[a].pt.k[n].e && (l[a].pt.k[n].e[0].c = l[a].cl);\n                                    }\n                                    4 === r.ty && e(r.shapes);\n                                }\n                            }\n                            return function(e) {\n                                if (a(t, e.v) && (r(e.layers), e.assets)) {\n                                    var i, s = e.assets.length;\n                                    for(i = 0; i < s; i += 1)e.assets[i].layers && r(e.assets[i].layers);\n                                }\n                            };\n                        }();\n                        function f(t) {\n                            0 === t.t.a.length && t.t.p;\n                        }\n                        var c = {\n                            completeData: function(r) {\n                                r.__complete || (l(r), n(r), o(r), h(r), p(r), t(r.layers, r.assets), function(r, i) {\n                                    if (r) {\n                                        var a = 0, s = r.length;\n                                        for(a = 0; a < s; a += 1)1 === r[a].t && (r[a].data.layers = e(r[a].data.refId, i), t(r[a].data.layers, i));\n                                    }\n                                }(r.chars, r.assets), r.__complete = !0);\n                            }\n                        };\n                        return c.checkColors = l, c.checkChars = o, c.checkPathProperties = h, c.checkShapes = p, c.completeLayers = t, c;\n                    }()), s.assetLoader || (s.assetLoader = function() {\n                        function t(t) {\n                            var e = t.getResponseHeader(\"content-type\");\n                            return e && \"json\" === t.responseType && -1 !== e.indexOf(\"json\") || t.response && \"object\" === _typeof$5(t.response) ? t.response : t.response && \"string\" == typeof t.response ? JSON.parse(t.response) : t.responseText ? JSON.parse(t.responseText) : null;\n                        }\n                        return {\n                            load: function(e, r, i, a) {\n                                var s, n = new XMLHttpRequest;\n                                try {\n                                    n.responseType = \"json\";\n                                } catch (t) {}\n                                n.onreadystatechange = function() {\n                                    if (4 === n.readyState) if (200 === n.status) s = t(n), i(s);\n                                    else try {\n                                        s = t(n), i(s);\n                                    } catch (t) {\n                                        a && a(t);\n                                    }\n                                };\n                                try {\n                                    n.open([\n                                        \"G\",\n                                        \"E\",\n                                        \"T\"\n                                    ].join(\"\"), e, !0);\n                                } catch (t) {\n                                    n.open([\n                                        \"G\",\n                                        \"E\",\n                                        \"T\"\n                                    ].join(\"\"), r + \"/\" + e, !0);\n                                }\n                                n.send();\n                            }\n                        };\n                    }()), \"loadAnimation\" === t.data.type) s.assetLoader.load(t.data.path, t.data.fullPath, function(e) {\n                        s.dataManager.completeData(e), s.postMessage({\n                            id: t.data.id,\n                            payload: e,\n                            status: \"success\"\n                        });\n                    }, function() {\n                        s.postMessage({\n                            id: t.data.id,\n                            status: \"error\"\n                        });\n                    });\n                    else if (\"complete\" === t.data.type) {\n                        var e = t.data.animation;\n                        s.dataManager.completeData(e), s.postMessage({\n                            id: t.data.id,\n                            payload: e,\n                            status: \"success\"\n                        });\n                    } else \"loadData\" === t.data.type && s.assetLoader.load(t.data.path, t.data.fullPath, function(e) {\n                        s.postMessage({\n                            id: t.data.id,\n                            payload: e,\n                            status: \"success\"\n                        });\n                    }, function() {\n                        s.postMessage({\n                            id: t.data.id,\n                            status: \"error\"\n                        });\n                    });\n                })).onmessage = function(t) {\n                    var e = t.data, r = e.id, a = i[r];\n                    i[r] = null, \"success\" === e.status ? a.onComplete(e.payload) : a.onError && a.onError();\n                });\n            }\n            function o(t, e) {\n                var a = \"processId_\" + (r += 1);\n                return i[a] = {\n                    onComplete: t,\n                    onError: e\n                }, a;\n            }\n            return {\n                loadAnimation: function(t, r, i) {\n                    n();\n                    var a = o(r, i);\n                    e.postMessage({\n                        type: \"loadAnimation\",\n                        path: t,\n                        fullPath: window.location.origin + window.location.pathname,\n                        id: a\n                    });\n                },\n                loadData: function(t, r, i) {\n                    n();\n                    var a = o(r, i);\n                    e.postMessage({\n                        type: \"loadData\",\n                        path: t,\n                        fullPath: window.location.origin + window.location.pathname,\n                        id: a\n                    });\n                },\n                completeAnimation: function(t, r, i) {\n                    n();\n                    var a = o(r, i);\n                    e.postMessage({\n                        type: \"complete\",\n                        animation: t,\n                        id: a\n                    });\n                }\n            };\n        }(), ImagePreloader = function() {\n            var t = function() {\n                var t = createTag(\"canvas\");\n                t.width = 1, t.height = 1;\n                var e = t.getContext(\"2d\");\n                return e.fillStyle = \"rgba(0,0,0,0)\", e.fillRect(0, 0, 1, 1), t;\n            }();\n            function e() {\n                this.loadedAssets += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);\n            }\n            function r() {\n                this.loadedFootagesCount += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);\n            }\n            function i(t, e, r) {\n                var i = \"\";\n                if (t.e) i = t.p;\n                else if (e) {\n                    var a = t.p;\n                    -1 !== a.indexOf(\"images/\") && (a = a.split(\"/\")[1]), i = e + a;\n                } else i = r, i += t.u ? t.u : \"\", i += t.p;\n                return i;\n            }\n            function a(t) {\n                var e = 0, r = setInterval((function() {\n                    (t.getBBox().width || e > 500) && (this._imageLoaded(), clearInterval(r)), e += 1;\n                }).bind(this), 50);\n            }\n            function s(t) {\n                var e = {\n                    assetData: t\n                }, r = i(t, this.assetsPath, this.path);\n                return dataManager.loadData(r, (function(t) {\n                    e.img = t, this._footageLoaded();\n                }).bind(this), (function() {\n                    e.img = {}, this._footageLoaded();\n                }).bind(this)), e;\n            }\n            function n() {\n                this._imageLoaded = e.bind(this), this._footageLoaded = r.bind(this), this.testImageLoaded = a.bind(this), this.createFootageData = s.bind(this), this.assetsPath = \"\", this.path = \"\", this.totalImages = 0, this.totalFootages = 0, this.loadedAssets = 0, this.loadedFootagesCount = 0, this.imagesLoadedCb = null, this.images = [];\n            }\n            return n.prototype = {\n                loadAssets: function(t, e) {\n                    var r;\n                    this.imagesLoadedCb = e;\n                    var i = t.length;\n                    for(r = 0; r < i; r += 1)t[r].layers || (t[r].t && \"seq\" !== t[r].t ? 3 === t[r].t && (this.totalFootages += 1, this.images.push(this.createFootageData(t[r]))) : (this.totalImages += 1, this.images.push(this._createImageData(t[r]))));\n                },\n                setAssetsPath: function(t) {\n                    this.assetsPath = t || \"\";\n                },\n                setPath: function(t) {\n                    this.path = t || \"\";\n                },\n                loadedImages: function() {\n                    return this.totalImages === this.loadedAssets;\n                },\n                loadedFootages: function() {\n                    return this.totalFootages === this.loadedFootagesCount;\n                },\n                destroy: function() {\n                    this.imagesLoadedCb = null, this.images.length = 0;\n                },\n                getAsset: function(t) {\n                    for(var e = 0, r = this.images.length; e < r;){\n                        if (this.images[e].assetData === t) return this.images[e].img;\n                        e += 1;\n                    }\n                    return null;\n                },\n                createImgData: function(e) {\n                    var r = i(e, this.assetsPath, this.path), a = createTag(\"img\");\n                    a.crossOrigin = \"anonymous\", a.addEventListener(\"load\", this._imageLoaded, !1), a.addEventListener(\"error\", (function() {\n                        s.img = t, this._imageLoaded();\n                    }).bind(this), !1), a.src = r;\n                    var s = {\n                        img: a,\n                        assetData: e\n                    };\n                    return s;\n                },\n                createImageData: function(e) {\n                    var r = i(e, this.assetsPath, this.path), a = createNS(\"image\");\n                    isSafari ? this.testImageLoaded(a) : a.addEventListener(\"load\", this._imageLoaded, !1), a.addEventListener(\"error\", (function() {\n                        s.img = t, this._imageLoaded();\n                    }).bind(this), !1), a.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", r), this._elementHelper.append ? this._elementHelper.append(a) : this._elementHelper.appendChild(a);\n                    var s = {\n                        img: a,\n                        assetData: e\n                    };\n                    return s;\n                },\n                imageLoaded: e,\n                footageLoaded: r,\n                setCacheType: function(t, e) {\n                    \"svg\" === t ? (this._elementHelper = e, this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this);\n                }\n            }, n;\n        }();\n        function BaseEvent() {}\n        BaseEvent.prototype = {\n            triggerEvent: function(t, e) {\n                if (this._cbs[t]) for(var r = this._cbs[t], i = 0; i < r.length; i += 1)r[i](e);\n            },\n            addEventListener: function(t, e) {\n                return this._cbs[t] || (this._cbs[t] = []), this._cbs[t].push(e), (function() {\n                    this.removeEventListener(t, e);\n                }).bind(this);\n            },\n            removeEventListener: function(t, e) {\n                if (e) {\n                    if (this._cbs[t]) {\n                        for(var r = 0, i = this._cbs[t].length; r < i;)this._cbs[t][r] === e && (this._cbs[t].splice(r, 1), r -= 1, i -= 1), r += 1;\n                        this._cbs[t].length || (this._cbs[t] = null);\n                    }\n                } else this._cbs[t] = null;\n            }\n        };\n        var markerParser = function() {\n            function t(t) {\n                for(var e, r = t.split(\"\\r\\n\"), i = {}, a = 0, s = 0; s < r.length; s += 1)2 === (e = r[s].split(\":\")).length && (i[e[0]] = e[1].trim(), a += 1);\n                if (0 === a) throw new Error;\n                return i;\n            }\n            return function(e) {\n                for(var r = [], i = 0; i < e.length; i += 1){\n                    var a = e[i], s = {\n                        time: a.tm,\n                        duration: a.dr\n                    };\n                    try {\n                        s.payload = JSON.parse(e[i].cm);\n                    } catch (r) {\n                        try {\n                            s.payload = t(e[i].cm);\n                        } catch (t) {\n                            s.payload = {\n                                name: e[i].cm\n                            };\n                        }\n                    }\n                    r.push(s);\n                }\n                return r;\n            };\n        }(), ProjectInterface = function() {\n            function t(t) {\n                this.compositions.push(t);\n            }\n            return function() {\n                function e(t) {\n                    for(var e = 0, r = this.compositions.length; e < r;){\n                        if (this.compositions[e].data && this.compositions[e].data.nm === t) return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame), this.compositions[e].compInterface;\n                        e += 1;\n                    }\n                    return null;\n                }\n                return e.compositions = [], e.currentFrame = 0, e.registerComposition = t, e;\n            };\n        }(), renderers = {}, registerRenderer = function(t, e) {\n            renderers[t] = e;\n        };\n        function getRenderer(t) {\n            return renderers[t];\n        }\n        function _typeof$4(t) {\n            return (_typeof$4 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        var AnimationItem = function() {\n            this._cbs = [], this.name = \"\", this.path = \"\", this.isLoaded = !1, this.currentFrame = 0, this.currentRawFrame = 0, this.firstFrame = 0, this.totalFrames = 0, this.frameRate = 0, this.frameMult = 0, this.playSpeed = 1, this.playDirection = 1, this.playCount = 0, this.animationData = {}, this.assets = [], this.isPaused = !0, this.autoplay = !1, this.loop = !0, this.renderer = null, this.animationID = createElementID(), this.assetsPath = \"\", this.timeCompleted = 0, this.segmentPos = 0, this.isSubframeEnabled = getSubframeEnabled(), this.segments = [], this._idle = !0, this._completedLoop = !1, this.projectInterface = ProjectInterface(), this.imagePreloader = new ImagePreloader, this.audioController = audioControllerFactory(), this.markers = [], this.configAnimation = this.configAnimation.bind(this), this.onSetupError = this.onSetupError.bind(this), this.onSegmentComplete = this.onSegmentComplete.bind(this), this.drawnFrameEvent = new BMEnterFrameEvent(\"drawnFrame\", 0, 0, 0);\n        };\n        extendPrototype([\n            BaseEvent\n        ], AnimationItem), AnimationItem.prototype.setParams = function(t) {\n            (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);\n            var e = \"svg\";\n            t.animType ? e = t.animType : t.renderer && (e = t.renderer);\n            var r = getRenderer(e);\n            this.renderer = new r(this, t.rendererSettings), this.imagePreloader.setCacheType(e, this.renderer.globalData.defs), this.renderer.setProjectInterface(this.projectInterface), this.animType = e, \"\" === t.loop || null === t.loop || void 0 === t.loop || !0 === t.loop ? this.loop = !0 : !1 === t.loop ? this.loop = !1 : this.loop = parseInt(t.loop, 10), this.autoplay = !(\"autoplay\" in t) || t.autoplay, this.name = t.name ? t.name : \"\", this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, \"autoloadSegments\") || t.autoloadSegments, this.assetsPath = t.assetsPath, this.initialSegment = t.initialSegment, t.audioFactory && this.audioController.setAudioFactory(t.audioFactory), t.animationData ? this.setupAnimation(t.animationData) : t.path && (-1 !== t.path.lastIndexOf(\"\\\\\") ? this.path = t.path.substr(0, t.path.lastIndexOf(\"\\\\\") + 1) : this.path = t.path.substr(0, t.path.lastIndexOf(\"/\") + 1), this.fileName = t.path.substr(t.path.lastIndexOf(\"/\") + 1), this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(\".json\")), dataManager.loadAnimation(t.path, this.configAnimation, this.onSetupError));\n        }, AnimationItem.prototype.onSetupError = function() {\n            this.trigger(\"data_failed\");\n        }, AnimationItem.prototype.setupAnimation = function(t) {\n            dataManager.completeAnimation(t, this.configAnimation);\n        }, AnimationItem.prototype.setData = function(t, e) {\n            e && \"object\" !== _typeof$4(e) && (e = JSON.parse(e));\n            var r = {\n                wrapper: t,\n                animationData: e\n            }, i = t.attributes;\n            r.path = i.getNamedItem(\"data-animation-path\") ? i.getNamedItem(\"data-animation-path\").value : i.getNamedItem(\"data-bm-path\") ? i.getNamedItem(\"data-bm-path\").value : i.getNamedItem(\"bm-path\") ? i.getNamedItem(\"bm-path\").value : \"\", r.animType = i.getNamedItem(\"data-anim-type\") ? i.getNamedItem(\"data-anim-type\").value : i.getNamedItem(\"data-bm-type\") ? i.getNamedItem(\"data-bm-type\").value : i.getNamedItem(\"bm-type\") ? i.getNamedItem(\"bm-type\").value : i.getNamedItem(\"data-bm-renderer\") ? i.getNamedItem(\"data-bm-renderer\").value : i.getNamedItem(\"bm-renderer\") ? i.getNamedItem(\"bm-renderer\").value : \"canvas\";\n            var a = i.getNamedItem(\"data-anim-loop\") ? i.getNamedItem(\"data-anim-loop\").value : i.getNamedItem(\"data-bm-loop\") ? i.getNamedItem(\"data-bm-loop\").value : i.getNamedItem(\"bm-loop\") ? i.getNamedItem(\"bm-loop\").value : \"\";\n            \"false\" === a ? r.loop = !1 : \"true\" === a ? r.loop = !0 : \"\" !== a && (r.loop = parseInt(a, 10));\n            var s = i.getNamedItem(\"data-anim-autoplay\") ? i.getNamedItem(\"data-anim-autoplay\").value : i.getNamedItem(\"data-bm-autoplay\") ? i.getNamedItem(\"data-bm-autoplay\").value : !i.getNamedItem(\"bm-autoplay\") || i.getNamedItem(\"bm-autoplay\").value;\n            r.autoplay = \"false\" !== s, r.name = i.getNamedItem(\"data-name\") ? i.getNamedItem(\"data-name\").value : i.getNamedItem(\"data-bm-name\") ? i.getNamedItem(\"data-bm-name\").value : i.getNamedItem(\"bm-name\") ? i.getNamedItem(\"bm-name\").value : \"\", \"false\" === (i.getNamedItem(\"data-anim-prerender\") ? i.getNamedItem(\"data-anim-prerender\").value : i.getNamedItem(\"data-bm-prerender\") ? i.getNamedItem(\"data-bm-prerender\").value : i.getNamedItem(\"bm-prerender\") ? i.getNamedItem(\"bm-prerender\").value : \"\") && (r.prerender = !1), this.setParams(r);\n        }, AnimationItem.prototype.includeLayers = function(t) {\n            t.op > this.animationData.op && (this.animationData.op = t.op, this.totalFrames = Math.floor(t.op - this.animationData.ip));\n            var e, r, i = this.animationData.layers, a = i.length, s = t.layers, n = s.length;\n            for(r = 0; r < n; r += 1)for(e = 0; e < a;){\n                if (i[e].id === s[r].id) {\n                    i[e] = s[r];\n                    break;\n                }\n                e += 1;\n            }\n            if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets) for(a = t.assets.length, e = 0; e < a; e += 1)this.animationData.assets.push(t.assets[e]);\n            this.animationData.__complete = !1, dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n        }, AnimationItem.prototype.onSegmentComplete = function(t) {\n            this.animationData = t;\n            var e = getExpressionsPlugin();\n            e && e.initExpressions(this), this.loadNextSegment();\n        }, AnimationItem.prototype.loadNextSegment = function() {\n            var t = this.animationData.segments;\n            if (!t || 0 === t.length || !this.autoloadSegments) return this.trigger(\"data_ready\"), void (this.timeCompleted = this.totalFrames);\n            var e = t.shift();\n            this.timeCompleted = e.time * this.frameRate;\n            var r = this.path + this.fileName + \"_\" + this.segmentPos + \".json\";\n            this.segmentPos += 1, dataManager.loadData(r, this.includeLayers.bind(this), (function() {\n                this.trigger(\"data_failed\");\n            }).bind(this));\n        }, AnimationItem.prototype.loadSegments = function() {\n            this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment();\n        }, AnimationItem.prototype.imagesLoaded = function() {\n            this.trigger(\"loaded_images\"), this.checkLoaded();\n        }, AnimationItem.prototype.preloadImages = function() {\n            this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n        }, AnimationItem.prototype.configAnimation = function(t) {\n            if (this.renderer) try {\n                this.animationData = t, this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]), this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip), this.firstFrame = Math.round(this.animationData.ip)), this.renderer.configAnimation(t), t.assets || (t.assets = []), this.assets = this.animationData.assets, this.frameRate = this.animationData.fr, this.frameMult = this.animationData.fr / 1e3, this.renderer.searchExtraCompositions(t.assets), this.markers = markerParser(t.markers || []), this.trigger(\"config_ready\"), this.preloadImages(), this.loadSegments(), this.updaFrameModifier(), this.waitForFontsLoaded(), this.isPaused && this.audioController.pause();\n            } catch (t) {\n                this.triggerConfigError(t);\n            }\n        }, AnimationItem.prototype.waitForFontsLoaded = function() {\n            this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20));\n        }, AnimationItem.prototype.checkLoaded = function() {\n            if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || \"canvas\" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {\n                this.isLoaded = !0;\n                var t = getExpressionsPlugin();\n                t && t.initExpressions(this), this.renderer.initItems(), setTimeout((function() {\n                    this.trigger(\"DOMLoaded\");\n                }).bind(this), 0), this.gotoFrame(), this.autoplay && this.play();\n            }\n        }, AnimationItem.prototype.resize = function(t, e) {\n            var r = \"number\" == typeof t ? t : void 0, i = \"number\" == typeof e ? e : void 0;\n            this.renderer.updateContainerSize(r, i);\n        }, AnimationItem.prototype.setSubframe = function(t) {\n            this.isSubframeEnabled = !!t;\n        }, AnimationItem.prototype.gotoFrame = function() {\n            this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame, this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted), this.trigger(\"enterFrame\"), this.renderFrame(), this.trigger(\"drawnFrame\");\n        }, AnimationItem.prototype.renderFrame = function() {\n            if (!1 !== this.isLoaded && this.renderer) try {\n                this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n            } catch (t) {\n                this.triggerRenderFrameError(t);\n            }\n        }, AnimationItem.prototype.play = function(t) {\n            t && this.name !== t || !0 === this.isPaused && (this.isPaused = !1, this.trigger(\"_pause\"), this.audioController.resume(), this._idle && (this._idle = !1, this.trigger(\"_active\")));\n        }, AnimationItem.prototype.pause = function(t) {\n            t && this.name !== t || !1 === this.isPaused && (this.isPaused = !0, this.trigger(\"_play\"), this._idle = !0, this.trigger(\"_idle\"), this.audioController.pause());\n        }, AnimationItem.prototype.togglePause = function(t) {\n            t && this.name !== t || (!0 === this.isPaused ? this.play() : this.pause());\n        }, AnimationItem.prototype.stop = function(t) {\n            t && this.name !== t || (this.pause(), this.playCount = 0, this._completedLoop = !1, this.setCurrentRawFrameValue(0));\n        }, AnimationItem.prototype.getMarkerData = function(t) {\n            for(var e, r = 0; r < this.markers.length; r += 1)if ((e = this.markers[r]).payload && e.payload.name === t) return e;\n            return null;\n        }, AnimationItem.prototype.goToAndStop = function(t, e, r) {\n            if (!r || this.name === r) {\n                var i = Number(t);\n                if (isNaN(i)) {\n                    var a = this.getMarkerData(t);\n                    a && this.goToAndStop(a.time, !0);\n                } else e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);\n                this.pause();\n            }\n        }, AnimationItem.prototype.goToAndPlay = function(t, e, r) {\n            if (!r || this.name === r) {\n                var i = Number(t);\n                if (isNaN(i)) {\n                    var a = this.getMarkerData(t);\n                    a && (a.duration ? this.playSegments([\n                        a.time,\n                        a.time + a.duration\n                    ], !0) : this.goToAndStop(a.time, !0));\n                } else this.goToAndStop(i, e, r);\n                this.play();\n            }\n        }, AnimationItem.prototype.advanceTime = function(t) {\n            if (!0 !== this.isPaused && !1 !== this.isLoaded) {\n                var e = this.currentRawFrame + t * this.frameModifier, r = !1;\n                e >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? e >= this.totalFrames ? (this.playCount += 1, this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), this._completedLoop = !0, this.trigger(\"loopComplete\"))) : this.setCurrentRawFrameValue(e) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || (r = !0, e = this.totalFrames - 1) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && !0 !== this.loop ? (r = !0, e = 0) : (this.setCurrentRawFrameValue(this.totalFrames + e % this.totalFrames), this._completedLoop ? this.trigger(\"loopComplete\") : this._completedLoop = !0)) : this.setCurrentRawFrameValue(e), r && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger(\"complete\"));\n            }\n        }, AnimationItem.prototype.adjustSegment = function(t, e) {\n            this.playCount = 0, t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)), this.totalFrames = t[0] - t[1], this.timeCompleted = this.totalFrames, this.firstFrame = t[1], this.setCurrentRawFrameValue(this.totalFrames - .001 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)), this.totalFrames = t[1] - t[0], this.timeCompleted = this.totalFrames, this.firstFrame = t[0], this.setCurrentRawFrameValue(.001 + e)), this.trigger(\"segmentStart\");\n        }, AnimationItem.prototype.setSegment = function(t, e) {\n            var r = -1;\n            this.isPaused && (this.currentRawFrame + this.firstFrame < t ? r = t : this.currentRawFrame + this.firstFrame > e && (r = e - t)), this.firstFrame = t, this.totalFrames = e - t, this.timeCompleted = this.totalFrames, -1 !== r && this.goToAndStop(r, !0);\n        }, AnimationItem.prototype.playSegments = function(t, e) {\n            if (e && (this.segments.length = 0), \"object\" === _typeof$4(t[0])) {\n                var r, i = t.length;\n                for(r = 0; r < i; r += 1)this.segments.push(t[r]);\n            } else this.segments.push(t);\n            this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play();\n        }, AnimationItem.prototype.resetSegments = function(t) {\n            this.segments.length = 0, this.segments.push([\n                this.animationData.ip,\n                this.animationData.op\n            ]), t && this.checkSegments(0);\n        }, AnimationItem.prototype.checkSegments = function(t) {\n            return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), !0);\n        }, AnimationItem.prototype.destroy = function(t) {\n            t && this.name !== t || !this.renderer || (this.renderer.destroy(), this.imagePreloader.destroy(), this.trigger(\"destroy\"), this._cbs = null, this.onEnterFrame = null, this.onLoopComplete = null, this.onComplete = null, this.onSegmentStart = null, this.onDestroy = null, this.renderer = null, this.renderer = null, this.imagePreloader = null, this.projectInterface = null);\n        }, AnimationItem.prototype.setCurrentRawFrameValue = function(t) {\n            this.currentRawFrame = t, this.gotoFrame();\n        }, AnimationItem.prototype.setSpeed = function(t) {\n            this.playSpeed = t, this.updaFrameModifier();\n        }, AnimationItem.prototype.setDirection = function(t) {\n            this.playDirection = t < 0 ? -1 : 1, this.updaFrameModifier();\n        }, AnimationItem.prototype.setLoop = function(t) {\n            this.loop = t;\n        }, AnimationItem.prototype.setVolume = function(t, e) {\n            e && this.name !== e || this.audioController.setVolume(t);\n        }, AnimationItem.prototype.getVolume = function() {\n            return this.audioController.getVolume();\n        }, AnimationItem.prototype.mute = function(t) {\n            t && this.name !== t || this.audioController.mute();\n        }, AnimationItem.prototype.unmute = function(t) {\n            t && this.name !== t || this.audioController.unmute();\n        }, AnimationItem.prototype.updaFrameModifier = function() {\n            this.frameModifier = this.frameMult * this.playSpeed * this.playDirection, this.audioController.setRate(this.playSpeed * this.playDirection);\n        }, AnimationItem.prototype.getPath = function() {\n            return this.path;\n        }, AnimationItem.prototype.getAssetsPath = function(t) {\n            var e = \"\";\n            if (t.e) e = t.p;\n            else if (this.assetsPath) {\n                var r = t.p;\n                -1 !== r.indexOf(\"images/\") && (r = r.split(\"/\")[1]), e = this.assetsPath + r;\n            } else e = this.path, e += t.u ? t.u : \"\", e += t.p;\n            return e;\n        }, AnimationItem.prototype.getAssetData = function(t) {\n            for(var e = 0, r = this.assets.length; e < r;){\n                if (t === this.assets[e].id) return this.assets[e];\n                e += 1;\n            }\n            return null;\n        }, AnimationItem.prototype.hide = function() {\n            this.renderer.hide();\n        }, AnimationItem.prototype.show = function() {\n            this.renderer.show();\n        }, AnimationItem.prototype.getDuration = function(t) {\n            return t ? this.totalFrames : this.totalFrames / this.frameRate;\n        }, AnimationItem.prototype.updateDocumentData = function(t, e, r) {\n            try {\n                this.renderer.getElementByPath(t).updateDocumentData(e, r);\n            } catch (t) {}\n        }, AnimationItem.prototype.trigger = function(t) {\n            if (this._cbs && this._cbs[t]) switch(t){\n                case \"enterFrame\":\n                    this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));\n                    break;\n                case \"drawnFrame\":\n                    this.drawnFrameEvent.currentTime = this.currentFrame, this.drawnFrameEvent.totalTime = this.totalFrames, this.drawnFrameEvent.direction = this.frameModifier, this.triggerEvent(t, this.drawnFrameEvent);\n                    break;\n                case \"loopComplete\":\n                    this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));\n                    break;\n                case \"complete\":\n                    this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));\n                    break;\n                case \"segmentStart\":\n                    this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));\n                    break;\n                case \"destroy\":\n                    this.triggerEvent(t, new BMDestroyEvent(t, this));\n                    break;\n                default:\n                    this.triggerEvent(t);\n            }\n            \"enterFrame\" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)), \"loopComplete\" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)), \"complete\" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)), \"segmentStart\" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)), \"destroy\" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this));\n        }, AnimationItem.prototype.triggerRenderFrameError = function(t) {\n            var e = new BMRenderFrameErrorEvent(t, this.currentFrame);\n            this.triggerEvent(\"error\", e), this.onError && this.onError.call(this, e);\n        }, AnimationItem.prototype.triggerConfigError = function(t) {\n            var e = new BMConfigErrorEvent(t, this.currentFrame);\n            this.triggerEvent(\"error\", e), this.onError && this.onError.call(this, e);\n        };\n        var animationManager = function() {\n            var t = {}, e = [], r = 0, i = 0, a = 0, s = !0, n = !1;\n            function o(t) {\n                for(var r = 0, a = t.target; r < i;)e[r].animation === a && (e.splice(r, 1), r -= 1, i -= 1, a.isPaused || p()), r += 1;\n            }\n            function h(t, r) {\n                if (!t) return null;\n                for(var a = 0; a < i;){\n                    if (e[a].elem === t && null !== e[a].elem) return e[a].animation;\n                    a += 1;\n                }\n                var s = new AnimationItem;\n                return f(s, t), s.setData(t, r), s;\n            }\n            function l() {\n                a += 1, d();\n            }\n            function p() {\n                a -= 1;\n            }\n            function f(t, r) {\n                t.addEventListener(\"destroy\", o), t.addEventListener(\"_active\", l), t.addEventListener(\"_idle\", p), e.push({\n                    elem: r,\n                    animation: t\n                }), i += 1;\n            }\n            function c(t) {\n                var o, h = t - r;\n                for(o = 0; o < i; o += 1)e[o].animation.advanceTime(h);\n                r = t, a && !n ? window.requestAnimationFrame(c) : s = !0;\n            }\n            function m(t) {\n                r = t, window.requestAnimationFrame(c);\n            }\n            function d() {\n                !n && a && s && (window.requestAnimationFrame(m), s = !1);\n            }\n            return t.registerAnimation = h, t.loadAnimation = function(t) {\n                var e = new AnimationItem;\n                return f(e, null), e.setParams(t), e;\n            }, t.setSpeed = function(t, r) {\n                var a;\n                for(a = 0; a < i; a += 1)e[a].animation.setSpeed(t, r);\n            }, t.setDirection = function(t, r) {\n                var a;\n                for(a = 0; a < i; a += 1)e[a].animation.setDirection(t, r);\n            }, t.play = function(t) {\n                var r;\n                for(r = 0; r < i; r += 1)e[r].animation.play(t);\n            }, t.pause = function(t) {\n                var r;\n                for(r = 0; r < i; r += 1)e[r].animation.pause(t);\n            }, t.stop = function(t) {\n                var r;\n                for(r = 0; r < i; r += 1)e[r].animation.stop(t);\n            }, t.togglePause = function(t) {\n                var r;\n                for(r = 0; r < i; r += 1)e[r].animation.togglePause(t);\n            }, t.searchAnimations = function(t, e, r) {\n                var i, a = [].concat([].slice.call(document.getElementsByClassName(\"lottie\")), [].slice.call(document.getElementsByClassName(\"bodymovin\"))), s = a.length;\n                for(i = 0; i < s; i += 1)r && a[i].setAttribute(\"data-bm-type\", r), h(a[i], t);\n                if (e && 0 === s) {\n                    r || (r = \"svg\");\n                    var n = document.getElementsByTagName(\"body\")[0];\n                    n.innerText = \"\";\n                    var o = createTag(\"div\");\n                    o.style.width = \"100%\", o.style.height = \"100%\", o.setAttribute(\"data-bm-type\", r), n.appendChild(o), h(o, t);\n                }\n            }, t.resize = function() {\n                var t;\n                for(t = 0; t < i; t += 1)e[t].animation.resize();\n            }, t.goToAndStop = function(t, r, a) {\n                var s;\n                for(s = 0; s < i; s += 1)e[s].animation.goToAndStop(t, r, a);\n            }, t.destroy = function(t) {\n                var r;\n                for(r = i - 1; r >= 0; r -= 1)e[r].animation.destroy(t);\n            }, t.freeze = function() {\n                n = !0;\n            }, t.unfreeze = function() {\n                n = !1, d();\n            }, t.setVolume = function(t, r) {\n                var a;\n                for(a = 0; a < i; a += 1)e[a].animation.setVolume(t, r);\n            }, t.mute = function(t) {\n                var r;\n                for(r = 0; r < i; r += 1)e[r].animation.mute(t);\n            }, t.unmute = function(t) {\n                var r;\n                for(r = 0; r < i; r += 1)e[r].animation.unmute(t);\n            }, t.getRegisteredAnimations = function() {\n                var t, r = e.length, i = [];\n                for(t = 0; t < r; t += 1)i.push(e[t].animation);\n                return i;\n            }, t;\n        }(), BezierFactory = function() {\n            var t = {\n                getBezierEasing: function(t, r, i, a, s) {\n                    var n = s || (\"bez_\" + t + \"_\" + r + \"_\" + i + \"_\" + a).replace(/\\./g, \"p\");\n                    if (e[n]) return e[n];\n                    var o = new h([\n                        t,\n                        r,\n                        i,\n                        a\n                    ]);\n                    return e[n] = o, o;\n                }\n            }, e = {};\n            var r = \"function\" == typeof Float32Array;\n            function i(t, e) {\n                return 1 - 3 * e + 3 * t;\n            }\n            function a(t, e) {\n                return 3 * e - 6 * t;\n            }\n            function s(t) {\n                return 3 * t;\n            }\n            function n(t, e, r) {\n                return ((i(e, r) * t + a(e, r)) * t + s(e)) * t;\n            }\n            function o(t, e, r) {\n                return 3 * i(e, r) * t * t + 2 * a(e, r) * t + s(e);\n            }\n            function h(t) {\n                this._p = t, this._mSampleValues = r ? new Float32Array(11) : new Array(11), this._precomputed = !1, this.get = this.get.bind(this);\n            }\n            return h.prototype = {\n                get: function(t) {\n                    var e = this._p[0], r = this._p[1], i = this._p[2], a = this._p[3];\n                    return this._precomputed || this._precompute(), e === r && i === a ? t : 0 === t ? 0 : 1 === t ? 1 : n(this._getTForX(t), r, a);\n                },\n                _precompute: function() {\n                    var t = this._p[0], e = this._p[1], r = this._p[2], i = this._p[3];\n                    this._precomputed = !0, t === e && r === i || this._calcSampleValues();\n                },\n                _calcSampleValues: function() {\n                    for(var t = this._p[0], e = this._p[2], r = 0; r < 11; ++r)this._mSampleValues[r] = n(.1 * r, t, e);\n                },\n                _getTForX: function(t) {\n                    for(var e = this._p[0], r = this._p[2], i = this._mSampleValues, a = 0, s = 1; 10 !== s && i[s] <= t; ++s)a += .1;\n                    var h = a + .1 * ((t - i[--s]) / (i[s + 1] - i[s])), l = o(h, e, r);\n                    return l >= .001 ? function(t, e, r, i) {\n                        for(var a = 0; a < 4; ++a){\n                            var s = o(e, r, i);\n                            if (0 === s) return e;\n                            e -= (n(e, r, i) - t) / s;\n                        }\n                        return e;\n                    }(t, h, e, r) : 0 === l ? h : function(t, e, r, i, a) {\n                        var s, o, h = 0;\n                        do {\n                            (s = n(o = e + (r - e) / 2, i, a) - t) > 0 ? r = o : e = o;\n                        }while (Math.abs(s) > 1e-7 && ++h < 10);\n                        return o;\n                    }(t, a, a + .1, e, r);\n                }\n            }, t;\n        }(), pooling = {\n            double: function(t) {\n                return t.concat(createSizedArray(t.length));\n            }\n        }, poolFactory = function(t, e, r) {\n            var i = 0, a = t, s = createSizedArray(a);\n            return {\n                newElement: function() {\n                    return i ? s[i -= 1] : e();\n                },\n                release: function(t) {\n                    i === a && (s = pooling.double(s), a *= 2), r && r(t), s[i] = t, i += 1;\n                }\n            };\n        }, bezierLengthPool = poolFactory(8, function() {\n            return {\n                addedLength: 0,\n                percents: createTypedArray(\"float32\", getDefaultCurveSegments()),\n                lengths: createTypedArray(\"float32\", getDefaultCurveSegments())\n            };\n        }), segmentsLengthPool = poolFactory(8, function() {\n            return {\n                lengths: [],\n                totalLength: 0\n            };\n        }, function(t) {\n            var e, r = t.lengths.length;\n            for(e = 0; e < r; e += 1)bezierLengthPool.release(t.lengths[e]);\n            t.lengths.length = 0;\n        });\n        function bezFunction() {\n            var t = Math;\n            function e(t, e, r, i, a, s) {\n                var n = t * i + e * a + r * s - a * i - s * t - r * e;\n                return n > -.001 && n < .001;\n            }\n            var r = function(t, e, r, i) {\n                var a, s, n, o, h, l, p = getDefaultCurveSegments(), f = 0, c = [], m = [], d = bezierLengthPool.newElement();\n                for(n = r.length, a = 0; a < p; a += 1){\n                    for(h = a / (p - 1), l = 0, s = 0; s < n; s += 1)o = bmPow(1 - h, 3) * t[s] + 3 * bmPow(1 - h, 2) * h * r[s] + 3 * (1 - h) * bmPow(h, 2) * i[s] + bmPow(h, 3) * e[s], c[s] = o, null !== m[s] && (l += bmPow(c[s] - m[s], 2)), m[s] = c[s];\n                    l && (f += l = bmSqrt(l)), d.percents[a] = h, d.lengths[a] = f;\n                }\n                return d.addedLength = f, d;\n            };\n            function i(t) {\n                this.segmentLength = 0, this.points = new Array(t);\n            }\n            function a(t, e) {\n                this.partialLength = t, this.point = e;\n            }\n            var s, n = (s = {}, function(t, r, n, o) {\n                var h = (t[0] + \"_\" + t[1] + \"_\" + r[0] + \"_\" + r[1] + \"_\" + n[0] + \"_\" + n[1] + \"_\" + o[0] + \"_\" + o[1]).replace(/\\./g, \"p\");\n                if (!s[h]) {\n                    var l, p, f, c, m, d, u, y = getDefaultCurveSegments(), g = 0, v = null;\n                    2 === t.length && (t[0] !== r[0] || t[1] !== r[1]) && e(t[0], t[1], r[0], r[1], t[0] + n[0], t[1] + n[1]) && e(t[0], t[1], r[0], r[1], r[0] + o[0], r[1] + o[1]) && (y = 2);\n                    var b = new i(y);\n                    for(f = n.length, l = 0; l < y; l += 1){\n                        for(u = createSizedArray(f), m = l / (y - 1), d = 0, p = 0; p < f; p += 1)c = bmPow(1 - m, 3) * t[p] + 3 * bmPow(1 - m, 2) * m * (t[p] + n[p]) + 3 * (1 - m) * bmPow(m, 2) * (r[p] + o[p]) + bmPow(m, 3) * r[p], u[p] = c, null !== v && (d += bmPow(u[p] - v[p], 2));\n                        g += d = bmSqrt(d), b.points[l] = new a(d, u), v = u;\n                    }\n                    b.segmentLength = g, s[h] = b;\n                }\n                return s[h];\n            });\n            function o(t, e) {\n                var r = e.percents, i = e.lengths, a = r.length, s = bmFloor((a - 1) * t), n = t * e.addedLength, o = 0;\n                if (s === a - 1 || 0 === s || n === i[s]) return r[s];\n                for(var h = i[s] > n ? -1 : 1, l = !0; l;)if (i[s] <= n && i[s + 1] > n ? (o = (n - i[s]) / (i[s + 1] - i[s]), l = !1) : s += h, s < 0 || s >= a - 1) {\n                    if (s === a - 1) return r[s];\n                    l = !1;\n                }\n                return r[s] + (r[s + 1] - r[s]) * o;\n            }\n            var h = createTypedArray(\"float32\", 8);\n            return {\n                getSegmentsLength: function(t) {\n                    var e, i = segmentsLengthPool.newElement(), a = t.c, s = t.v, n = t.o, o = t.i, h = t._length, l = i.lengths, p = 0;\n                    for(e = 0; e < h - 1; e += 1)l[e] = r(s[e], s[e + 1], n[e], o[e + 1]), p += l[e].addedLength;\n                    return a && h && (l[e] = r(s[e], s[0], n[e], o[0]), p += l[e].addedLength), i.totalLength = p, i;\n                },\n                getNewSegment: function(e, r, i, a, s, n, l) {\n                    s < 0 ? s = 0 : s > 1 && (s = 1);\n                    var p, f = o(s, l), c = o(n = n > 1 ? 1 : n, l), m = e.length, d = 1 - f, u = 1 - c, y = d * d * d, g = f * d * d * 3, v = f * f * d * 3, b = f * f * f, x = d * d * u, P = f * d * u + d * f * u + d * d * c, E = f * f * u + d * f * c + f * d * c, S = f * f * c, C = d * u * u, _ = f * u * u + d * c * u + d * u * c, A = f * c * u + d * c * c + f * u * c, k = f * c * c, w = u * u * u, T = c * u * u + u * c * u + u * u * c, M = c * c * u + u * c * c + c * u * c, D = c * c * c;\n                    for(p = 0; p < m; p += 1)h[4 * p] = t.round(1e3 * (y * e[p] + g * i[p] + v * a[p] + b * r[p])) / 1e3, h[4 * p + 1] = t.round(1e3 * (x * e[p] + P * i[p] + E * a[p] + S * r[p])) / 1e3, h[4 * p + 2] = t.round(1e3 * (C * e[p] + _ * i[p] + A * a[p] + k * r[p])) / 1e3, h[4 * p + 3] = t.round(1e3 * (w * e[p] + T * i[p] + M * a[p] + D * r[p])) / 1e3;\n                    return h;\n                },\n                getPointInSegment: function(e, r, i, a, s, n) {\n                    var h = o(s, n), l = 1 - h;\n                    return [\n                        t.round(1e3 * (l * l * l * e[0] + (h * l * l + l * h * l + l * l * h) * i[0] + (h * h * l + l * h * h + h * l * h) * a[0] + h * h * h * r[0])) / 1e3,\n                        t.round(1e3 * (l * l * l * e[1] + (h * l * l + l * h * l + l * l * h) * i[1] + (h * h * l + l * h * h + h * l * h) * a[1] + h * h * h * r[1])) / 1e3\n                    ];\n                },\n                buildBezierData: n,\n                pointOnLine2D: e,\n                pointOnLine3D: function(r, i, a, s, n, o, h, l, p) {\n                    if (0 === a && 0 === o && 0 === p) return e(r, i, s, n, h, l);\n                    var f, c = t.sqrt(t.pow(s - r, 2) + t.pow(n - i, 2) + t.pow(o - a, 2)), m = t.sqrt(t.pow(h - r, 2) + t.pow(l - i, 2) + t.pow(p - a, 2)), d = t.sqrt(t.pow(h - s, 2) + t.pow(l - n, 2) + t.pow(p - o, 2));\n                    return (f = c > m ? c > d ? c - m - d : d - m - c : d > m ? d - m - c : m - c - d) > -1e-4 && f < 1e-4;\n                }\n            };\n        }\n        var bez = bezFunction(), PropertyFactory = function() {\n            var t = initialDefaultFrame, e = Math.abs;\n            function r(t, e) {\n                var r, a = this.offsetTime;\n                \"multidimensional\" === this.propType && (r = createTypedArray(\"float32\", this.pv.length));\n                for(var s, n, o, h, l, p, f, c, m, d = e.lastIndex, u = d, y = this.keyframes.length - 1, g = !0; g;){\n                    if (s = this.keyframes[u], n = this.keyframes[u + 1], u === y - 1 && t >= n.t - a) {\n                        s.h && (s = n), d = 0;\n                        break;\n                    }\n                    if (n.t - a > t) {\n                        d = u;\n                        break;\n                    }\n                    u < y - 1 ? u += 1 : (d = 0, g = !1);\n                }\n                o = this.keyframesMetadata[u] || {};\n                var v, b = n.t - a, x = s.t - a;\n                if (s.to) {\n                    o.bezierData || (o.bezierData = bez.buildBezierData(s.s, n.s || s.e, s.to, s.ti));\n                    var P = o.bezierData;\n                    if (t >= b || t < x) {\n                        var E = t >= b ? P.points.length - 1 : 0;\n                        for(l = P.points[E].point.length, h = 0; h < l; h += 1)r[h] = P.points[E].point[h];\n                    } else {\n                        o.__fnct ? m = o.__fnct : (m = BezierFactory.getBezierEasing(s.o.x, s.o.y, s.i.x, s.i.y, s.n).get, o.__fnct = m), p = m((t - x) / (b - x));\n                        var S, C = P.segmentLength * p, _ = e.lastFrame < t && e._lastKeyframeIndex === u ? e._lastAddedLength : 0;\n                        for(c = e.lastFrame < t && e._lastKeyframeIndex === u ? e._lastPoint : 0, g = !0, f = P.points.length; g;){\n                            if (_ += P.points[c].partialLength, 0 === C || 0 === p || c === P.points.length - 1) {\n                                for(l = P.points[c].point.length, h = 0; h < l; h += 1)r[h] = P.points[c].point[h];\n                                break;\n                            }\n                            if (C >= _ && C < _ + P.points[c + 1].partialLength) {\n                                for(S = (C - _) / P.points[c + 1].partialLength, l = P.points[c].point.length, h = 0; h < l; h += 1)r[h] = P.points[c].point[h] + (P.points[c + 1].point[h] - P.points[c].point[h]) * S;\n                                break;\n                            }\n                            c < f - 1 ? c += 1 : g = !1;\n                        }\n                        e._lastPoint = c, e._lastAddedLength = _ - P.points[c].partialLength, e._lastKeyframeIndex = u;\n                    }\n                } else {\n                    var A, k, w, T, M;\n                    if (y = s.s.length, v = n.s || s.e, this.sh && 1 !== s.h) if (t >= b) r[0] = v[0], r[1] = v[1], r[2] = v[2];\n                    else if (t <= x) r[0] = s.s[0], r[1] = s.s[1], r[2] = s.s[2];\n                    else {\n                        !function(t, e) {\n                            var r = e[0], i = e[1], a = e[2], s = e[3], n = Math.atan2(2 * i * s - 2 * r * a, 1 - 2 * i * i - 2 * a * a), o = Math.asin(2 * r * i + 2 * a * s), h = Math.atan2(2 * r * s - 2 * i * a, 1 - 2 * r * r - 2 * a * a);\n                            t[0] = n / degToRads, t[1] = o / degToRads, t[2] = h / degToRads;\n                        }(r, function(t, e, r) {\n                            var i, a, s, n, o, h = [], l = t[0], p = t[1], f = t[2], c = t[3], m = e[0], d = e[1], u = e[2], y = e[3];\n                            (a = l * m + p * d + f * u + c * y) < 0 && (a = -a, m = -m, d = -d, u = -u, y = -y);\n                            1 - a > 1e-6 ? (i = Math.acos(a), s = Math.sin(i), n = Math.sin((1 - r) * i) / s, o = Math.sin(r * i) / s) : (n = 1 - r, o = r);\n                            return h[0] = n * l + o * m, h[1] = n * p + o * d, h[2] = n * f + o * u, h[3] = n * c + o * y, h;\n                        }(i(s.s), i(v), (t - x) / (b - x)));\n                    }\n                    else for(u = 0; u < y; u += 1)1 !== s.h && (t >= b ? p = 1 : t < x ? p = 0 : (s.o.x.constructor === Array ? (o.__fnct || (o.__fnct = []), o.__fnct[u] ? m = o.__fnct[u] : (A = void 0 === s.o.x[u] ? s.o.x[0] : s.o.x[u], k = void 0 === s.o.y[u] ? s.o.y[0] : s.o.y[u], w = void 0 === s.i.x[u] ? s.i.x[0] : s.i.x[u], T = void 0 === s.i.y[u] ? s.i.y[0] : s.i.y[u], m = BezierFactory.getBezierEasing(A, k, w, T).get, o.__fnct[u] = m)) : o.__fnct ? m = o.__fnct : (A = s.o.x, k = s.o.y, w = s.i.x, T = s.i.y, m = BezierFactory.getBezierEasing(A, k, w, T).get, s.keyframeMetadata = m), p = m((t - x) / (b - x)))), v = n.s || s.e, M = 1 === s.h ? s.s[u] : s.s[u] + (v[u] - s.s[u]) * p, \"multidimensional\" === this.propType ? r[u] = M : r = M;\n                }\n                return e.lastIndex = d, r;\n            }\n            function i(t) {\n                var e = t[0] * degToRads, r = t[1] * degToRads, i = t[2] * degToRads, a = Math.cos(e / 2), s = Math.cos(r / 2), n = Math.cos(i / 2), o = Math.sin(e / 2), h = Math.sin(r / 2), l = Math.sin(i / 2);\n                return [\n                    o * h * n + a * s * l,\n                    o * s * n + a * h * l,\n                    a * h * n - o * s * l,\n                    a * s * n - o * h * l\n                ];\n            }\n            function a() {\n                var e = this.comp.renderedFrame - this.offsetTime, r = this.keyframes[0].t - this.offsetTime, i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n                if (!(e === this._caching.lastFrame || this._caching.lastFrame !== t && (this._caching.lastFrame >= i && e >= i || this._caching.lastFrame < r && e < r))) {\n                    this._caching.lastFrame >= e && (this._caching._lastKeyframeIndex = -1, this._caching.lastIndex = 0);\n                    var a = this.interpolateValue(e, this._caching);\n                    this.pv = a;\n                }\n                return this._caching.lastFrame = e, this.pv;\n            }\n            function s(t) {\n                var r;\n                if (\"unidimensional\" === this.propType) r = t * this.mult, e(this.v - r) > 1e-5 && (this.v = r, this._mdf = !0);\n                else for(var i = 0, a = this.v.length; i < a;)r = t[i] * this.mult, e(this.v[i] - r) > 1e-5 && (this.v[i] = r, this._mdf = !0), i += 1;\n            }\n            function n() {\n                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length) if (this.lock) this.setVValue(this.pv);\n                else {\n                    var t;\n                    this.lock = !0, this._mdf = this._isFirstFrame;\n                    var e = this.effectsSequence.length, r = this.kf ? this.pv : this.data.k;\n                    for(t = 0; t < e; t += 1)r = this.effectsSequence[t](r);\n                    this.setVValue(r), this._isFirstFrame = !1, this.lock = !1, this.frameId = this.elem.globalData.frameId;\n                }\n            }\n            function o(t) {\n                this.effectsSequence.push(t), this.container.addDynamicProperty(this);\n            }\n            function h(t, e, r, i) {\n                this.propType = \"unidimensional\", this.mult = r || 1, this.data = e, this.v = r ? e.k * r : e.k, this.pv = e.k, this._mdf = !1, this.elem = t, this.container = i, this.comp = t.comp, this.k = !1, this.kf = !1, this.vel = 0, this.effectsSequence = [], this._isFirstFrame = !0, this.getValue = n, this.setVValue = s, this.addEffect = o;\n            }\n            function l(t, e, r, i) {\n                var a;\n                this.propType = \"multidimensional\", this.mult = r || 1, this.data = e, this._mdf = !1, this.elem = t, this.container = i, this.comp = t.comp, this.k = !1, this.kf = !1, this.frameId = -1;\n                var h = e.k.length;\n                for(this.v = createTypedArray(\"float32\", h), this.pv = createTypedArray(\"float32\", h), this.vel = createTypedArray(\"float32\", h), a = 0; a < h; a += 1)this.v[a] = e.k[a] * this.mult, this.pv[a] = e.k[a];\n                this._isFirstFrame = !0, this.effectsSequence = [], this.getValue = n, this.setVValue = s, this.addEffect = o;\n            }\n            function p(e, i, h, l) {\n                this.propType = \"unidimensional\", this.keyframes = i.k, this.keyframesMetadata = [], this.offsetTime = e.data.st, this.frameId = -1, this._caching = {\n                    lastFrame: t,\n                    lastIndex: 0,\n                    value: 0,\n                    _lastKeyframeIndex: -1\n                }, this.k = !0, this.kf = !0, this.data = i, this.mult = h || 1, this.elem = e, this.container = l, this.comp = e.comp, this.v = t, this.pv = t, this._isFirstFrame = !0, this.getValue = n, this.setVValue = s, this.interpolateValue = r, this.effectsSequence = [\n                    a.bind(this)\n                ], this.addEffect = o;\n            }\n            function f(e, i, h, l) {\n                var p;\n                this.propType = \"multidimensional\";\n                var f, c, m, d, u = i.k.length;\n                for(p = 0; p < u - 1; p += 1)i.k[p].to && i.k[p].s && i.k[p + 1] && i.k[p + 1].s && (f = i.k[p].s, c = i.k[p + 1].s, m = i.k[p].to, d = i.k[p].ti, (2 === f.length && (f[0] !== c[0] || f[1] !== c[1]) && bez.pointOnLine2D(f[0], f[1], c[0], c[1], f[0] + m[0], f[1] + m[1]) && bez.pointOnLine2D(f[0], f[1], c[0], c[1], c[0] + d[0], c[1] + d[1]) || 3 === f.length && (f[0] !== c[0] || f[1] !== c[1] || f[2] !== c[2]) && bez.pointOnLine3D(f[0], f[1], f[2], c[0], c[1], c[2], f[0] + m[0], f[1] + m[1], f[2] + m[2]) && bez.pointOnLine3D(f[0], f[1], f[2], c[0], c[1], c[2], c[0] + d[0], c[1] + d[1], c[2] + d[2])) && (i.k[p].to = null, i.k[p].ti = null), f[0] === c[0] && f[1] === c[1] && 0 === m[0] && 0 === m[1] && 0 === d[0] && 0 === d[1] && (2 === f.length || f[2] === c[2] && 0 === m[2] && 0 === d[2]) && (i.k[p].to = null, i.k[p].ti = null));\n                this.effectsSequence = [\n                    a.bind(this)\n                ], this.data = i, this.keyframes = i.k, this.keyframesMetadata = [], this.offsetTime = e.data.st, this.k = !0, this.kf = !0, this._isFirstFrame = !0, this.mult = h || 1, this.elem = e, this.container = l, this.comp = e.comp, this.getValue = n, this.setVValue = s, this.interpolateValue = r, this.frameId = -1;\n                var y = i.k[0].s.length;\n                for(this.v = createTypedArray(\"float32\", y), this.pv = createTypedArray(\"float32\", y), p = 0; p < y; p += 1)this.v[p] = t, this.pv[p] = t;\n                this._caching = {\n                    lastFrame: t,\n                    lastIndex: 0,\n                    value: createTypedArray(\"float32\", y)\n                }, this.addEffect = o;\n            }\n            return {\n                getProp: function(t, e, r, i, a) {\n                    var s;\n                    if (e.k.length) if (\"number\" == typeof e.k[0]) s = new l(t, e, i, a);\n                    else switch(r){\n                        case 0:\n                            s = new p(t, e, i, a);\n                            break;\n                        case 1:\n                            s = new f(t, e, i, a);\n                    }\n                    else s = new h(t, e, i, a);\n                    return s.effectsSequence.length && a.addDynamicProperty(s), s;\n                }\n            };\n        }();\n        function DynamicPropertyContainer() {}\n        DynamicPropertyContainer.prototype = {\n            addDynamicProperty: function(t) {\n                -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), this._isAnimated = !0);\n            },\n            iterateDynamicProperties: function() {\n                var t;\n                this._mdf = !1;\n                var e = this.dynamicProperties.length;\n                for(t = 0; t < e; t += 1)this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = !0);\n            },\n            initDynamicPropertyContainer: function(t) {\n                this.container = t, this.dynamicProperties = [], this._mdf = !1, this._isAnimated = !1;\n            }\n        };\n        var pointPool = poolFactory(8, function() {\n            return createTypedArray(\"float32\", 2);\n        });\n        function ShapePath() {\n            this.c = !1, this._length = 0, this._maxLength = 8, this.v = createSizedArray(this._maxLength), this.o = createSizedArray(this._maxLength), this.i = createSizedArray(this._maxLength);\n        }\n        ShapePath.prototype.setPathData = function(t, e) {\n            this.c = t, this.setLength(e);\n            for(var r = 0; r < e;)this.v[r] = pointPool.newElement(), this.o[r] = pointPool.newElement(), this.i[r] = pointPool.newElement(), r += 1;\n        }, ShapePath.prototype.setLength = function(t) {\n            for(; this._maxLength < t;)this.doubleArrayLength();\n            this._length = t;\n        }, ShapePath.prototype.doubleArrayLength = function() {\n            this.v = this.v.concat(createSizedArray(this._maxLength)), this.i = this.i.concat(createSizedArray(this._maxLength)), this.o = this.o.concat(createSizedArray(this._maxLength)), this._maxLength *= 2;\n        }, ShapePath.prototype.setXYAt = function(t, e, r, i, a) {\n            var s;\n            switch(this._length = Math.max(this._length, i + 1), this._length >= this._maxLength && this.doubleArrayLength(), r){\n                case \"v\":\n                    s = this.v;\n                    break;\n                case \"i\":\n                    s = this.i;\n                    break;\n                case \"o\":\n                    s = this.o;\n                    break;\n                default:\n                    s = [];\n            }\n            (!s[i] || s[i] && !a) && (s[i] = pointPool.newElement()), s[i][0] = t, s[i][1] = e;\n        }, ShapePath.prototype.setTripleAt = function(t, e, r, i, a, s, n, o) {\n            this.setXYAt(t, e, \"v\", n, o), this.setXYAt(r, i, \"o\", n, o), this.setXYAt(a, s, \"i\", n, o);\n        }, ShapePath.prototype.reverse = function() {\n            var t = new ShapePath;\n            t.setPathData(this.c, this._length);\n            var e = this.v, r = this.o, i = this.i, a = 0;\n            this.c && (t.setTripleAt(e[0][0], e[0][1], i[0][0], i[0][1], r[0][0], r[0][1], 0, !1), a = 1);\n            var s, n = this._length - 1, o = this._length;\n            for(s = a; s < o; s += 1)t.setTripleAt(e[n][0], e[n][1], i[n][0], i[n][1], r[n][0], r[n][1], s, !1), n -= 1;\n            return t;\n        }, ShapePath.prototype.length = function() {\n            return this._length;\n        };\n        var shapePool = (factory = poolFactory(4, function() {\n            return new ShapePath;\n        }, function(t) {\n            var e, r = t._length;\n            for(e = 0; e < r; e += 1)pointPool.release(t.v[e]), pointPool.release(t.i[e]), pointPool.release(t.o[e]), t.v[e] = null, t.i[e] = null, t.o[e] = null;\n            t._length = 0, t.c = !1;\n        }), factory.clone = function(t) {\n            var e, r = factory.newElement(), i = void 0 === t._length ? t.v.length : t._length;\n            for(r.setLength(i), r.c = t.c, e = 0; e < i; e += 1)r.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);\n            return r;\n        }, factory), factory;\n        function ShapeCollection() {\n            this._length = 0, this._maxLength = 4, this.shapes = createSizedArray(this._maxLength);\n        }\n        ShapeCollection.prototype.addShape = function(t) {\n            this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)), this._maxLength *= 2), this.shapes[this._length] = t, this._length += 1;\n        }, ShapeCollection.prototype.releaseShapes = function() {\n            var t;\n            for(t = 0; t < this._length; t += 1)shapePool.release(this.shapes[t]);\n            this._length = 0;\n        };\n        var shapeCollectionPool = (ob = {\n            newShapeCollection: function() {\n                return _length ? pool[_length -= 1] : new ShapeCollection;\n            },\n            release: function(t) {\n                var e, r = t._length;\n                for(e = 0; e < r; e += 1)shapePool.release(t.shapes[e]);\n                t._length = 0, _length === _maxLength && (pool = pooling.double(pool), _maxLength *= 2), pool[_length] = t, _length += 1;\n            }\n        }, _length = 0, _maxLength = 4, pool = createSizedArray(_maxLength), ob), ob, _length, _maxLength, pool, ShapePropertyFactory = function() {\n            function t(t, e, r) {\n                var i, a, s, n, o, h, l, p, f, c = r.lastIndex, m = this.keyframes;\n                if (t < m[0].t - this.offsetTime) i = m[0].s[0], s = !0, c = 0;\n                else if (t >= m[m.length - 1].t - this.offsetTime) i = m[m.length - 1].s ? m[m.length - 1].s[0] : m[m.length - 2].e[0], s = !0;\n                else {\n                    for(var d, u, y, g = c, v = m.length - 1, b = !0; b && (d = m[g], !((u = m[g + 1]).t - this.offsetTime > t));)g < v - 1 ? g += 1 : b = !1;\n                    if (y = this.keyframesMetadata[g] || {}, c = g, !(s = 1 === d.h)) {\n                        if (t >= u.t - this.offsetTime) p = 1;\n                        else if (t < d.t - this.offsetTime) p = 0;\n                        else {\n                            var x;\n                            y.__fnct ? x = y.__fnct : (x = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get, y.__fnct = x), p = x((t - (d.t - this.offsetTime)) / (u.t - this.offsetTime - (d.t - this.offsetTime)));\n                        }\n                        a = u.s ? u.s[0] : d.e[0];\n                    }\n                    i = d.s[0];\n                }\n                for(h = e._length, l = i.i[0].length, r.lastIndex = c, n = 0; n < h; n += 1)for(o = 0; o < l; o += 1)f = s ? i.i[n][o] : i.i[n][o] + (a.i[n][o] - i.i[n][o]) * p, e.i[n][o] = f, f = s ? i.o[n][o] : i.o[n][o] + (a.o[n][o] - i.o[n][o]) * p, e.o[n][o] = f, f = s ? i.v[n][o] : i.v[n][o] + (a.v[n][o] - i.v[n][o]) * p, e.v[n][o] = f;\n            }\n            function e() {\n                var t = this.comp.renderedFrame - this.offsetTime, e = this.keyframes[0].t - this.offsetTime, r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime, i = this._caching.lastFrame;\n                return -999999 !== i && (i < e && t < e || i > r && t > r) || (this._caching.lastIndex = i < t ? this._caching.lastIndex : 0, this.interpolateShape(t, this.pv, this._caching)), this._caching.lastFrame = t, this.pv;\n            }\n            function r() {\n                this.paths = this.localShapeCollection;\n            }\n            function i(t) {\n                (function(t, e) {\n                    if (t._length !== e._length || t.c !== e.c) return !1;\n                    var r, i = t._length;\n                    for(r = 0; r < i; r += 1)if (t.v[r][0] !== e.v[r][0] || t.v[r][1] !== e.v[r][1] || t.o[r][0] !== e.o[r][0] || t.o[r][1] !== e.o[r][1] || t.i[r][0] !== e.i[r][0] || t.i[r][1] !== e.i[r][1]) return !1;\n                    return !0;\n                })(this.v, t) || (this.v = shapePool.clone(t), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), this._mdf = !0, this.paths = this.localShapeCollection);\n            }\n            function a() {\n                if (this.elem.globalData.frameId !== this.frameId) if (this.effectsSequence.length) if (this.lock) this.setVValue(this.pv);\n                else {\n                    var t, e;\n                    this.lock = !0, this._mdf = !1, t = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\n                    var r = this.effectsSequence.length;\n                    for(e = 0; e < r; e += 1)t = this.effectsSequence[e](t);\n                    this.setVValue(t), this.lock = !1, this.frameId = this.elem.globalData.frameId;\n                }\n                else this._mdf = !1;\n            }\n            function s(t, e, i) {\n                this.propType = \"shape\", this.comp = t.comp, this.container = t, this.elem = t, this.data = e, this.k = !1, this.kf = !1, this._mdf = !1;\n                var a = 3 === i ? e.pt.k : e.ks.k;\n                this.v = shapePool.clone(a), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.reset = r, this.effectsSequence = [];\n            }\n            function n(t) {\n                this.effectsSequence.push(t), this.container.addDynamicProperty(this);\n            }\n            function o(t, i, a) {\n                this.propType = \"shape\", this.comp = t.comp, this.elem = t, this.container = t, this.offsetTime = t.data.st, this.keyframes = 3 === a ? i.pt.k : i.ks.k, this.keyframesMetadata = [], this.k = !0, this.kf = !0;\n                var s = this.keyframes[0].s[0].i.length;\n                this.v = shapePool.newElement(), this.v.setPathData(this.keyframes[0].s[0].c, s), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.lastFrame = -999999, this.reset = r, this._caching = {\n                    lastFrame: -999999,\n                    lastIndex: 0\n                }, this.effectsSequence = [\n                    e.bind(this)\n                ];\n            }\n            s.prototype.interpolateShape = t, s.prototype.getValue = a, s.prototype.setVValue = i, s.prototype.addEffect = n, o.prototype.getValue = a, o.prototype.interpolateShape = t, o.prototype.setVValue = i, o.prototype.addEffect = n;\n            var h = function() {\n                var t = roundCorner;\n                function e(t, e) {\n                    this.v = shapePool.newElement(), this.v.setPathData(!0, 4), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.localShapeCollection.addShape(this.v), this.d = e.d, this.elem = t, this.comp = t.comp, this.frameId = -1, this.initDynamicPropertyContainer(t), this.p = PropertyFactory.getProp(t, e.p, 1, 0, this), this.s = PropertyFactory.getProp(t, e.s, 1, 0, this), this.dynamicProperties.length ? this.k = !0 : (this.k = !1, this.convertEllToPath());\n                }\n                return e.prototype = {\n                    reset: r,\n                    getValue: function() {\n                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertEllToPath());\n                    },\n                    convertEllToPath: function() {\n                        var e = this.p.v[0], r = this.p.v[1], i = this.s.v[0] / 2, a = this.s.v[1] / 2, s = 3 !== this.d, n = this.v;\n                        n.v[0][0] = e, n.v[0][1] = r - a, n.v[1][0] = s ? e + i : e - i, n.v[1][1] = r, n.v[2][0] = e, n.v[2][1] = r + a, n.v[3][0] = s ? e - i : e + i, n.v[3][1] = r, n.i[0][0] = s ? e - i * t : e + i * t, n.i[0][1] = r - a, n.i[1][0] = s ? e + i : e - i, n.i[1][1] = r - a * t, n.i[2][0] = s ? e + i * t : e - i * t, n.i[2][1] = r + a, n.i[3][0] = s ? e - i : e + i, n.i[3][1] = r + a * t, n.o[0][0] = s ? e + i * t : e - i * t, n.o[0][1] = r - a, n.o[1][0] = s ? e + i : e - i, n.o[1][1] = r + a * t, n.o[2][0] = s ? e - i * t : e + i * t, n.o[2][1] = r + a, n.o[3][0] = s ? e - i : e + i, n.o[3][1] = r - a * t;\n                    }\n                }, extendPrototype([\n                    DynamicPropertyContainer\n                ], e), e;\n            }(), l = function() {\n                function t(t, e) {\n                    this.v = shapePool.newElement(), this.v.setPathData(!0, 0), this.elem = t, this.comp = t.comp, this.data = e, this.frameId = -1, this.d = e.d, this.initDynamicPropertyContainer(t), 1 === e.sy ? (this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this), this.is = PropertyFactory.getProp(t, e.is, 0, .01, this), this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath, this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this), this.p = PropertyFactory.getProp(t, e.p, 1, 0, this), this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this), this.or = PropertyFactory.getProp(t, e.or, 0, 0, this), this.os = PropertyFactory.getProp(t, e.os, 0, .01, this), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.dynamicProperties.length ? this.k = !0 : (this.k = !1, this.convertToPath());\n                }\n                return t.prototype = {\n                    reset: r,\n                    getValue: function() {\n                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertToPath());\n                    },\n                    convertStarToPath: function() {\n                        var t, e, r, i, a = 2 * Math.floor(this.pt.v), s = 2 * Math.PI / a, n = !0, o = this.or.v, h = this.ir.v, l = this.os.v, p = this.is.v, f = 2 * Math.PI * o / (2 * a), c = 2 * Math.PI * h / (2 * a), m = -Math.PI / 2;\n                        m += this.r.v;\n                        var d = 3 === this.data.d ? -1 : 1;\n                        for(this.v._length = 0, t = 0; t < a; t += 1){\n                            r = n ? l : p, i = n ? f : c;\n                            var u = (e = n ? o : h) * Math.cos(m), y = e * Math.sin(m), g = 0 === u && 0 === y ? 0 : y / Math.sqrt(u * u + y * y), v = 0 === u && 0 === y ? 0 : -u / Math.sqrt(u * u + y * y);\n                            u += +this.p.v[0], y += +this.p.v[1], this.v.setTripleAt(u, y, u - g * i * r * d, y - v * i * r * d, u + g * i * r * d, y + v * i * r * d, t, !0), n = !n, m += s * d;\n                        }\n                    },\n                    convertPolygonToPath: function() {\n                        var t, e = Math.floor(this.pt.v), r = 2 * Math.PI / e, i = this.or.v, a = this.os.v, s = 2 * Math.PI * i / (4 * e), n = .5 * -Math.PI, o = 3 === this.data.d ? -1 : 1;\n                        for(n += this.r.v, this.v._length = 0, t = 0; t < e; t += 1){\n                            var h = i * Math.cos(n), l = i * Math.sin(n), p = 0 === h && 0 === l ? 0 : l / Math.sqrt(h * h + l * l), f = 0 === h && 0 === l ? 0 : -h / Math.sqrt(h * h + l * l);\n                            h += +this.p.v[0], l += +this.p.v[1], this.v.setTripleAt(h, l, h - p * s * a * o, l - f * s * a * o, h + p * s * a * o, l + f * s * a * o, t, !0), n += r * o;\n                        }\n                        this.paths.length = 0, this.paths[0] = this.v;\n                    }\n                }, extendPrototype([\n                    DynamicPropertyContainer\n                ], t), t;\n            }(), p = function() {\n                function t(t, e) {\n                    this.v = shapePool.newElement(), this.v.c = !0, this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.elem = t, this.comp = t.comp, this.frameId = -1, this.d = e.d, this.initDynamicPropertyContainer(t), this.p = PropertyFactory.getProp(t, e.p, 1, 0, this), this.s = PropertyFactory.getProp(t, e.s, 1, 0, this), this.r = PropertyFactory.getProp(t, e.r, 0, 0, this), this.dynamicProperties.length ? this.k = !0 : (this.k = !1, this.convertRectToPath());\n                }\n                return t.prototype = {\n                    convertRectToPath: function() {\n                        var t = this.p.v[0], e = this.p.v[1], r = this.s.v[0] / 2, i = this.s.v[1] / 2, a = bmMin(r, i, this.r.v), s = a * (1 - roundCorner);\n                        this.v._length = 0, 2 === this.d || 1 === this.d ? (this.v.setTripleAt(t + r, e - i + a, t + r, e - i + a, t + r, e - i + s, 0, !0), this.v.setTripleAt(t + r, e + i - a, t + r, e + i - s, t + r, e + i - a, 1, !0), 0 !== a ? (this.v.setTripleAt(t + r - a, e + i, t + r - a, e + i, t + r - s, e + i, 2, !0), this.v.setTripleAt(t - r + a, e + i, t - r + s, e + i, t - r + a, e + i, 3, !0), this.v.setTripleAt(t - r, e + i - a, t - r, e + i - a, t - r, e + i - s, 4, !0), this.v.setTripleAt(t - r, e - i + a, t - r, e - i + s, t - r, e - i + a, 5, !0), this.v.setTripleAt(t - r + a, e - i, t - r + a, e - i, t - r + s, e - i, 6, !0), this.v.setTripleAt(t + r - a, e - i, t + r - s, e - i, t + r - a, e - i, 7, !0)) : (this.v.setTripleAt(t - r, e + i, t - r + s, e + i, t - r, e + i, 2), this.v.setTripleAt(t - r, e - i, t - r, e - i + s, t - r, e - i, 3))) : (this.v.setTripleAt(t + r, e - i + a, t + r, e - i + s, t + r, e - i + a, 0, !0), 0 !== a ? (this.v.setTripleAt(t + r - a, e - i, t + r - a, e - i, t + r - s, e - i, 1, !0), this.v.setTripleAt(t - r + a, e - i, t - r + s, e - i, t - r + a, e - i, 2, !0), this.v.setTripleAt(t - r, e - i + a, t - r, e - i + a, t - r, e - i + s, 3, !0), this.v.setTripleAt(t - r, e + i - a, t - r, e + i - s, t - r, e + i - a, 4, !0), this.v.setTripleAt(t - r + a, e + i, t - r + a, e + i, t - r + s, e + i, 5, !0), this.v.setTripleAt(t + r - a, e + i, t + r - s, e + i, t + r - a, e + i, 6, !0), this.v.setTripleAt(t + r, e + i - a, t + r, e + i - a, t + r, e + i - s, 7, !0)) : (this.v.setTripleAt(t - r, e - i, t - r + s, e - i, t - r, e - i, 1, !0), this.v.setTripleAt(t - r, e + i, t - r, e + i - s, t - r, e + i, 2, !0), this.v.setTripleAt(t + r, e + i, t + r - s, e + i, t + r, e + i, 3, !0)));\n                    },\n                    getValue: function() {\n                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertRectToPath());\n                    },\n                    reset: r\n                }, extendPrototype([\n                    DynamicPropertyContainer\n                ], t), t;\n            }();\n            var f = {\n                getShapeProp: function(t, e, r) {\n                    var i;\n                    return 3 === r || 4 === r ? i = (3 === r ? e.pt : e.ks).k.length ? new o(t, e, r) : new s(t, e, r) : 5 === r ? i = new p(t, e) : 6 === r ? i = new h(t, e) : 7 === r && (i = new l(t, e)), i.k && t.addDynamicProperty(i), i;\n                },\n                getConstructorFunction: function() {\n                    return s;\n                },\n                getKeyframedConstructorFunction: function() {\n                    return o;\n                }\n            };\n            return f;\n        }(), Matrix = function() {\n            var t = Math.cos, e = Math.sin, r = Math.tan, i = Math.round;\n            function a() {\n                return this.props[0] = 1, this.props[1] = 0, this.props[2] = 0, this.props[3] = 0, this.props[4] = 0, this.props[5] = 1, this.props[6] = 0, this.props[7] = 0, this.props[8] = 0, this.props[9] = 0, this.props[10] = 1, this.props[11] = 0, this.props[12] = 0, this.props[13] = 0, this.props[14] = 0, this.props[15] = 1, this;\n            }\n            function s(r) {\n                if (0 === r) return this;\n                var i = t(r), a = e(r);\n                return this._t(i, -a, 0, 0, a, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n            }\n            function n(r) {\n                if (0 === r) return this;\n                var i = t(r), a = e(r);\n                return this._t(1, 0, 0, 0, 0, i, -a, 0, 0, a, i, 0, 0, 0, 0, 1);\n            }\n            function o(r) {\n                if (0 === r) return this;\n                var i = t(r), a = e(r);\n                return this._t(i, 0, a, 0, 0, 1, 0, 0, -a, 0, i, 0, 0, 0, 0, 1);\n            }\n            function h(r) {\n                if (0 === r) return this;\n                var i = t(r), a = e(r);\n                return this._t(i, -a, 0, 0, a, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n            }\n            function l(t, e) {\n                return this._t(1, e, t, 1, 0, 0);\n            }\n            function p(t, e) {\n                return this.shear(r(t), r(e));\n            }\n            function f(i, a) {\n                var s = t(a), n = e(a);\n                return this._t(s, n, 0, 0, -n, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, r(i), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(s, -n, 0, 0, n, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n            }\n            function c(t, e, r) {\n                return r || 0 === r || (r = 1), 1 === t && 1 === e && 1 === r ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, r, 0, 0, 0, 0, 1);\n            }\n            function m(t, e, r, i, a, s, n, o, h, l, p, f, c, m, d, u) {\n                return this.props[0] = t, this.props[1] = e, this.props[2] = r, this.props[3] = i, this.props[4] = a, this.props[5] = s, this.props[6] = n, this.props[7] = o, this.props[8] = h, this.props[9] = l, this.props[10] = p, this.props[11] = f, this.props[12] = c, this.props[13] = m, this.props[14] = d, this.props[15] = u, this;\n            }\n            function d(t, e, r) {\n                return r = r || 0, 0 !== t || 0 !== e || 0 !== r ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, r, 1) : this;\n            }\n            function u(t, e, r, i, a, s, n, o, h, l, p, f, c, m, d, u) {\n                var y = this.props;\n                if (1 === t && 0 === e && 0 === r && 0 === i && 0 === a && 1 === s && 0 === n && 0 === o && 0 === h && 0 === l && 1 === p && 0 === f) return y[12] = y[12] * t + y[15] * c, y[13] = y[13] * s + y[15] * m, y[14] = y[14] * p + y[15] * d, y[15] *= u, this._identityCalculated = !1, this;\n                var g = y[0], v = y[1], b = y[2], x = y[3], P = y[4], E = y[5], S = y[6], C = y[7], _ = y[8], A = y[9], k = y[10], w = y[11], T = y[12], M = y[13], D = y[14], F = y[15];\n                return y[0] = g * t + v * a + b * h + x * c, y[1] = g * e + v * s + b * l + x * m, y[2] = g * r + v * n + b * p + x * d, y[3] = g * i + v * o + b * f + x * u, y[4] = P * t + E * a + S * h + C * c, y[5] = P * e + E * s + S * l + C * m, y[6] = P * r + E * n + S * p + C * d, y[7] = P * i + E * o + S * f + C * u, y[8] = _ * t + A * a + k * h + w * c, y[9] = _ * e + A * s + k * l + w * m, y[10] = _ * r + A * n + k * p + w * d, y[11] = _ * i + A * o + k * f + w * u, y[12] = T * t + M * a + D * h + F * c, y[13] = T * e + M * s + D * l + F * m, y[14] = T * r + M * n + D * p + F * d, y[15] = T * i + M * o + D * f + F * u, this._identityCalculated = !1, this;\n            }\n            function y() {\n                return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]), this._identityCalculated = !0), this._identity;\n            }\n            function g(t) {\n                for(var e = 0; e < 16;){\n                    if (t.props[e] !== this.props[e]) return !1;\n                    e += 1;\n                }\n                return !0;\n            }\n            function v(t) {\n                var e;\n                for(e = 0; e < 16; e += 1)t.props[e] = this.props[e];\n                return t;\n            }\n            function b(t) {\n                var e;\n                for(e = 0; e < 16; e += 1)this.props[e] = t[e];\n            }\n            function x(t, e, r) {\n                return {\n                    x: t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12],\n                    y: t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13],\n                    z: t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]\n                };\n            }\n            function P(t, e, r) {\n                return t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12];\n            }\n            function E(t, e, r) {\n                return t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13];\n            }\n            function S(t, e, r) {\n                return t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14];\n            }\n            function C() {\n                var t = this.props[0] * this.props[5] - this.props[1] * this.props[4], e = this.props[5] / t, r = -this.props[1] / t, i = -this.props[4] / t, a = this.props[0] / t, s = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t, n = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t, o = new Matrix;\n                return o.props[0] = e, o.props[1] = r, o.props[4] = i, o.props[5] = a, o.props[12] = s, o.props[13] = n, o;\n            }\n            function _(t) {\n                return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0);\n            }\n            function A(t) {\n                var e, r = t.length, i = [];\n                for(e = 0; e < r; e += 1)i[e] = _(t[e]);\n                return i;\n            }\n            function k(t, e, r) {\n                var i = createTypedArray(\"float32\", 6);\n                if (this.isIdentity()) i[0] = t[0], i[1] = t[1], i[2] = e[0], i[3] = e[1], i[4] = r[0], i[5] = r[1];\n                else {\n                    var a = this.props[0], s = this.props[1], n = this.props[4], o = this.props[5], h = this.props[12], l = this.props[13];\n                    i[0] = t[0] * a + t[1] * n + h, i[1] = t[0] * s + t[1] * o + l, i[2] = e[0] * a + e[1] * n + h, i[3] = e[0] * s + e[1] * o + l, i[4] = r[0] * a + r[1] * n + h, i[5] = r[0] * s + r[1] * o + l;\n                }\n                return i;\n            }\n            function w(t, e, r) {\n                return this.isIdentity() ? [\n                    t,\n                    e,\n                    r\n                ] : [\n                    t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12],\n                    t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13],\n                    t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]\n                ];\n            }\n            function T(t, e) {\n                if (this.isIdentity()) return t + \",\" + e;\n                var r = this.props;\n                return Math.round(100 * (t * r[0] + e * r[4] + r[12])) / 100 + \",\" + Math.round(100 * (t * r[1] + e * r[5] + r[13])) / 100;\n            }\n            function M() {\n                for(var t = 0, e = this.props, r = \"matrix3d(\"; t < 16;)r += i(1e4 * e[t]) / 1e4, r += 15 === t ? \")\" : \",\", t += 1;\n                return r;\n            }\n            function D(t) {\n                return t < 1e-6 && t > 0 || t > -1e-6 && t < 0 ? i(1e4 * t) / 1e4 : t;\n            }\n            function F() {\n                var t = this.props;\n                return \"matrix(\" + D(t[0]) + \",\" + D(t[1]) + \",\" + D(t[4]) + \",\" + D(t[5]) + \",\" + D(t[12]) + \",\" + D(t[13]) + \")\";\n            }\n            return function() {\n                this.reset = a, this.rotate = s, this.rotateX = n, this.rotateY = o, this.rotateZ = h, this.skew = p, this.skewFromAxis = f, this.shear = l, this.scale = c, this.setTransform = m, this.translate = d, this.transform = u, this.applyToPoint = x, this.applyToX = P, this.applyToY = E, this.applyToZ = S, this.applyToPointArray = w, this.applyToTriplePoints = k, this.applyToPointStringified = T, this.toCSS = M, this.to2dCSS = F, this.clone = v, this.cloneFromProps = b, this.equals = g, this.inversePoints = A, this.inversePoint = _, this.getInverseMatrix = C, this._t = this.transform, this.isIdentity = y, this._identity = !0, this._identityCalculated = !1, this.props = createTypedArray(\"float32\", 16), this.reset();\n            };\n        }();\n        function _typeof$3(t) {\n            return (_typeof$3 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        var lottie = {}, standalone = \"__[STANDALONE]__\", animationData = \"__[ANIMATIONDATA]__\", renderer = \"\";\n        function setLocation(t) {\n            setLocationHref(t);\n        }\n        function searchAnimations() {\n            !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations();\n        }\n        function setSubframeRendering(t) {\n            setSubframeEnabled(t);\n        }\n        function setPrefix(t) {\n            setIdPrefix(t);\n        }\n        function loadAnimation(t) {\n            return !0 === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t);\n        }\n        function setQuality(t) {\n            if (\"string\" == typeof t) switch(t){\n                case \"high\":\n                    setDefaultCurveSegments(200);\n                    break;\n                default:\n                case \"medium\":\n                    setDefaultCurveSegments(50);\n                    break;\n                case \"low\":\n                    setDefaultCurveSegments(10);\n            }\n            else !isNaN(t) && t > 1 && setDefaultCurveSegments(t);\n            getDefaultCurveSegments() >= 50 ? roundValues(!1) : roundValues(!0);\n        }\n        function inBrowser() {\n            return \"undefined\" != typeof navigator;\n        }\n        function installPlugin(t, e) {\n            \"expressions\" === t && setExpressionsPlugin(e);\n        }\n        function getFactory(t) {\n            switch(t){\n                case \"propertyFactory\":\n                    return PropertyFactory;\n                case \"shapePropertyFactory\":\n                    return ShapePropertyFactory;\n                case \"matrix\":\n                    return Matrix;\n                default:\n                    return null;\n            }\n        }\n        function checkReady() {\n            \"complete\" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations());\n        }\n        function getQueryVariable(t) {\n            for(var e = queryString.split(\"&\"), r = 0; r < e.length; r += 1){\n                var i = e[r].split(\"=\");\n                if (decodeURIComponent(i[0]) == t) return decodeURIComponent(i[1]);\n            }\n            return null;\n        }\n        lottie.play = animationManager.play, lottie.pause = animationManager.pause, lottie.setLocationHref = setLocation, lottie.togglePause = animationManager.togglePause, lottie.setSpeed = animationManager.setSpeed, lottie.setDirection = animationManager.setDirection, lottie.stop = animationManager.stop, lottie.searchAnimations = searchAnimations, lottie.registerAnimation = animationManager.registerAnimation, lottie.loadAnimation = loadAnimation, lottie.setSubframeRendering = setSubframeRendering, lottie.resize = animationManager.resize, lottie.goToAndStop = animationManager.goToAndStop, lottie.destroy = animationManager.destroy, lottie.setQuality = setQuality, lottie.inBrowser = inBrowser, lottie.installPlugin = installPlugin, lottie.freeze = animationManager.freeze, lottie.unfreeze = animationManager.unfreeze, lottie.setVolume = animationManager.setVolume, lottie.mute = animationManager.mute, lottie.unmute = animationManager.unmute, lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations, lottie.useWebWorker = setWebWorker, lottie.setIDPrefix = setPrefix, lottie.__getFactory = getFactory, lottie.version = \"5.10.2\";\n        var queryString = \"\";\n        if (standalone) {\n            var scripts = document.getElementsByTagName(\"script\"), index = scripts.length - 1, myScript = scripts[index] || {\n                src: \"\"\n            };\n            queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, \"\") : \"\", renderer = getQueryVariable(\"renderer\");\n        }\n        var readyStateCheckInterval = setInterval(checkReady, 100);\n        try {\n            \"object\" !== _typeof$3(exports) && (window.bodymovin = lottie);\n        } catch (t) {}\n        var ShapeModifiers = function() {\n            var t = {}, e = {};\n            return t.registerModifier = function(t, r) {\n                e[t] || (e[t] = r);\n            }, t.getModifier = function(t, r, i) {\n                return new e[t](r, i);\n            }, t;\n        }();\n        function ShapeModifier() {}\n        function TrimModifier() {}\n        function PuckerAndBloatModifier() {}\n        ShapeModifier.prototype.initModifierProperties = function() {}, ShapeModifier.prototype.addShapeToModifier = function() {}, ShapeModifier.prototype.addShape = function(t) {\n            if (!this.closed) {\n                t.sh.container.addDynamicProperty(t.sh);\n                var e = {\n                    shape: t.sh,\n                    data: t,\n                    localShapeCollection: shapeCollectionPool.newShapeCollection()\n                };\n                this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated();\n            }\n        }, ShapeModifier.prototype.init = function(t, e) {\n            this.shapes = [], this.elem = t, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e), this.frameId = initialDefaultFrame, this.closed = !1, this.k = !1, this.dynamicProperties.length ? this.k = !0 : this.getValue(!0);\n        }, ShapeModifier.prototype.processKeys = function() {\n            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties());\n        }, extendPrototype([\n            DynamicPropertyContainer\n        ], ShapeModifier), extendPrototype([\n            ShapeModifier\n        ], TrimModifier), TrimModifier.prototype.initModifierProperties = function(t, e) {\n            this.s = PropertyFactory.getProp(t, e.s, 0, .01, this), this.e = PropertyFactory.getProp(t, e.e, 0, .01, this), this.o = PropertyFactory.getProp(t, e.o, 0, 0, this), this.sValue = 0, this.eValue = 0, this.getValue = this.processKeys, this.m = e.m, this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n        }, TrimModifier.prototype.addShapeToModifier = function(t) {\n            t.pathsData = [];\n        }, TrimModifier.prototype.calculateShapeEdges = function(t, e, r, i, a) {\n            var s = [];\n            e <= 1 ? s.push({\n                s: t,\n                e: e\n            }) : t >= 1 ? s.push({\n                s: t - 1,\n                e: e - 1\n            }) : (s.push({\n                s: t,\n                e: 1\n            }), s.push({\n                s: 0,\n                e: e - 1\n            }));\n            var n, o, h = [], l = s.length;\n            for(n = 0; n < l; n += 1){\n                var p, f;\n                if (!((o = s[n]).e * a < i || o.s * a > i + r)) p = o.s * a <= i ? 0 : (o.s * a - i) / r, f = o.e * a >= i + r ? 1 : (o.e * a - i) / r, h.push([\n                    p,\n                    f\n                ]);\n            }\n            return h.length || h.push([\n                0,\n                0\n            ]), h;\n        }, TrimModifier.prototype.releasePathsData = function(t) {\n            var e, r = t.length;\n            for(e = 0; e < r; e += 1)segmentsLengthPool.release(t[e]);\n            return t.length = 0, t;\n        }, TrimModifier.prototype.processShapes = function(t) {\n            var e, r, i, a;\n            if (this._mdf || t) {\n                var s = this.o.v % 360 / 360;\n                if (s < 0 && (s += 1), (e = this.s.v > 1 ? 1 + s : this.s.v < 0 ? 0 + s : this.s.v + s) > (r = this.e.v > 1 ? 1 + s : this.e.v < 0 ? 0 + s : this.e.v + s)) {\n                    var n = e;\n                    e = r, r = n;\n                }\n                e = 1e-4 * Math.round(1e4 * e), r = 1e-4 * Math.round(1e4 * r), this.sValue = e, this.eValue = r;\n            } else e = this.sValue, r = this.eValue;\n            var o, h, l, p, f, c = this.shapes.length, m = 0;\n            if (r === e) for(a = 0; a < c; a += 1)this.shapes[a].localShapeCollection.releaseShapes(), this.shapes[a].shape._mdf = !0, this.shapes[a].shape.paths = this.shapes[a].localShapeCollection, this._mdf && (this.shapes[a].pathsData.length = 0);\n            else if (1 === r && 0 === e || 0 === r && 1 === e) {\n                if (this._mdf) for(a = 0; a < c; a += 1)this.shapes[a].pathsData.length = 0, this.shapes[a].shape._mdf = !0;\n            } else {\n                var d, u, y = [];\n                for(a = 0; a < c; a += 1)if ((d = this.shapes[a]).shape._mdf || this._mdf || t || 2 === this.m) {\n                    if (h = (i = d.shape.paths)._length, f = 0, !d.shape._mdf && d.pathsData.length) f = d.totalShapeLength;\n                    else {\n                        for(l = this.releasePathsData(d.pathsData), o = 0; o < h; o += 1)p = bez.getSegmentsLength(i.shapes[o]), l.push(p), f += p.totalLength;\n                        d.totalShapeLength = f, d.pathsData = l;\n                    }\n                    m += f, d.shape._mdf = !0;\n                } else d.shape.paths = d.localShapeCollection;\n                var g, v = e, b = r, x = 0;\n                for(a = c - 1; a >= 0; a -= 1)if ((d = this.shapes[a]).shape._mdf) {\n                    for((u = d.localShapeCollection).releaseShapes(), 2 === this.m && c > 1 ? (g = this.calculateShapeEdges(e, r, d.totalShapeLength, x, m), x += d.totalShapeLength) : g = [\n                        [\n                            v,\n                            b\n                        ]\n                    ], h = g.length, o = 0; o < h; o += 1){\n                        v = g[o][0], b = g[o][1], y.length = 0, b <= 1 ? y.push({\n                            s: d.totalShapeLength * v,\n                            e: d.totalShapeLength * b\n                        }) : v >= 1 ? y.push({\n                            s: d.totalShapeLength * (v - 1),\n                            e: d.totalShapeLength * (b - 1)\n                        }) : (y.push({\n                            s: d.totalShapeLength * v,\n                            e: d.totalShapeLength\n                        }), y.push({\n                            s: 0,\n                            e: d.totalShapeLength * (b - 1)\n                        }));\n                        var P = this.addShapes(d, y[0]);\n                        if (y[0].s !== y[0].e) {\n                            if (y.length > 1) if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {\n                                var E = P.pop();\n                                this.addPaths(P, u), P = this.addShapes(d, y[1], E);\n                            } else this.addPaths(P, u), P = this.addShapes(d, y[1]);\n                            this.addPaths(P, u);\n                        }\n                    }\n                    d.shape.paths = u;\n                }\n            }\n        }, TrimModifier.prototype.addPaths = function(t, e) {\n            var r, i = t.length;\n            for(r = 0; r < i; r += 1)e.addShape(t[r]);\n        }, TrimModifier.prototype.addSegment = function(t, e, r, i, a, s, n) {\n            a.setXYAt(e[0], e[1], \"o\", s), a.setXYAt(r[0], r[1], \"i\", s + 1), n && a.setXYAt(t[0], t[1], \"v\", s), a.setXYAt(i[0], i[1], \"v\", s + 1);\n        }, TrimModifier.prototype.addSegmentFromArray = function(t, e, r, i) {\n            e.setXYAt(t[1], t[5], \"o\", r), e.setXYAt(t[2], t[6], \"i\", r + 1), i && e.setXYAt(t[0], t[4], \"v\", r), e.setXYAt(t[3], t[7], \"v\", r + 1);\n        }, TrimModifier.prototype.addShapes = function(t, e, r) {\n            var i, a, s, n, o, h, l, p, f = t.pathsData, c = t.shape.paths.shapes, m = t.shape.paths._length, d = 0, u = [], y = !0;\n            for(r ? (o = r._length, p = r._length) : (r = shapePool.newElement(), o = 0, p = 0), u.push(r), i = 0; i < m; i += 1){\n                for(h = f[i].lengths, r.c = c[i].c, s = c[i].c ? h.length : h.length + 1, a = 1; a < s; a += 1)if (d + (n = h[a - 1]).addedLength < e.s) d += n.addedLength, r.c = !1;\n                else {\n                    if (d > e.e) {\n                        r.c = !1;\n                        break;\n                    }\n                    e.s <= d && e.e >= d + n.addedLength ? (this.addSegment(c[i].v[a - 1], c[i].o[a - 1], c[i].i[a], c[i].v[a], r, o, y), y = !1) : (l = bez.getNewSegment(c[i].v[a - 1], c[i].v[a], c[i].o[a - 1], c[i].i[a], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[a - 1]), this.addSegmentFromArray(l, r, o, y), y = !1, r.c = !1), d += n.addedLength, o += 1;\n                }\n                if (c[i].c && h.length) {\n                    if (n = h[a - 1], d <= e.e) {\n                        var g = h[a - 1].addedLength;\n                        e.s <= d && e.e >= d + g ? (this.addSegment(c[i].v[a - 1], c[i].o[a - 1], c[i].i[0], c[i].v[0], r, o, y), y = !1) : (l = bez.getNewSegment(c[i].v[a - 1], c[i].v[0], c[i].o[a - 1], c[i].i[0], (e.s - d) / g, (e.e - d) / g, h[a - 1]), this.addSegmentFromArray(l, r, o, y), y = !1, r.c = !1);\n                    } else r.c = !1;\n                    d += n.addedLength, o += 1;\n                }\n                if (r._length && (r.setXYAt(r.v[p][0], r.v[p][1], \"i\", p), r.setXYAt(r.v[r._length - 1][0], r.v[r._length - 1][1], \"o\", r._length - 1)), d > e.e) break;\n                i < m - 1 && (r = shapePool.newElement(), y = !0, u.push(r), o = 0);\n            }\n            return u;\n        }, extendPrototype([\n            ShapeModifier\n        ], PuckerAndBloatModifier), PuckerAndBloatModifier.prototype.initModifierProperties = function(t, e) {\n            this.getValue = this.processKeys, this.amount = PropertyFactory.getProp(t, e.a, 0, null, this), this._isAnimated = !!this.amount.effectsSequence.length;\n        }, PuckerAndBloatModifier.prototype.processPath = function(t, e) {\n            var r = e / 100, i = [\n                0,\n                0\n            ], a = t._length, s = 0;\n            for(s = 0; s < a; s += 1)i[0] += t.v[s][0], i[1] += t.v[s][1];\n            i[0] /= a, i[1] /= a;\n            var n, o, h, l, p, f, c = shapePool.newElement();\n            for(c.c = t.c, s = 0; s < a; s += 1)n = t.v[s][0] + (i[0] - t.v[s][0]) * r, o = t.v[s][1] + (i[1] - t.v[s][1]) * r, h = t.o[s][0] + (i[0] - t.o[s][0]) * -r, l = t.o[s][1] + (i[1] - t.o[s][1]) * -r, p = t.i[s][0] + (i[0] - t.i[s][0]) * -r, f = t.i[s][1] + (i[1] - t.i[s][1]) * -r, c.setTripleAt(n, o, h, l, p, f, s);\n            return c;\n        }, PuckerAndBloatModifier.prototype.processShapes = function(t) {\n            var e, r, i, a, s, n, o = this.shapes.length, h = this.amount.v;\n            if (0 !== h) for(r = 0; r < o; r += 1){\n                if (n = (s = this.shapes[r]).localShapeCollection, s.shape._mdf || this._mdf || t) for(n.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, a = s.shape.paths._length, i = 0; i < a; i += 1)n.addShape(this.processPath(e[i], h));\n                s.shape.paths = s.localShapeCollection;\n            }\n            this.dynamicProperties.length || (this._mdf = !1);\n        };\n        var TransformPropertyFactory = function() {\n            var t = [\n                0,\n                0\n            ];\n            function e(t, e, r) {\n                if (this.elem = t, this.frameId = -1, this.propType = \"transform\", this.data = e, this.v = new Matrix, this.pre = new Matrix, this.appliedTransformations = 0, this.initDynamicPropertyContainer(r || t), e.p && e.p.s ? (this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this), this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this), e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(t, e.p || {\n                    k: [\n                        0,\n                        0,\n                        0\n                    ]\n                }, 1, 0, this), e.rx) {\n                    if (this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this), this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this), this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this), e.or.k[0].ti) {\n                        var i, a = e.or.k.length;\n                        for(i = 0; i < a; i += 1)e.or.k[i].to = null, e.or.k[i].ti = null;\n                    }\n                    this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this), this.or.sh = !0;\n                } else this.r = PropertyFactory.getProp(t, e.r || {\n                    k: 0\n                }, 0, degToRads, this);\n                e.sk && (this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this), this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this)), this.a = PropertyFactory.getProp(t, e.a || {\n                    k: [\n                        0,\n                        0,\n                        0\n                    ]\n                }, 1, 0, this), this.s = PropertyFactory.getProp(t, e.s || {\n                    k: [\n                        100,\n                        100,\n                        100\n                    ]\n                }, 1, .01, this), e.o ? this.o = PropertyFactory.getProp(t, e.o, 0, .01, t) : this.o = {\n                    _mdf: !1,\n                    v: 1\n                }, this._isDirty = !0, this.dynamicProperties.length || this.getValue(!0);\n            }\n            return e.prototype = {\n                applyToMatrix: function(t) {\n                    var e = this._mdf;\n                    this.iterateDynamicProperties(), this._mdf = this._mdf || e, this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && t.skewFromAxis(-this.sk.v, this.sa.v), this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n                },\n                getValue: function(e) {\n                    if (this.elem.globalData.frameId !== this.frameId) {\n                        if (this._isDirty && (this.precalculateMatrix(), this._isDirty = !1), this.iterateDynamicProperties(), this._mdf || e) {\n                            var r;\n                            if (this.v.cloneFromProps(this.pre.props), this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.autoOriented) {\n                                var i, a;\n                                if (r = this.elem.globalData.frameRate, this.p && this.p.keyframes && this.p.getValueAtTime) this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (i = this.p.getValueAtTime((this.p.keyframes[0].t + .01) / r, 0), a = this.p.getValueAtTime(this.p.keyframes[0].t / r, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (i = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / r, 0), a = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - .05) / r, 0)) : (i = this.p.pv, a = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - .01) / r, this.p.offsetTime));\n                                else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n                                    i = [], a = [];\n                                    var s = this.px, n = this.py;\n                                    s._caching.lastFrame + s.offsetTime <= s.keyframes[0].t ? (i[0] = s.getValueAtTime((s.keyframes[0].t + .01) / r, 0), i[1] = n.getValueAtTime((n.keyframes[0].t + .01) / r, 0), a[0] = s.getValueAtTime(s.keyframes[0].t / r, 0), a[1] = n.getValueAtTime(n.keyframes[0].t / r, 0)) : s._caching.lastFrame + s.offsetTime >= s.keyframes[s.keyframes.length - 1].t ? (i[0] = s.getValueAtTime(s.keyframes[s.keyframes.length - 1].t / r, 0), i[1] = n.getValueAtTime(n.keyframes[n.keyframes.length - 1].t / r, 0), a[0] = s.getValueAtTime((s.keyframes[s.keyframes.length - 1].t - .01) / r, 0), a[1] = n.getValueAtTime((n.keyframes[n.keyframes.length - 1].t - .01) / r, 0)) : (i = [\n                                        s.pv,\n                                        n.pv\n                                    ], a[0] = s.getValueAtTime((s._caching.lastFrame + s.offsetTime - .01) / r, s.offsetTime), a[1] = n.getValueAtTime((n._caching.lastFrame + n.offsetTime - .01) / r, n.offsetTime));\n                                } else i = a = t;\n                                this.v.rotate(-Math.atan2(i[1] - a[1], i[0] - a[0]));\n                            }\n                            this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n                        }\n                        this.frameId = this.elem.globalData.frameId;\n                    }\n                },\n                precalculateMatrix: function() {\n                    if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations = 1, !this.s.effectsSequence.length)) {\n                        if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.appliedTransformations = 2, this.sk) {\n                            if (this.sk.effectsSequence.length || this.sa.effectsSequence.length) return;\n                            this.pre.skewFromAxis(-this.sk.v, this.sa.v), this.appliedTransformations = 3;\n                        }\n                        this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v), this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.appliedTransformations = 4);\n                    }\n                },\n                autoOrient: function() {}\n            }, extendPrototype([\n                DynamicPropertyContainer\n            ], e), e.prototype.addDynamicProperty = function(t) {\n                this._addDynamicProperty(t), this.elem.addDynamicProperty(t), this._isDirty = !0;\n            }, e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty, {\n                getTransformProperty: function(t, r, i) {\n                    return new e(t, r, i);\n                }\n            };\n        }();\n        function RepeaterModifier() {}\n        function RoundCornersModifier() {}\n        function floatEqual(t, e) {\n            return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e));\n        }\n        function floatZero(t) {\n            return Math.abs(t) <= 1e-5;\n        }\n        function lerp(t, e, r) {\n            return t * (1 - r) + e * r;\n        }\n        function lerpPoint(t, e, r) {\n            return [\n                lerp(t[0], e[0], r),\n                lerp(t[1], e[1], r)\n            ];\n        }\n        function quadRoots(t, e, r) {\n            if (0 === t) return [];\n            var i = e * e - 4 * t * r;\n            if (i < 0) return [];\n            var a = -e / (2 * t);\n            if (0 === i) return [\n                a\n            ];\n            var s = Math.sqrt(i) / (2 * t);\n            return [\n                a - s,\n                a + s\n            ];\n        }\n        function polynomialCoefficients(t, e, r, i) {\n            return [\n                3 * e - t - 3 * r + i,\n                3 * t - 6 * e + 3 * r,\n                -3 * t + 3 * e,\n                t\n            ];\n        }\n        function singlePoint(t) {\n            return new PolynomialBezier(t, t, t, t, !1);\n        }\n        function PolynomialBezier(t, e, r, i, a) {\n            a && pointEqual(t, e) && (e = lerpPoint(t, i, 1 / 3)), a && pointEqual(r, i) && (r = lerpPoint(t, i, 2 / 3));\n            var s = polynomialCoefficients(t[0], e[0], r[0], i[0]), n = polynomialCoefficients(t[1], e[1], r[1], i[1]);\n            this.a = [\n                s[0],\n                n[0]\n            ], this.b = [\n                s[1],\n                n[1]\n            ], this.c = [\n                s[2],\n                n[2]\n            ], this.d = [\n                s[3],\n                n[3]\n            ], this.points = [\n                t,\n                e,\n                r,\n                i\n            ];\n        }\n        function extrema(t, e) {\n            var r = t.points[0][e], i = t.points[t.points.length - 1][e];\n            if (r > i) {\n                var a = i;\n                i = r, r = a;\n            }\n            for(var s = quadRoots(3 * t.a[e], 2 * t.b[e], t.c[e]), n = 0; n < s.length; n += 1)if (s[n] > 0 && s[n] < 1) {\n                var o = t.point(s[n])[e];\n                o < r ? r = o : o > i && (i = o);\n            }\n            return {\n                min: r,\n                max: i\n            };\n        }\n        function intersectData(t, e, r) {\n            var i = t.boundingBox();\n            return {\n                cx: i.cx,\n                cy: i.cy,\n                width: i.width,\n                height: i.height,\n                bez: t,\n                t: (e + r) / 2,\n                t1: e,\n                t2: r\n            };\n        }\n        function splitData(t) {\n            var e = t.bez.split(.5);\n            return [\n                intersectData(e[0], t.t1, t.t),\n                intersectData(e[1], t.t, t.t2)\n            ];\n        }\n        function boxIntersect(t, e) {\n            return 2 * Math.abs(t.cx - e.cx) < t.width + e.width && 2 * Math.abs(t.cy - e.cy) < t.height + e.height;\n        }\n        function intersectsImpl(t, e, r, i, a, s) {\n            if (boxIntersect(t, e)) if (r >= s || t.width <= i && t.height <= i && e.width <= i && e.height <= i) a.push([\n                t.t,\n                e.t\n            ]);\n            else {\n                var n = splitData(t), o = splitData(e);\n                intersectsImpl(n[0], o[0], r + 1, i, a, s), intersectsImpl(n[0], o[1], r + 1, i, a, s), intersectsImpl(n[1], o[0], r + 1, i, a, s), intersectsImpl(n[1], o[1], r + 1, i, a, s);\n            }\n        }\n        function crossProduct(t, e) {\n            return [\n                t[1] * e[2] - t[2] * e[1],\n                t[2] * e[0] - t[0] * e[2],\n                t[0] * e[1] - t[1] * e[0]\n            ];\n        }\n        function lineIntersection(t, e, r, i) {\n            var a = [\n                t[0],\n                t[1],\n                1\n            ], s = [\n                e[0],\n                e[1],\n                1\n            ], n = [\n                r[0],\n                r[1],\n                1\n            ], o = [\n                i[0],\n                i[1],\n                1\n            ], h = crossProduct(crossProduct(a, s), crossProduct(n, o));\n            return floatZero(h[2]) ? null : [\n                h[0] / h[2],\n                h[1] / h[2]\n            ];\n        }\n        function polarOffset(t, e, r) {\n            return [\n                t[0] + Math.cos(e) * r,\n                t[1] - Math.sin(e) * r\n            ];\n        }\n        function pointDistance(t, e) {\n            return Math.hypot(t[0] - e[0], t[1] - e[1]);\n        }\n        function pointEqual(t, e) {\n            return floatEqual(t[0], e[0]) && floatEqual(t[1], e[1]);\n        }\n        function ZigZagModifier() {}\n        function setPoint(t, e, r, i, a, s, n) {\n            var o = r - Math.PI / 2, h = r + Math.PI / 2, l = e[0] + Math.cos(r) * i * a, p = e[1] - Math.sin(r) * i * a;\n            t.setTripleAt(l, p, l + Math.cos(o) * s, p - Math.sin(o) * s, l + Math.cos(h) * n, p - Math.sin(h) * n, t.length());\n        }\n        function getPerpendicularVector(t, e) {\n            var r = [\n                e[0] - t[0],\n                e[1] - t[1]\n            ], i = .5 * -Math.PI;\n            return [\n                Math.cos(i) * r[0] - Math.sin(i) * r[1],\n                Math.sin(i) * r[0] + Math.cos(i) * r[1]\n            ];\n        }\n        function getProjectingAngle(t, e) {\n            var r = 0 === e ? t.length() - 1 : e - 1, i = (e + 1) % t.length(), a = getPerpendicularVector(t.v[r], t.v[i]);\n            return Math.atan2(0, 1) - Math.atan2(a[1], a[0]);\n        }\n        function zigZagCorner(t, e, r, i, a, s, n) {\n            var o = getProjectingAngle(e, r), h = e.v[r % e._length], l = e.v[0 === r ? e._length - 1 : r - 1], p = e.v[(r + 1) % e._length], f = 2 === s ? Math.sqrt(Math.pow(h[0] - l[0], 2) + Math.pow(h[1] - l[1], 2)) : 0, c = 2 === s ? Math.sqrt(Math.pow(h[0] - p[0], 2) + Math.pow(h[1] - p[1], 2)) : 0;\n            setPoint(t, e.v[r % e._length], o, n, i, c / (2 * (a + 1)), f / (2 * (a + 1)), s);\n        }\n        function zigZagSegment(t, e, r, i, a, s) {\n            for(var n = 0; n < i; n += 1){\n                var o = (n + 1) / (i + 1), h = 2 === a ? Math.sqrt(Math.pow(e.points[3][0] - e.points[0][0], 2) + Math.pow(e.points[3][1] - e.points[0][1], 2)) : 0, l = e.normalAngle(o);\n                setPoint(t, e.point(o), l, s, r, h / (2 * (i + 1)), h / (2 * (i + 1)), a), s = -s;\n            }\n            return s;\n        }\n        function linearOffset(t, e, r) {\n            var i = Math.atan2(e[0] - t[0], e[1] - t[1]);\n            return [\n                polarOffset(t, i, r),\n                polarOffset(e, i, r)\n            ];\n        }\n        function offsetSegment(t, e) {\n            var r, i, a, s, n, o, h;\n            r = (h = linearOffset(t.points[0], t.points[1], e))[0], i = h[1], a = (h = linearOffset(t.points[1], t.points[2], e))[0], s = h[1], n = (h = linearOffset(t.points[2], t.points[3], e))[0], o = h[1];\n            var l = lineIntersection(r, i, a, s);\n            null === l && (l = i);\n            var p = lineIntersection(n, o, a, s);\n            return null === p && (p = n), new PolynomialBezier(r, l, p, o);\n        }\n        function joinLines(t, e, r, i, a) {\n            var s = e.points[3], n = r.points[0];\n            if (3 === i) return s;\n            if (pointEqual(s, n)) return s;\n            if (2 === i) {\n                var o = -e.tangentAngle(1), h = -r.tangentAngle(0) + Math.PI, l = lineIntersection(s, polarOffset(s, o + Math.PI / 2, 100), n, polarOffset(n, o + Math.PI / 2, 100)), p = l ? pointDistance(l, s) : pointDistance(s, n) / 2, f = polarOffset(s, o, 2 * p * roundCorner);\n                return t.setXYAt(f[0], f[1], \"o\", t.length() - 1), f = polarOffset(n, h, 2 * p * roundCorner), t.setTripleAt(n[0], n[1], n[0], n[1], f[0], f[1], t.length()), n;\n            }\n            var c = lineIntersection(pointEqual(s, e.points[2]) ? e.points[0] : e.points[2], s, n, pointEqual(n, r.points[1]) ? r.points[3] : r.points[1]);\n            return c && pointDistance(c, s) < a ? (t.setTripleAt(c[0], c[1], c[0], c[1], c[0], c[1], t.length()), c) : s;\n        }\n        function getIntersection(t, e) {\n            var r = t.intersections(e);\n            return r.length && floatEqual(r[0][0], 1) && r.shift(), r.length ? r[0] : null;\n        }\n        function pruneSegmentIntersection(t, e) {\n            var r = t.slice(), i = e.slice(), a = getIntersection(t[t.length - 1], e[0]);\n            return a && (r[t.length - 1] = t[t.length - 1].split(a[0])[0], i[0] = e[0].split(a[1])[1]), t.length > 1 && e.length > 1 && (a = getIntersection(t[0], e[e.length - 1])) ? [\n                [\n                    t[0].split(a[0])[0]\n                ],\n                [\n                    e[e.length - 1].split(a[1])[1]\n                ]\n            ] : [\n                r,\n                i\n            ];\n        }\n        function pruneIntersections(t) {\n            for(var e, r = 1; r < t.length; r += 1)e = pruneSegmentIntersection(t[r - 1], t[r]), t[r - 1] = e[0], t[r] = e[1];\n            return t.length > 1 && (e = pruneSegmentIntersection(t[t.length - 1], t[0]), t[t.length - 1] = e[0], t[0] = e[1]), t;\n        }\n        function offsetSegmentSplit(t, e) {\n            var r, i, a, s, n = t.inflectionPoints();\n            if (0 === n.length) return [\n                offsetSegment(t, e)\n            ];\n            if (1 === n.length || floatEqual(n[1], 1)) return r = (a = t.split(n[0]))[0], i = a[1], [\n                offsetSegment(r, e),\n                offsetSegment(i, e)\n            ];\n            r = (a = t.split(n[0]))[0];\n            var o = (n[1] - n[0]) / (1 - n[0]);\n            return s = (a = a[1].split(o))[0], i = a[1], [\n                offsetSegment(r, e),\n                offsetSegment(s, e),\n                offsetSegment(i, e)\n            ];\n        }\n        function OffsetPathModifier() {}\n        function getFontProperties(t) {\n            for(var e = t.fStyle ? t.fStyle.split(\" \") : [], r = \"normal\", i = \"normal\", a = e.length, s = 0; s < a; s += 1)switch(e[s].toLowerCase()){\n                case \"italic\":\n                    i = \"italic\";\n                    break;\n                case \"bold\":\n                    r = \"700\";\n                    break;\n                case \"black\":\n                    r = \"900\";\n                    break;\n                case \"medium\":\n                    r = \"500\";\n                    break;\n                case \"regular\":\n                case \"normal\":\n                    r = \"400\";\n                    break;\n                case \"light\":\n                case \"thin\":\n                    r = \"200\";\n            }\n            return {\n                style: i,\n                weight: t.fWeight || r\n            };\n        }\n        extendPrototype([\n            ShapeModifier\n        ], RepeaterModifier), RepeaterModifier.prototype.initModifierProperties = function(t, e) {\n            this.getValue = this.processKeys, this.c = PropertyFactory.getProp(t, e.c, 0, null, this), this.o = PropertyFactory.getProp(t, e.o, 0, null, this), this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this), this.so = PropertyFactory.getProp(t, e.tr.so, 0, .01, this), this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, .01, this), this.data = e, this.dynamicProperties.length || this.getValue(!0), this._isAnimated = !!this.dynamicProperties.length, this.pMatrix = new Matrix, this.rMatrix = new Matrix, this.sMatrix = new Matrix, this.tMatrix = new Matrix, this.matrix = new Matrix;\n        }, RepeaterModifier.prototype.applyTransforms = function(t, e, r, i, a, s) {\n            var n = s ? -1 : 1, o = i.s.v[0] + (1 - i.s.v[0]) * (1 - a), h = i.s.v[1] + (1 - i.s.v[1]) * (1 - a);\n            t.translate(i.p.v[0] * n * a, i.p.v[1] * n * a, i.p.v[2]), e.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]), e.rotate(-i.r.v * n * a), e.translate(i.a.v[0], i.a.v[1], i.a.v[2]), r.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]), r.scale(s ? 1 / o : o, s ? 1 / h : h), r.translate(i.a.v[0], i.a.v[1], i.a.v[2]);\n        }, RepeaterModifier.prototype.init = function(t, e, r, i) {\n            for(this.elem = t, this.arr = e, this.pos = r, this.elemsData = i, this._currentCopies = 0, this._elements = [], this._groups = [], this.frameId = -1, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e[r]); r > 0;)r -= 1, this._elements.unshift(e[r]);\n            this.dynamicProperties.length ? this.k = !0 : this.getValue(!0);\n        }, RepeaterModifier.prototype.resetElements = function(t) {\n            var e, r = t.length;\n            for(e = 0; e < r; e += 1)t[e]._processed = !1, \"gr\" === t[e].ty && this.resetElements(t[e].it);\n        }, RepeaterModifier.prototype.cloneElements = function(t) {\n            var e = JSON.parse(JSON.stringify(t));\n            return this.resetElements(e), e;\n        }, RepeaterModifier.prototype.changeGroupRender = function(t, e) {\n            var r, i = t.length;\n            for(r = 0; r < i; r += 1)t[r]._render = e, \"gr\" === t[r].ty && this.changeGroupRender(t[r].it, e);\n        }, RepeaterModifier.prototype.processShapes = function(t) {\n            var e, r, i, a, s, n = !1;\n            if (this._mdf || t) {\n                var o, h = Math.ceil(this.c.v);\n                if (this._groups.length < h) {\n                    for(; this._groups.length < h;){\n                        var l = {\n                            it: this.cloneElements(this._elements),\n                            ty: \"gr\"\n                        };\n                        l.it.push({\n                            a: {\n                                a: 0,\n                                ix: 1,\n                                k: [\n                                    0,\n                                    0\n                                ]\n                            },\n                            nm: \"Transform\",\n                            o: {\n                                a: 0,\n                                ix: 7,\n                                k: 100\n                            },\n                            p: {\n                                a: 0,\n                                ix: 2,\n                                k: [\n                                    0,\n                                    0\n                                ]\n                            },\n                            r: {\n                                a: 1,\n                                ix: 6,\n                                k: [\n                                    {\n                                        s: 0,\n                                        e: 0,\n                                        t: 0\n                                    },\n                                    {\n                                        s: 0,\n                                        e: 0,\n                                        t: 1\n                                    }\n                                ]\n                            },\n                            s: {\n                                a: 0,\n                                ix: 3,\n                                k: [\n                                    100,\n                                    100\n                                ]\n                            },\n                            sa: {\n                                a: 0,\n                                ix: 5,\n                                k: 0\n                            },\n                            sk: {\n                                a: 0,\n                                ix: 4,\n                                k: 0\n                            },\n                            ty: \"tr\"\n                        }), this.arr.splice(0, 0, l), this._groups.splice(0, 0, l), this._currentCopies += 1;\n                    }\n                    this.elem.reloadShapes(), n = !0;\n                }\n                for(s = 0, i = 0; i <= this._groups.length - 1; i += 1){\n                    if (o = s < h, this._groups[i]._render = o, this.changeGroupRender(this._groups[i].it, o), !o) {\n                        var p = this.elemsData[i].it, f = p[p.length - 1];\n                        0 !== f.transform.op.v ? (f.transform.op._mdf = !0, f.transform.op.v = 0) : f.transform.op._mdf = !1;\n                    }\n                    s += 1;\n                }\n                this._currentCopies = h;\n                var c = this.o.v, m = c % 1, d = c > 0 ? Math.floor(c) : Math.ceil(c), u = this.pMatrix.props, y = this.rMatrix.props, g = this.sMatrix.props;\n                this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();\n                var v, b, x = 0;\n                if (c > 0) {\n                    for(; x < d;)this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), x += 1;\n                    m && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, m, !1), x += m);\n                } else if (c < 0) {\n                    for(; x > d;)this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0), x -= 1;\n                    m && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -m, !0), x -= m);\n                }\n                for(i = 1 === this.data.m ? 0 : this._currentCopies - 1, a = 1 === this.data.m ? 1 : -1, s = this._currentCopies; s;){\n                    if (b = (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props).length, e[e.length - 1].transform.mProps._mdf = !0, e[e.length - 1].transform.op._mdf = !0, e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1)), 0 !== x) {\n                        for((0 !== i && 1 === a || i !== this._currentCopies - 1 && -1 === a) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]), this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]), this.matrix.transform(u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7], u[8], u[9], u[10], u[11], u[12], u[13], u[14], u[15]), v = 0; v < b; v += 1)r[v] = this.matrix.props[v];\n                        this.matrix.reset();\n                    } else for(this.matrix.reset(), v = 0; v < b; v += 1)r[v] = this.matrix.props[v];\n                    x += 1, s -= 1, i += a;\n                }\n            } else for(s = this._currentCopies, i = 0, a = 1; s;)r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props, e[e.length - 1].transform.mProps._mdf = !1, e[e.length - 1].transform.op._mdf = !1, s -= 1, i += a;\n            return n;\n        }, RepeaterModifier.prototype.addShape = function() {}, extendPrototype([\n            ShapeModifier\n        ], RoundCornersModifier), RoundCornersModifier.prototype.initModifierProperties = function(t, e) {\n            this.getValue = this.processKeys, this.rd = PropertyFactory.getProp(t, e.r, 0, null, this), this._isAnimated = !!this.rd.effectsSequence.length;\n        }, RoundCornersModifier.prototype.processPath = function(t, e) {\n            var r, i = shapePool.newElement();\n            i.c = t.c;\n            var a, s, n, o, h, l, p, f, c, m, d, u, y = t._length, g = 0;\n            for(r = 0; r < y; r += 1)a = t.v[r], n = t.o[r], s = t.i[r], a[0] === n[0] && a[1] === n[1] && a[0] === s[0] && a[1] === s[1] ? 0 !== r && r !== y - 1 || t.c ? (o = 0 === r ? t.v[y - 1] : t.v[r - 1], l = (h = Math.sqrt(Math.pow(a[0] - o[0], 2) + Math.pow(a[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = d = a[0] + (o[0] - a[0]) * l, f = u = a[1] - (a[1] - o[1]) * l, c = p - (p - a[0]) * roundCorner, m = f - (f - a[1]) * roundCorner, i.setTripleAt(p, f, c, m, d, u, g), g += 1, o = r === y - 1 ? t.v[0] : t.v[r + 1], l = (h = Math.sqrt(Math.pow(a[0] - o[0], 2) + Math.pow(a[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = c = a[0] + (o[0] - a[0]) * l, f = m = a[1] + (o[1] - a[1]) * l, d = p - (p - a[0]) * roundCorner, u = f - (f - a[1]) * roundCorner, i.setTripleAt(p, f, c, m, d, u, g), g += 1) : (i.setTripleAt(a[0], a[1], n[0], n[1], s[0], s[1], g), g += 1) : (i.setTripleAt(t.v[r][0], t.v[r][1], t.o[r][0], t.o[r][1], t.i[r][0], t.i[r][1], g), g += 1);\n            return i;\n        }, RoundCornersModifier.prototype.processShapes = function(t) {\n            var e, r, i, a, s, n, o = this.shapes.length, h = this.rd.v;\n            if (0 !== h) for(r = 0; r < o; r += 1){\n                if (n = (s = this.shapes[r]).localShapeCollection, s.shape._mdf || this._mdf || t) for(n.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, a = s.shape.paths._length, i = 0; i < a; i += 1)n.addShape(this.processPath(e[i], h));\n                s.shape.paths = s.localShapeCollection;\n            }\n            this.dynamicProperties.length || (this._mdf = !1);\n        }, PolynomialBezier.prototype.point = function(t) {\n            return [\n                ((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0],\n                ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]\n            ];\n        }, PolynomialBezier.prototype.derivative = function(t) {\n            return [\n                (3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0],\n                (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]\n            ];\n        }, PolynomialBezier.prototype.tangentAngle = function(t) {\n            var e = this.derivative(t);\n            return Math.atan2(e[1], e[0]);\n        }, PolynomialBezier.prototype.normalAngle = function(t) {\n            var e = this.derivative(t);\n            return Math.atan2(e[0], e[1]);\n        }, PolynomialBezier.prototype.inflectionPoints = function() {\n            var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];\n            if (floatZero(t)) return [];\n            var e = -.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / t, r = e * e - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / t;\n            if (r < 0) return [];\n            var i = Math.sqrt(r);\n            return floatZero(i) ? i > 0 && i < 1 ? [\n                e\n            ] : [] : [\n                e - i,\n                e + i\n            ].filter(function(t) {\n                return t > 0 && t < 1;\n            });\n        }, PolynomialBezier.prototype.split = function(t) {\n            if (t <= 0) return [\n                singlePoint(this.points[0]),\n                this\n            ];\n            if (t >= 1) return [\n                this,\n                singlePoint(this.points[this.points.length - 1])\n            ];\n            var e = lerpPoint(this.points[0], this.points[1], t), r = lerpPoint(this.points[1], this.points[2], t), i = lerpPoint(this.points[2], this.points[3], t), a = lerpPoint(e, r, t), s = lerpPoint(r, i, t), n = lerpPoint(a, s, t);\n            return [\n                new PolynomialBezier(this.points[0], e, a, n, !0),\n                new PolynomialBezier(n, s, i, this.points[3], !0)\n            ];\n        }, PolynomialBezier.prototype.bounds = function() {\n            return {\n                x: extrema(this, 0),\n                y: extrema(this, 1)\n            };\n        }, PolynomialBezier.prototype.boundingBox = function() {\n            var t = this.bounds();\n            return {\n                left: t.x.min,\n                right: t.x.max,\n                top: t.y.min,\n                bottom: t.y.max,\n                width: t.x.max - t.x.min,\n                height: t.y.max - t.y.min,\n                cx: (t.x.max + t.x.min) / 2,\n                cy: (t.y.max + t.y.min) / 2\n            };\n        }, PolynomialBezier.prototype.intersections = function(t, e, r) {\n            void 0 === e && (e = 2), void 0 === r && (r = 7);\n            var i = [];\n            return intersectsImpl(intersectData(this, 0, 1), intersectData(t, 0, 1), 0, e, i, r), i;\n        }, PolynomialBezier.shapeSegment = function(t, e) {\n            var r = (e + 1) % t.length();\n            return new PolynomialBezier(t.v[e], t.o[e], t.i[r], t.v[r], !0);\n        }, PolynomialBezier.shapeSegmentInverted = function(t, e) {\n            var r = (e + 1) % t.length();\n            return new PolynomialBezier(t.v[r], t.i[r], t.o[e], t.v[e], !0);\n        }, extendPrototype([\n            ShapeModifier\n        ], ZigZagModifier), ZigZagModifier.prototype.initModifierProperties = function(t, e) {\n            this.getValue = this.processKeys, this.amplitude = PropertyFactory.getProp(t, e.s, 0, null, this), this.frequency = PropertyFactory.getProp(t, e.r, 0, null, this), this.pointsType = PropertyFactory.getProp(t, e.pt, 0, null, this), this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length;\n        }, ZigZagModifier.prototype.processPath = function(t, e, r, i) {\n            var a = t._length, s = shapePool.newElement();\n            if (s.c = t.c, t.c || (a -= 1), 0 === a) return s;\n            var n = -1, o = PolynomialBezier.shapeSegment(t, 0);\n            zigZagCorner(s, t, 0, e, r, i, n);\n            for(var h = 0; h < a; h += 1)n = zigZagSegment(s, o, e, r, i, -n), o = h !== a - 1 || t.c ? PolynomialBezier.shapeSegment(t, (h + 1) % a) : null, zigZagCorner(s, t, h + 1, e, r, i, n);\n            return s;\n        }, ZigZagModifier.prototype.processShapes = function(t) {\n            var e, r, i, a, s, n, o = this.shapes.length, h = this.amplitude.v, l = Math.max(0, Math.round(this.frequency.v)), p = this.pointsType.v;\n            if (0 !== h) for(r = 0; r < o; r += 1){\n                if (n = (s = this.shapes[r]).localShapeCollection, s.shape._mdf || this._mdf || t) for(n.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, a = s.shape.paths._length, i = 0; i < a; i += 1)n.addShape(this.processPath(e[i], h, l, p));\n                s.shape.paths = s.localShapeCollection;\n            }\n            this.dynamicProperties.length || (this._mdf = !1);\n        }, extendPrototype([\n            ShapeModifier\n        ], OffsetPathModifier), OffsetPathModifier.prototype.initModifierProperties = function(t, e) {\n            this.getValue = this.processKeys, this.amount = PropertyFactory.getProp(t, e.a, 0, null, this), this.miterLimit = PropertyFactory.getProp(t, e.ml, 0, null, this), this.lineJoin = e.lj, this._isAnimated = 0 !== this.amount.effectsSequence.length;\n        }, OffsetPathModifier.prototype.processPath = function(t, e, r, i) {\n            var a = shapePool.newElement();\n            a.c = t.c;\n            var s, n, o, h = t.length();\n            t.c || (h -= 1);\n            var l = [];\n            for(s = 0; s < h; s += 1)o = PolynomialBezier.shapeSegment(t, s), l.push(offsetSegmentSplit(o, e));\n            if (!t.c) for(s = h - 1; s >= 0; s -= 1)o = PolynomialBezier.shapeSegmentInverted(t, s), l.push(offsetSegmentSplit(o, e));\n            l = pruneIntersections(l);\n            var p = null, f = null;\n            for(s = 0; s < l.length; s += 1){\n                var c = l[s];\n                for(f && (p = joinLines(a, f, c[0], r, i)), f = c[c.length - 1], n = 0; n < c.length; n += 1)o = c[n], p && pointEqual(o.points[0], p) ? a.setXYAt(o.points[1][0], o.points[1][1], \"o\", a.length() - 1) : a.setTripleAt(o.points[0][0], o.points[0][1], o.points[1][0], o.points[1][1], o.points[0][0], o.points[0][1], a.length()), a.setTripleAt(o.points[3][0], o.points[3][1], o.points[3][0], o.points[3][1], o.points[2][0], o.points[2][1], a.length()), p = o.points[3];\n            }\n            return l.length && joinLines(a, f, l[0][0], r, i), a;\n        }, OffsetPathModifier.prototype.processShapes = function(t) {\n            var e, r, i, a, s, n, o = this.shapes.length, h = this.amount.v, l = this.miterLimit.v, p = this.lineJoin;\n            if (0 !== h) for(r = 0; r < o; r += 1){\n                if (n = (s = this.shapes[r]).localShapeCollection, s.shape._mdf || this._mdf || t) for(n.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, a = s.shape.paths._length, i = 0; i < a; i += 1)n.addShape(this.processPath(e[i], h, p, l));\n                s.shape.paths = s.localShapeCollection;\n            }\n            this.dynamicProperties.length || (this._mdf = !1);\n        };\n        var FontManager = function() {\n            var t = {\n                w: 0,\n                size: 0,\n                shapes: [],\n                data: {\n                    shapes: []\n                }\n            }, e = [];\n            e = e.concat([\n                2304,\n                2305,\n                2306,\n                2307,\n                2362,\n                2363,\n                2364,\n                2364,\n                2366,\n                2367,\n                2368,\n                2369,\n                2370,\n                2371,\n                2372,\n                2373,\n                2374,\n                2375,\n                2376,\n                2377,\n                2378,\n                2379,\n                2380,\n                2381,\n                2382,\n                2383,\n                2387,\n                2388,\n                2389,\n                2390,\n                2391,\n                2402,\n                2403\n            ]);\n            var r = [\n                \"d83cdffb\",\n                \"d83cdffc\",\n                \"d83cdffd\",\n                \"d83cdffe\",\n                \"d83cdfff\"\n            ], i = [\n                65039,\n                8205\n            ];\n            function a(t, e) {\n                var r = createTag(\"span\");\n                r.setAttribute(\"aria-hidden\", !0), r.style.fontFamily = e;\n                var i = createTag(\"span\");\n                i.innerText = \"giItT1WQy@!-/#\", r.style.position = \"absolute\", r.style.left = \"-10000px\", r.style.top = \"-10000px\", r.style.fontSize = \"300px\", r.style.fontVariant = \"normal\", r.style.fontStyle = \"normal\", r.style.fontWeight = \"normal\", r.style.letterSpacing = \"0\", r.appendChild(i), document.body.appendChild(r);\n                var a = i.offsetWidth;\n                return i.style.fontFamily = function(t) {\n                    var e, r = t.split(\",\"), i = r.length, a = [];\n                    for(e = 0; e < i; e += 1)\"sans-serif\" !== r[e] && \"monospace\" !== r[e] && a.push(r[e]);\n                    return a.join(\",\");\n                }(t) + \", \" + e, {\n                    node: i,\n                    w: a,\n                    parent: r\n                };\n            }\n            function s(t, e) {\n                var r, i = document.body && e ? \"svg\" : \"canvas\", a = getFontProperties(t);\n                if (\"svg\" === i) {\n                    var s = createNS(\"text\");\n                    s.style.fontSize = \"100px\", s.setAttribute(\"font-family\", t.fFamily), s.setAttribute(\"font-style\", a.style), s.setAttribute(\"font-weight\", a.weight), s.textContent = \"1\", t.fClass ? (s.style.fontFamily = \"inherit\", s.setAttribute(\"class\", t.fClass)) : s.style.fontFamily = t.fFamily, e.appendChild(s), r = s;\n                } else {\n                    var n = new OffscreenCanvas(500, 500).getContext(\"2d\");\n                    n.font = a.style + \" \" + a.weight + \" 100px \" + t.fFamily, r = n;\n                }\n                return {\n                    measureText: function(t) {\n                        return \"svg\" === i ? (r.textContent = t, r.getComputedTextLength()) : r.measureText(t).width;\n                    }\n                };\n            }\n            var n = function() {\n                this.fonts = [], this.chars = null, this.typekitLoaded = 0, this.isLoaded = !1, this._warned = !1, this.initTime = Date.now(), this.setIsLoadedBinded = this.setIsLoaded.bind(this), this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n            };\n            return n.isModifier = function(t, e) {\n                var i = t.toString(16) + e.toString(16);\n                return -1 !== r.indexOf(i);\n            }, n.isZeroWidthJoiner = function(t, e) {\n                return e ? t === i[0] && e === i[1] : t === i[1];\n            }, n.isCombinedCharacter = function(t) {\n                return -1 !== e.indexOf(t);\n            }, n.prototype = {\n                addChars: function(t) {\n                    if (t) {\n                        var e;\n                        this.chars || (this.chars = []);\n                        var r, i, a = t.length, s = this.chars.length;\n                        for(e = 0; e < a; e += 1){\n                            for(r = 0, i = !1; r < s;)this.chars[r].style === t[e].style && this.chars[r].fFamily === t[e].fFamily && this.chars[r].ch === t[e].ch && (i = !0), r += 1;\n                            i || (this.chars.push(t[e]), s += 1);\n                        }\n                    }\n                },\n                addFonts: function(t, e) {\n                    if (t) {\n                        if (this.chars) return this.isLoaded = !0, void (this.fonts = t.list);\n                        if (!document.body) return this.isLoaded = !0, t.list.forEach(function(t) {\n                            t.helper = s(t), t.cache = {};\n                        }), void (this.fonts = t.list);\n                        var r, i = t.list, n = i.length, o = n;\n                        for(r = 0; r < n; r += 1){\n                            var h, l, p = !0;\n                            if (i[r].loaded = !1, i[r].monoCase = a(i[r].fFamily, \"monospace\"), i[r].sansCase = a(i[r].fFamily, \"sans-serif\"), i[r].fPath) {\n                                if (\"p\" === i[r].fOrigin || 3 === i[r].origin) {\n                                    if ((h = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + i[r].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + i[r].fFamily + '\"]')).length > 0 && (p = !1), p) {\n                                        var f = createTag(\"style\");\n                                        f.setAttribute(\"f-forigin\", i[r].fOrigin), f.setAttribute(\"f-origin\", i[r].origin), f.setAttribute(\"f-family\", i[r].fFamily), f.type = \"text/css\", f.innerText = \"@font-face {font-family: \" + i[r].fFamily + \"; font-style: normal; src: url('\" + i[r].fPath + \"');}\", e.appendChild(f);\n                                    }\n                                } else if (\"g\" === i[r].fOrigin || 1 === i[r].origin) {\n                                    for(h = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]'), l = 0; l < h.length; l += 1)-1 !== h[l].href.indexOf(i[r].fPath) && (p = !1);\n                                    if (p) {\n                                        var c = createTag(\"link\");\n                                        c.setAttribute(\"f-forigin\", i[r].fOrigin), c.setAttribute(\"f-origin\", i[r].origin), c.type = \"text/css\", c.rel = \"stylesheet\", c.href = i[r].fPath, document.body.appendChild(c);\n                                    }\n                                } else if (\"t\" === i[r].fOrigin || 2 === i[r].origin) {\n                                    for(h = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]'), l = 0; l < h.length; l += 1)i[r].fPath === h[l].src && (p = !1);\n                                    if (p) {\n                                        var m = createTag(\"link\");\n                                        m.setAttribute(\"f-forigin\", i[r].fOrigin), m.setAttribute(\"f-origin\", i[r].origin), m.setAttribute(\"rel\", \"stylesheet\"), m.setAttribute(\"href\", i[r].fPath), e.appendChild(m);\n                                    }\n                                }\n                            } else i[r].loaded = !0, o -= 1;\n                            i[r].helper = s(i[r], e), i[r].cache = {}, this.fonts.push(i[r]);\n                        }\n                        0 === o ? this.isLoaded = !0 : setTimeout(this.checkLoadedFonts.bind(this), 100);\n                    } else this.isLoaded = !0;\n                },\n                getCharData: function(e, r, i) {\n                    for(var a = 0, s = this.chars.length; a < s;){\n                        if (this.chars[a].ch === e && this.chars[a].style === r && this.chars[a].fFamily === i) return this.chars[a];\n                        a += 1;\n                    }\n                    return (\"string\" == typeof e && 13 !== e.charCodeAt(0) || !e) && console && console.warn && !this._warned && (this._warned = !0), t;\n                },\n                getFontByName: function(t) {\n                    for(var e = 0, r = this.fonts.length; e < r;){\n                        if (this.fonts[e].fName === t) return this.fonts[e];\n                        e += 1;\n                    }\n                    return this.fonts[0];\n                },\n                measureText: function(t, e, r) {\n                    var i = this.getFontByName(e), a = t.charCodeAt(0);\n                    if (!i.cache[a + 1]) {\n                        var s = i.helper;\n                        if (\" \" === t) {\n                            var n = s.measureText(\"|\" + t + \"|\"), o = s.measureText(\"||\");\n                            i.cache[a + 1] = (n - o) / 100;\n                        } else i.cache[a + 1] = s.measureText(t) / 100;\n                    }\n                    return i.cache[a + 1] * r;\n                },\n                checkLoadedFonts: function() {\n                    var t, e, r, i = this.fonts.length, a = i;\n                    for(t = 0; t < i; t += 1)this.fonts[t].loaded ? a -= 1 : \"n\" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin ? this.fonts[t].loaded = !0 : (e = this.fonts[t].monoCase.node, r = this.fonts[t].monoCase.w, e.offsetWidth !== r ? (a -= 1, this.fonts[t].loaded = !0) : (e = this.fonts[t].sansCase.node, r = this.fonts[t].sansCase.w, e.offsetWidth !== r && (a -= 1, this.fonts[t].loaded = !0)), this.fonts[t].loaded && (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent), this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));\n                    0 !== a && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10);\n                },\n                setIsLoaded: function() {\n                    this.isLoaded = !0;\n                }\n            }, n;\n        }();\n        function RenderableElement() {}\n        RenderableElement.prototype = {\n            initRenderable: function() {\n                this.isInRange = !1, this.hidden = !1, this.isTransparent = !1, this.renderableComponents = [];\n            },\n            addRenderableComponent: function(t) {\n                -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t);\n            },\n            removeRenderableComponent: function(t) {\n                -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1);\n            },\n            prepareRenderableFrame: function(t) {\n                this.checkLayerLimits(t);\n            },\n            checkTransparency: function() {\n                this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = !0, this.hide()) : this.isTransparent && (this.isTransparent = !1, this.show());\n            },\n            checkLayerLimits: function(t) {\n                this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? !0 !== this.isInRange && (this.globalData._mdf = !0, this._mdf = !0, this.isInRange = !0, this.show()) : !1 !== this.isInRange && (this.globalData._mdf = !0, this.isInRange = !1, this.hide());\n            },\n            renderRenderable: function() {\n                var t, e = this.renderableComponents.length;\n                for(t = 0; t < e; t += 1)this.renderableComponents[t].renderFrame(this._isFirstFrame);\n            },\n            sourceRectAtTime: function() {\n                return {\n                    top: 0,\n                    left: 0,\n                    width: 100,\n                    height: 100\n                };\n            },\n            getLayerSize: function() {\n                return 5 === this.data.ty ? {\n                    w: this.data.textData.width,\n                    h: this.data.textData.height\n                } : {\n                    w: this.data.width,\n                    h: this.data.height\n                };\n            }\n        };\n        var getBlendMode = (blendModeEnums = {\n            0: \"source-over\",\n            1: \"multiply\",\n            2: \"screen\",\n            3: \"overlay\",\n            4: \"darken\",\n            5: \"lighten\",\n            6: \"color-dodge\",\n            7: \"color-burn\",\n            8: \"hard-light\",\n            9: \"soft-light\",\n            10: \"difference\",\n            11: \"exclusion\",\n            12: \"hue\",\n            13: \"saturation\",\n            14: \"color\",\n            15: \"luminosity\"\n        }, function(t) {\n            return blendModeEnums[t] || \"\";\n        }), blendModeEnums;\n        function SliderEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);\n        }\n        function AngleEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);\n        }\n        function ColorEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 1, 0, r);\n        }\n        function PointEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 1, 0, r);\n        }\n        function LayerIndexEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);\n        }\n        function MaskIndexEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);\n        }\n        function CheckboxEffect(t, e, r) {\n            this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);\n        }\n        function NoValueEffect() {\n            this.p = {};\n        }\n        function EffectsManager(t, e) {\n            var r, i = t.ef || [];\n            this.effectElements = [];\n            var a, s = i.length;\n            for(r = 0; r < s; r += 1)a = new GroupEffect(i[r], e), this.effectElements.push(a);\n        }\n        function GroupEffect(t, e) {\n            this.init(t, e);\n        }\n        function BaseElement() {}\n        function FrameElement() {}\n        function FootageElement(t, e, r) {\n            this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.footageData = e.imageLoader.getAsset(this.assetData), this.initBaseData(t, e, r);\n        }\n        function AudioElement(t, e, r) {\n            this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.initBaseData(t, e, r), this._isPlaying = !1, this._canPlay = !1;\n            var i = this.globalData.getAssetsPath(this.assetData);\n            this.audio = this.globalData.audioController.createAudio(i), this._currentTime = 0, this.globalData.audioController.addAudio(this), this._volumeMultiplier = 1, this._volume = 1, this._previousVolume = null, this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {\n                _placeholder: !0\n            }, this.lv = PropertyFactory.getProp(this, t.au && t.au.lv ? t.au.lv : {\n                k: [\n                    100\n                ]\n            }, 1, .01, this);\n        }\n        function BaseRenderer() {}\n        function TransformElement() {}\n        function MaskElement(t, e, r) {\n            this.data = t, this.element = e, this.globalData = r, this.storedData = [], this.masksProperties = this.data.masksProperties || [], this.maskElement = null;\n            var i, a, s = this.globalData.defs, n = this.masksProperties ? this.masksProperties.length : 0;\n            this.viewData = createSizedArray(n), this.solidPath = \"\";\n            var o, h, l, p, f, c, m = this.masksProperties, d = 0, u = [], y = createElementID(), g = \"clipPath\", v = \"clip-path\";\n            for(i = 0; i < n; i += 1)if ((\"a\" !== m[i].mode && \"n\" !== m[i].mode || m[i].inv || 100 !== m[i].o.k || m[i].o.x) && (g = \"mask\", v = \"mask\"), \"s\" !== m[i].mode && \"i\" !== m[i].mode || 0 !== d ? l = null : ((l = createNS(\"rect\")).setAttribute(\"fill\", \"#ffffff\"), l.setAttribute(\"width\", this.element.comp.data.w || 0), l.setAttribute(\"height\", this.element.comp.data.h || 0), u.push(l)), a = createNS(\"path\"), \"n\" === m[i].mode) this.viewData[i] = {\n                op: PropertyFactory.getProp(this.element, m[i].o, 0, .01, this.element),\n                prop: ShapePropertyFactory.getShapeProp(this.element, m[i], 3),\n                elem: a,\n                lastPath: \"\"\n            }, s.appendChild(a);\n            else {\n                var b;\n                if (d += 1, a.setAttribute(\"fill\", \"s\" === m[i].mode ? \"#000000\" : \"#ffffff\"), a.setAttribute(\"clip-rule\", \"nonzero\"), 0 !== m[i].x.k ? (g = \"mask\", v = \"mask\", c = PropertyFactory.getProp(this.element, m[i].x, 0, null, this.element), b = createElementID(), (p = createNS(\"filter\")).setAttribute(\"id\", b), (f = createNS(\"feMorphology\")).setAttribute(\"operator\", \"erode\"), f.setAttribute(\"in\", \"SourceGraphic\"), f.setAttribute(\"radius\", \"0\"), p.appendChild(f), s.appendChild(p), a.setAttribute(\"stroke\", \"s\" === m[i].mode ? \"#000000\" : \"#ffffff\")) : (f = null, c = null), this.storedData[i] = {\n                    elem: a,\n                    x: c,\n                    expan: f,\n                    lastPath: \"\",\n                    lastOperator: \"\",\n                    filterId: b,\n                    lastRadius: 0\n                }, \"i\" === m[i].mode) {\n                    h = u.length;\n                    var x = createNS(\"g\");\n                    for(o = 0; o < h; o += 1)x.appendChild(u[o]);\n                    var P = createNS(\"mask\");\n                    P.setAttribute(\"mask-type\", \"alpha\"), P.setAttribute(\"id\", y + \"_\" + d), P.appendChild(a), s.appendChild(P), x.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + y + \"_\" + d + \")\"), u.length = 0, u.push(x);\n                } else u.push(a);\n                m[i].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()), this.viewData[i] = {\n                    elem: a,\n                    lastPath: \"\",\n                    op: PropertyFactory.getProp(this.element, m[i].o, 0, .01, this.element),\n                    prop: ShapePropertyFactory.getShapeProp(this.element, m[i], 3),\n                    invRect: l\n                }, this.viewData[i].prop.k || this.drawPath(m[i], this.viewData[i].prop.v, this.viewData[i]);\n            }\n            for(this.maskElement = createNS(g), n = u.length, i = 0; i < n; i += 1)this.maskElement.appendChild(u[i]);\n            d > 0 && (this.maskElement.setAttribute(\"id\", y), this.element.maskedElement.setAttribute(v, \"url(\" + getLocationHref() + \"#\" + y + \")\"), s.appendChild(this.maskElement)), this.viewData.length && this.element.addRenderableComponent(this);\n        }\n        extendPrototype([\n            DynamicPropertyContainer\n        ], GroupEffect), GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties, GroupEffect.prototype.init = function(t, e) {\n            var r;\n            this.data = t, this.effectElements = [], this.initDynamicPropertyContainer(e);\n            var i, a = this.data.ef.length, s = this.data.ef;\n            for(r = 0; r < a; r += 1){\n                switch(i = null, s[r].ty){\n                    case 0:\n                        i = new SliderEffect(s[r], e, this);\n                        break;\n                    case 1:\n                        i = new AngleEffect(s[r], e, this);\n                        break;\n                    case 2:\n                        i = new ColorEffect(s[r], e, this);\n                        break;\n                    case 3:\n                        i = new PointEffect(s[r], e, this);\n                        break;\n                    case 4:\n                    case 7:\n                        i = new CheckboxEffect(s[r], e, this);\n                        break;\n                    case 10:\n                        i = new LayerIndexEffect(s[r], e, this);\n                        break;\n                    case 11:\n                        i = new MaskIndexEffect(s[r], e, this);\n                        break;\n                    case 5:\n                        i = new EffectsManager(s[r], e, this);\n                        break;\n                    default:\n                        i = new NoValueEffect(s[r], e, this);\n                }\n                i && this.effectElements.push(i);\n            }\n        }, BaseElement.prototype = {\n            checkMasks: function() {\n                if (!this.data.hasMask) return !1;\n                for(var t = 0, e = this.data.masksProperties.length; t < e;){\n                    if (\"n\" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl) return !0;\n                    t += 1;\n                }\n                return !1;\n            },\n            initExpressions: function() {\n                var t = getExpressionInterfaces();\n                if (t) {\n                    var e = t(\"layer\"), r = t(\"effects\"), i = t(\"shape\"), a = t(\"text\"), s = t(\"comp\");\n                    this.layerInterface = e(this), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);\n                    var n = r.createEffectsInterface(this, this.layerInterface);\n                    this.layerInterface.registerEffectsInterface(n), 0 === this.data.ty || this.data.xt ? this.compInterface = s(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = i(this.shapesData, this.itemsData, this.layerInterface), this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = a(this), this.layerInterface.text = this.layerInterface.textInterface);\n                }\n            },\n            setBlendMode: function() {\n                var t = getBlendMode(this.data.bm);\n                (this.baseElement || this.layerElement).style[\"mix-blend-mode\"] = t;\n            },\n            initBaseData: function(t, e, r) {\n                this.globalData = e, this.comp = r, this.data = t, this.layerId = createElementID(), this.data.sr || (this.data.sr = 1), this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n            },\n            getType: function() {\n                return this.type;\n            },\n            sourceRectAtTime: function() {}\n        }, FrameElement.prototype = {\n            initFrame: function() {\n                this._isFirstFrame = !1, this.dynamicProperties = [], this._mdf = !1;\n            },\n            prepareProperties: function(t, e) {\n                var r, i = this.dynamicProperties.length;\n                for(r = 0; r < i; r += 1)(e || this._isParent && \"transform\" === this.dynamicProperties[r].propType) && (this.dynamicProperties[r].getValue(), this.dynamicProperties[r]._mdf && (this.globalData._mdf = !0, this._mdf = !0));\n            },\n            addDynamicProperty: function(t) {\n                -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t);\n            }\n        }, FootageElement.prototype.prepareFrame = function() {}, extendPrototype([\n            RenderableElement,\n            BaseElement,\n            FrameElement\n        ], FootageElement), FootageElement.prototype.getBaseElement = function() {\n            return null;\n        }, FootageElement.prototype.renderFrame = function() {}, FootageElement.prototype.destroy = function() {}, FootageElement.prototype.initExpressions = function() {\n            var t = getExpressionInterfaces();\n            if (t) {\n                var e = t(\"footage\");\n                this.layerInterface = e(this);\n            }\n        }, FootageElement.prototype.getFootageData = function() {\n            return this.footageData;\n        }, AudioElement.prototype.prepareFrame = function(t) {\n            if (this.prepareRenderableFrame(t, !0), this.prepareProperties(t, !0), this.tm._placeholder) this._currentTime = t / this.data.sr;\n            else {\n                var e = this.tm.v;\n                this._currentTime = e;\n            }\n            this._volume = this.lv.v[0];\n            var r = this._volume * this._volumeMultiplier;\n            this._previousVolume !== r && (this._previousVolume = r, this.audio.volume(r));\n        }, extendPrototype([\n            RenderableElement,\n            BaseElement,\n            FrameElement\n        ], AudioElement), AudioElement.prototype.renderFrame = function() {\n            this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > .1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(), this.audio.seek(this._currentTime / this.globalData.frameRate), this._isPlaying = !0));\n        }, AudioElement.prototype.show = function() {}, AudioElement.prototype.hide = function() {\n            this.audio.pause(), this._isPlaying = !1;\n        }, AudioElement.prototype.pause = function() {\n            this.audio.pause(), this._isPlaying = !1, this._canPlay = !1;\n        }, AudioElement.prototype.resume = function() {\n            this._canPlay = !0;\n        }, AudioElement.prototype.setRate = function(t) {\n            this.audio.rate(t);\n        }, AudioElement.prototype.volume = function(t) {\n            this._volumeMultiplier = t, this._previousVolume = t * this._volume, this.audio.volume(this._previousVolume);\n        }, AudioElement.prototype.getBaseElement = function() {\n            return null;\n        }, AudioElement.prototype.destroy = function() {}, AudioElement.prototype.sourceRectAtTime = function() {}, AudioElement.prototype.initExpressions = function() {}, BaseRenderer.prototype.checkLayers = function(t) {\n            var e, r, i = this.layers.length;\n            for(this.completeLayers = !0, e = i - 1; e >= 0; e -= 1)this.elements[e] || (r = this.layers[e]).ip - r.st <= t - this.layers[e].st && r.op - r.st > t - this.layers[e].st && this.buildItem(e), this.completeLayers = !!this.elements[e] && this.completeLayers;\n            this.checkPendingElements();\n        }, BaseRenderer.prototype.createItem = function(t) {\n            switch(t.ty){\n                case 2:\n                    return this.createImage(t);\n                case 0:\n                    return this.createComp(t);\n                case 1:\n                    return this.createSolid(t);\n                case 3:\n                    return this.createNull(t);\n                case 4:\n                    return this.createShape(t);\n                case 5:\n                    return this.createText(t);\n                case 6:\n                    return this.createAudio(t);\n                case 13:\n                    return this.createCamera(t);\n                case 15:\n                    return this.createFootage(t);\n                default:\n                    return this.createNull(t);\n            }\n        }, BaseRenderer.prototype.createCamera = function() {\n            throw new Error(\"You're using a 3d camera. Try the html renderer.\");\n        }, BaseRenderer.prototype.createAudio = function(t) {\n            return new AudioElement(t, this.globalData, this);\n        }, BaseRenderer.prototype.createFootage = function(t) {\n            return new FootageElement(t, this.globalData, this);\n        }, BaseRenderer.prototype.buildAllItems = function() {\n            var t, e = this.layers.length;\n            for(t = 0; t < e; t += 1)this.buildItem(t);\n            this.checkPendingElements();\n        }, BaseRenderer.prototype.includeLayers = function(t) {\n            var e;\n            this.completeLayers = !1;\n            var r, i = t.length, a = this.layers.length;\n            for(e = 0; e < i; e += 1)for(r = 0; r < a;){\n                if (this.layers[r].id === t[e].id) {\n                    this.layers[r] = t[e];\n                    break;\n                }\n                r += 1;\n            }\n        }, BaseRenderer.prototype.setProjectInterface = function(t) {\n            this.globalData.projectInterface = t;\n        }, BaseRenderer.prototype.initItems = function() {\n            this.globalData.progressiveLoad || this.buildAllItems();\n        }, BaseRenderer.prototype.buildElementParenting = function(t, e, r) {\n            for(var i = this.elements, a = this.layers, s = 0, n = a.length; s < n;)a[s].ind == e && (i[s] && !0 !== i[s] ? (r.push(i[s]), i[s].setAsParent(), void 0 !== a[s].parent ? this.buildElementParenting(t, a[s].parent, r) : t.setHierarchy(r)) : (this.buildItem(s), this.addPendingElement(t))), s += 1;\n        }, BaseRenderer.prototype.addPendingElement = function(t) {\n            this.pendingElements.push(t);\n        }, BaseRenderer.prototype.searchExtraCompositions = function(t) {\n            var e, r = t.length;\n            for(e = 0; e < r; e += 1)if (t[e].xt) {\n                var i = this.createComp(t[e]);\n                i.initExpressions(), this.globalData.projectInterface.registerComposition(i);\n            }\n        }, BaseRenderer.prototype.getElementById = function(t) {\n            var e, r = this.elements.length;\n            for(e = 0; e < r; e += 1)if (this.elements[e].data.ind === t) return this.elements[e];\n            return null;\n        }, BaseRenderer.prototype.getElementByPath = function(t) {\n            var e, r = t.shift();\n            if (\"number\" == typeof r) e = this.elements[r];\n            else {\n                var i, a = this.elements.length;\n                for(i = 0; i < a; i += 1)if (this.elements[i].data.nm === r) {\n                    e = this.elements[i];\n                    break;\n                }\n            }\n            return 0 === t.length ? e : e.getElementByPath(t);\n        }, BaseRenderer.prototype.setupGlobalData = function(t, e) {\n            this.globalData.fontManager = new FontManager, this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, e), this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.imageLoader = this.animationItem.imagePreloader, this.globalData.audioController = this.animationItem.audioController, this.globalData.frameId = 0, this.globalData.frameRate = t.fr, this.globalData.nm = t.nm, this.globalData.compSize = {\n                w: t.w,\n                h: t.h\n            };\n        }, TransformElement.prototype = {\n            initTransform: function() {\n                this.finalTransform = {\n                    mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n                        o: 0\n                    },\n                    _matMdf: !1,\n                    _opMdf: !1,\n                    mat: new Matrix\n                }, this.data.ao && (this.finalTransform.mProp.autoOriented = !0), this.data.ty;\n            },\n            renderTransform: function() {\n                if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame, this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame, this.hierarchy) {\n                    var t, e = this.finalTransform.mat, r = 0, i = this.hierarchy.length;\n                    if (!this.finalTransform._matMdf) for(; r < i;){\n                        if (this.hierarchy[r].finalTransform.mProp._mdf) {\n                            this.finalTransform._matMdf = !0;\n                            break;\n                        }\n                        r += 1;\n                    }\n                    if (this.finalTransform._matMdf) for(t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), r = 0; r < i; r += 1)t = this.hierarchy[r].finalTransform.mProp.v.props, e.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]);\n                }\n            },\n            globalToLocal: function(t) {\n                var e = [];\n                e.push(this.finalTransform);\n                for(var r, i = !0, a = this.comp; i;)a.finalTransform ? (a.data.hasMask && e.splice(0, 0, a.finalTransform), a = a.comp) : i = !1;\n                var s, n = e.length;\n                for(r = 0; r < n; r += 1)s = e[r].mat.applyToPointArray(0, 0, 0), t = [\n                    t[0] - s[0],\n                    t[1] - s[1],\n                    0\n                ];\n                return t;\n            },\n            mHelper: new Matrix\n        }, MaskElement.prototype.getMaskProperty = function(t) {\n            return this.viewData[t].prop;\n        }, MaskElement.prototype.renderFrame = function(t) {\n            var e, r = this.element.finalTransform.mat, i = this.masksProperties.length;\n            for(e = 0; e < i; e += 1)if ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]), (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute(\"fill-opacity\", this.viewData[e].op.v), \"n\" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute(\"transform\", r.getInverseMatrix().to2dCSS()), this.storedData[e].x && (this.storedData[e].x._mdf || t))) {\n                var a = this.storedData[e].expan;\n                this.storedData[e].x.v < 0 ? (\"erode\" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = \"erode\", this.storedData[e].elem.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + this.storedData[e].filterId + \")\")), a.setAttribute(\"radius\", -this.storedData[e].x.v)) : (\"dilate\" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = \"dilate\", this.storedData[e].elem.setAttribute(\"filter\", null)), this.storedData[e].elem.setAttribute(\"stroke-width\", 2 * this.storedData[e].x.v));\n            }\n        }, MaskElement.prototype.getMaskelement = function() {\n            return this.maskElement;\n        }, MaskElement.prototype.createLayerSolidPath = function() {\n            var t = \"M0,0 \";\n            return t += \" h\" + this.globalData.compSize.w, t += \" v\" + this.globalData.compSize.h, t += \" h-\" + this.globalData.compSize.w, t += \" v-\" + this.globalData.compSize.h + \" \";\n        }, MaskElement.prototype.drawPath = function(t, e, r) {\n            var i, a, s = \" M\" + e.v[0][0] + \",\" + e.v[0][1];\n            for(a = e._length, i = 1; i < a; i += 1)s += \" C\" + e.o[i - 1][0] + \",\" + e.o[i - 1][1] + \" \" + e.i[i][0] + \",\" + e.i[i][1] + \" \" + e.v[i][0] + \",\" + e.v[i][1];\n            if (e.c && a > 1 && (s += \" C\" + e.o[i - 1][0] + \",\" + e.o[i - 1][1] + \" \" + e.i[0][0] + \",\" + e.i[0][1] + \" \" + e.v[0][0] + \",\" + e.v[0][1]), r.lastPath !== s) {\n                var n = \"\";\n                r.elem && (e.c && (n = t.inv ? this.solidPath + s : s), r.elem.setAttribute(\"d\", n)), r.lastPath = s;\n            }\n        }, MaskElement.prototype.destroy = function() {\n            this.element = null, this.globalData = null, this.maskElement = null, this.data = null, this.masksProperties = null;\n        };\n        var filtersFactory = function() {\n            var t = {};\n            return t.createFilter = function(t, e) {\n                var r = createNS(\"filter\");\n                r.setAttribute(\"id\", t), !0 !== e && (r.setAttribute(\"filterUnits\", \"objectBoundingBox\"), r.setAttribute(\"x\", \"0%\"), r.setAttribute(\"y\", \"0%\"), r.setAttribute(\"width\", \"100%\"), r.setAttribute(\"height\", \"100%\"));\n                return r;\n            }, t.createAlphaToLuminanceFilter = function() {\n                var t = createNS(\"feColorMatrix\");\n                return t.setAttribute(\"type\", \"matrix\"), t.setAttribute(\"color-interpolation-filters\", \"sRGB\"), t.setAttribute(\"values\", \"0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1\"), t;\n            }, t;\n        }(), featureSupport = function() {\n            var t = {\n                maskType: !0,\n                svgLumaHidden: !0,\n                offscreenCanvas: \"undefined\" != typeof OffscreenCanvas\n            };\n            return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) && (t.maskType = !1), /firefox/i.test(navigator.userAgent) && (t.svgLumaHidden = !1), t;\n        }(), registeredEffects = {}, idPrefix = \"filter_result_\";\n        function SVGEffects(t) {\n            var e, r, i = \"SourceGraphic\", a = t.data.ef ? t.data.ef.length : 0, s = createElementID(), n = filtersFactory.createFilter(s, !0), o = 0;\n            for(this.filters = [], e = 0; e < a; e += 1){\n                r = null;\n                var h = t.data.ef[e].ty;\n                if (registeredEffects[h]) r = new (0, registeredEffects[h].effect)(n, t.effectsManager.effectElements[e], t, idPrefix + o, i), i = idPrefix + o, registeredEffects[h].countsAsEffect && (o += 1);\n                r && this.filters.push(r);\n            }\n            o && (t.globalData.defs.appendChild(n), t.layerElement.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + s + \")\")), this.filters.length && t.addRenderableComponent(this);\n        }\n        function registerEffect(t, e, r) {\n            registeredEffects[t] = {\n                effect: e,\n                countsAsEffect: r\n            };\n        }\n        function SVGBaseElement() {}\n        function HierarchyElement() {}\n        function RenderableDOMElement() {}\n        function IImageElement(t, e, r) {\n            this.assetData = e.getAssetData(t.refId), this.initElement(t, e, r), this.sourceRect = {\n                top: 0,\n                left: 0,\n                width: this.assetData.w,\n                height: this.assetData.h\n            };\n        }\n        function ProcessedElement(t, e) {\n            this.elem = t, this.pos = e;\n        }\n        function IShapeElement() {}\n        SVGEffects.prototype.renderFrame = function(t) {\n            var e, r = this.filters.length;\n            for(e = 0; e < r; e += 1)this.filters[e].renderFrame(t);\n        }, SVGBaseElement.prototype = {\n            initRendererElement: function() {\n                this.layerElement = createNS(\"g\");\n            },\n            createContainerElements: function() {\n                this.matteElement = createNS(\"g\"), this.transformedElement = this.layerElement, this.maskedElement = this.layerElement, this._sizeChanged = !1;\n                var t = null;\n                if (this.data.td) {\n                    this.matteMasks = {};\n                    var e = createNS(\"g\");\n                    e.setAttribute(\"id\", this.layerId), e.appendChild(this.layerElement), t = e, this.globalData.defs.appendChild(e);\n                } else this.data.tt ? (this.matteElement.appendChild(this.layerElement), t = this.matteElement, this.baseElement = this.matteElement) : this.baseElement = this.layerElement;\n                if (this.data.ln && this.layerElement.setAttribute(\"id\", this.data.ln), this.data.cl && this.layerElement.setAttribute(\"class\", this.data.cl), 0 === this.data.ty && !this.data.hd) {\n                    var r = createNS(\"clipPath\"), i = createNS(\"path\");\n                    i.setAttribute(\"d\", \"M0,0 L\" + this.data.w + \",0 L\" + this.data.w + \",\" + this.data.h + \" L0,\" + this.data.h + \"z\");\n                    var a = createElementID();\n                    if (r.setAttribute(\"id\", a), r.appendChild(i), this.globalData.defs.appendChild(r), this.checkMasks()) {\n                        var s = createNS(\"g\");\n                        s.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + a + \")\"), s.appendChild(this.layerElement), this.transformedElement = s, t ? t.appendChild(this.transformedElement) : this.baseElement = this.transformedElement;\n                    } else this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + a + \")\");\n                }\n                0 !== this.data.bm && this.setBlendMode();\n            },\n            renderElement: function() {\n                this.finalTransform._matMdf && this.transformedElement.setAttribute(\"transform\", this.finalTransform.mat.to2dCSS()), this.finalTransform._opMdf && this.transformedElement.setAttribute(\"opacity\", this.finalTransform.mProp.o.v);\n            },\n            destroyBaseElement: function() {\n                this.layerElement = null, this.matteElement = null, this.maskManager.destroy();\n            },\n            getBaseElement: function() {\n                return this.data.hd ? null : this.baseElement;\n            },\n            createRenderableComponents: function() {\n                this.maskManager = new MaskElement(this.data, this, this.globalData), this.renderableEffectsManager = new SVGEffects(this);\n            },\n            getMatte: function(t) {\n                if (this.matteMasks || (this.matteMasks = {}), !this.matteMasks[t]) {\n                    var e, r, i, a, s = this.layerId + \"_\" + t;\n                    if (1 === t || 3 === t) {\n                        var n = createNS(\"mask\");\n                        n.setAttribute(\"id\", s), n.setAttribute(\"mask-type\", 3 === t ? \"luminance\" : \"alpha\"), (i = createNS(\"use\")).setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", \"#\" + this.layerId), n.appendChild(i), this.globalData.defs.appendChild(n), featureSupport.maskType || 1 !== t || (n.setAttribute(\"mask-type\", \"luminance\"), e = createElementID(), r = filtersFactory.createFilter(e), this.globalData.defs.appendChild(r), r.appendChild(filtersFactory.createAlphaToLuminanceFilter()), (a = createNS(\"g\")).appendChild(i), n.appendChild(a), a.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + e + \")\"));\n                    } else if (2 === t) {\n                        var o = createNS(\"mask\");\n                        o.setAttribute(\"id\", s), o.setAttribute(\"mask-type\", \"alpha\");\n                        var h = createNS(\"g\");\n                        o.appendChild(h), e = createElementID(), r = filtersFactory.createFilter(e);\n                        var l = createNS(\"feComponentTransfer\");\n                        l.setAttribute(\"in\", \"SourceGraphic\"), r.appendChild(l);\n                        var p = createNS(\"feFuncA\");\n                        p.setAttribute(\"type\", \"table\"), p.setAttribute(\"tableValues\", \"1.0 0.0\"), l.appendChild(p), this.globalData.defs.appendChild(r);\n                        var f = createNS(\"rect\");\n                        f.setAttribute(\"width\", this.comp.data.w), f.setAttribute(\"height\", this.comp.data.h), f.setAttribute(\"x\", \"0\"), f.setAttribute(\"y\", \"0\"), f.setAttribute(\"fill\", \"#ffffff\"), f.setAttribute(\"opacity\", \"0\"), h.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + e + \")\"), h.appendChild(f), (i = createNS(\"use\")).setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", \"#\" + this.layerId), h.appendChild(i), featureSupport.maskType || (o.setAttribute(\"mask-type\", \"luminance\"), r.appendChild(filtersFactory.createAlphaToLuminanceFilter()), a = createNS(\"g\"), h.appendChild(f), a.appendChild(this.layerElement), h.appendChild(a)), this.globalData.defs.appendChild(o);\n                    }\n                    this.matteMasks[t] = s;\n                }\n                return this.matteMasks[t];\n            },\n            setMatte: function(t) {\n                this.matteElement && this.matteElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + t + \")\");\n            }\n        }, HierarchyElement.prototype = {\n            initHierarchy: function() {\n                this.hierarchy = [], this._isParent = !1, this.checkParenting();\n            },\n            setHierarchy: function(t) {\n                this.hierarchy = t;\n            },\n            setAsParent: function() {\n                this._isParent = !0;\n            },\n            checkParenting: function() {\n                void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, []);\n            }\n        }, extendPrototype([\n            RenderableElement,\n            createProxyFunction({\n                initElement: function(t, e, r) {\n                    this.initFrame(), this.initBaseData(t, e, r), this.initTransform(t, e, r), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide();\n                },\n                hide: function() {\n                    this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = \"none\", this.hidden = !0);\n                },\n                show: function() {\n                    this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = \"block\"), this.hidden = !1, this._isFirstFrame = !0);\n                },\n                renderFrame: function() {\n                    this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));\n                },\n                renderInnerContent: function() {},\n                prepareFrame: function(t) {\n                    this._mdf = !1, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency();\n                },\n                destroy: function() {\n                    this.innerElem = null, this.destroyBaseElement();\n                }\n            })\n        ], RenderableDOMElement), extendPrototype([\n            BaseElement,\n            TransformElement,\n            SVGBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableDOMElement\n        ], IImageElement), IImageElement.prototype.createContent = function() {\n            var t = this.globalData.getAssetsPath(this.assetData);\n            this.innerElem = createNS(\"image\"), this.innerElem.setAttribute(\"width\", this.assetData.w + \"px\"), this.innerElem.setAttribute(\"height\", this.assetData.h + \"px\"), this.innerElem.setAttribute(\"preserveAspectRatio\", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio), this.innerElem.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", t), this.layerElement.appendChild(this.innerElem);\n        }, IImageElement.prototype.sourceRectAtTime = function() {\n            return this.sourceRect;\n        }, IShapeElement.prototype = {\n            addShapeToModifiers: function(t) {\n                var e, r = this.shapeModifiers.length;\n                for(e = 0; e < r; e += 1)this.shapeModifiers[e].addShape(t);\n            },\n            isShapeInAnimatedModifiers: function(t) {\n                for(var e = this.shapeModifiers.length; 0 < e;)if (this.shapeModifiers[0].isAnimatedWithShape(t)) return !0;\n                return !1;\n            },\n            renderModifiers: function() {\n                if (this.shapeModifiers.length) {\n                    var t, e = this.shapes.length;\n                    for(t = 0; t < e; t += 1)this.shapes[t].sh.reset();\n                    for(t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1);\n                }\n            },\n            searchProcessedElement: function(t) {\n                for(var e = this.processedElements, r = 0, i = e.length; r < i;){\n                    if (e[r].elem === t) return e[r].pos;\n                    r += 1;\n                }\n                return 0;\n            },\n            addProcessedElement: function(t, e) {\n                for(var r = this.processedElements, i = r.length; i;)if (r[i -= 1].elem === t) return void (r[i].pos = e);\n                r.push(new ProcessedElement(t, e));\n            },\n            prepareFrame: function(t) {\n                this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);\n            }\n        };\n        var lineCapEnum = {\n            1: \"butt\",\n            2: \"round\",\n            3: \"square\"\n        }, lineJoinEnum = {\n            1: \"miter\",\n            2: \"round\",\n            3: \"bevel\"\n        };\n        function SVGShapeData(t, e, r) {\n            this.caches = [], this.styles = [], this.transformers = t, this.lStr = \"\", this.sh = r, this.lvl = e, this._isAnimated = !!r.k;\n            for(var i = 0, a = t.length; i < a;){\n                if (t[i].mProps.dynamicProperties.length) {\n                    this._isAnimated = !0;\n                    break;\n                }\n                i += 1;\n            }\n        }\n        function SVGStyleData(t, e) {\n            this.data = t, this.type = t.ty, this.d = \"\", this.lvl = e, this._mdf = !1, this.closed = !0 === t.hd, this.pElem = createNS(\"path\"), this.msElem = null;\n        }\n        function DashProperty(t, e, r, i) {\n            var a;\n            this.elem = t, this.frameId = -1, this.dataProps = createSizedArray(e.length), this.renderer = r, this.k = !1, this.dashStr = \"\", this.dashArray = createTypedArray(\"float32\", e.length ? e.length - 1 : 0), this.dashoffset = createTypedArray(\"float32\", 1), this.initDynamicPropertyContainer(i);\n            var s, n = e.length || 0;\n            for(a = 0; a < n; a += 1)s = PropertyFactory.getProp(t, e[a].v, 0, 0, this), this.k = s.k || this.k, this.dataProps[a] = {\n                n: e[a].n,\n                p: s\n            };\n            this.k || this.getValue(!0), this._isAnimated = this.k;\n        }\n        function SVGStrokeStyleData(t, e, r) {\n            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, .01, this), this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, \"svg\", this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = r, this._isAnimated = !!this._isAnimated;\n        }\n        function SVGFillStyleData(t, e, r) {\n            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, .01, this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = r;\n        }\n        function SVGNoStyleData(t, e, r) {\n            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.style = r;\n        }\n        function GradientProperty(t, e, r) {\n            this.data = e, this.c = createTypedArray(\"uint8c\", 4 * e.p);\n            var i = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;\n            this.o = createTypedArray(\"float32\", i), this._cmdf = !1, this._omdf = !1, this._collapsable = this.checkCollapsable(), this._hasOpacity = i, this.initDynamicPropertyContainer(r), this.prop = PropertyFactory.getProp(t, e.k, 1, null, this), this.k = this.prop.k, this.getValue(!0);\n        }\n        function SVGGradientFillStyleData(t, e, r) {\n            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.initGradientData(t, e, r);\n        }\n        function SVGGradientStrokeStyleData(t, e, r) {\n            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, \"svg\", this), this.initGradientData(t, e, r), this._isAnimated = !!this._isAnimated;\n        }\n        function ShapeGroupData() {\n            this.it = [], this.prevViewData = [], this.gr = createNS(\"g\");\n        }\n        function SVGTransformData(t, e, r) {\n            this.transform = {\n                mProps: t,\n                op: e,\n                container: r\n            }, this.elements = [], this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n        }\n        SVGShapeData.prototype.setAsAnimated = function() {\n            this._isAnimated = !0;\n        }, SVGStyleData.prototype.reset = function() {\n            this.d = \"\", this._mdf = !1;\n        }, DashProperty.prototype.getValue = function(t) {\n            if ((this.elem.globalData.frameId !== this.frameId || t) && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf = this._mdf || t, this._mdf)) {\n                var e = 0, r = this.dataProps.length;\n                for(\"svg\" === this.renderer && (this.dashStr = \"\"), e = 0; e < r; e += 1)\"o\" !== this.dataProps[e].n ? \"svg\" === this.renderer ? this.dashStr += \" \" + this.dataProps[e].p.v : this.dashArray[e] = this.dataProps[e].p.v : this.dashoffset[0] = this.dataProps[e].p.v;\n            }\n        }, extendPrototype([\n            DynamicPropertyContainer\n        ], DashProperty), extendPrototype([\n            DynamicPropertyContainer\n        ], SVGStrokeStyleData), extendPrototype([\n            DynamicPropertyContainer\n        ], SVGFillStyleData), extendPrototype([\n            DynamicPropertyContainer\n        ], SVGNoStyleData), GradientProperty.prototype.comparePoints = function(t, e) {\n            for(var r = 0, i = this.o.length / 2; r < i;){\n                if (Math.abs(t[4 * r] - t[4 * e + 2 * r]) > .01) return !1;\n                r += 1;\n            }\n            return !0;\n        }, GradientProperty.prototype.checkCollapsable = function() {\n            if (this.o.length / 2 != this.c.length / 4) return !1;\n            if (this.data.k.k[0].s) for(var t = 0, e = this.data.k.k.length; t < e;){\n                if (!this.comparePoints(this.data.k.k[t].s, this.data.p)) return !1;\n                t += 1;\n            }\n            else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;\n            return !0;\n        }, GradientProperty.prototype.getValue = function(t) {\n            if (this.prop.getValue(), this._mdf = !1, this._cmdf = !1, this._omdf = !1, this.prop._mdf || t) {\n                var e, r, i, a = 4 * this.data.p;\n                for(e = 0; e < a; e += 1)r = e % 4 == 0 ? 100 : 255, i = Math.round(this.prop.v[e] * r), this.c[e] !== i && (this.c[e] = i, this._cmdf = !t);\n                if (this.o.length) for(a = this.prop.v.length, e = 4 * this.data.p; e < a; e += 1)r = e % 2 == 0 ? 100 : 1, i = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e], this.o[e - 4 * this.data.p] !== i && (this.o[e - 4 * this.data.p] = i, this._omdf = !t);\n                this._mdf = !t;\n            }\n        }, extendPrototype([\n            DynamicPropertyContainer\n        ], GradientProperty), SVGGradientFillStyleData.prototype.initGradientData = function(t, e, r) {\n            this.o = PropertyFactory.getProp(t, e.o, 0, .01, this), this.s = PropertyFactory.getProp(t, e.s, 1, null, this), this.e = PropertyFactory.getProp(t, e.e, 1, null, this), this.h = PropertyFactory.getProp(t, e.h || {\n                k: 0\n            }, 0, .01, this), this.a = PropertyFactory.getProp(t, e.a || {\n                k: 0\n            }, 0, degToRads, this), this.g = new GradientProperty(t, e.g, this), this.style = r, this.stops = [], this.setGradientData(r.pElem, e), this.setGradientOpacity(e, r), this._isAnimated = !!this._isAnimated;\n        }, SVGGradientFillStyleData.prototype.setGradientData = function(t, e) {\n            var r = createElementID(), i = createNS(1 === e.t ? \"linearGradient\" : \"radialGradient\");\n            i.setAttribute(\"id\", r), i.setAttribute(\"spreadMethod\", \"pad\"), i.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n            var a, s, n, o = [];\n            for(n = 4 * e.g.p, s = 0; s < n; s += 4)a = createNS(\"stop\"), i.appendChild(a), o.push(a);\n            t.setAttribute(\"gf\" === e.ty ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + r + \")\"), this.gf = i, this.cst = o;\n        }, SVGGradientFillStyleData.prototype.setGradientOpacity = function(t, e) {\n            if (this.g._hasOpacity && !this.g._collapsable) {\n                var r, i, a, s = createNS(\"mask\"), n = createNS(\"path\");\n                s.appendChild(n);\n                var o = createElementID(), h = createElementID();\n                s.setAttribute(\"id\", h);\n                var l = createNS(1 === t.t ? \"linearGradient\" : \"radialGradient\");\n                l.setAttribute(\"id\", o), l.setAttribute(\"spreadMethod\", \"pad\"), l.setAttribute(\"gradientUnits\", \"userSpaceOnUse\"), a = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;\n                var p = this.stops;\n                for(i = 4 * t.g.p; i < a; i += 2)(r = createNS(\"stop\")).setAttribute(\"stop-color\", \"rgb(255,255,255)\"), l.appendChild(r), p.push(r);\n                n.setAttribute(\"gf\" === t.ty ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + o + \")\"), \"gs\" === t.ty && (n.setAttribute(\"stroke-linecap\", lineCapEnum[t.lc || 2]), n.setAttribute(\"stroke-linejoin\", lineJoinEnum[t.lj || 2]), 1 === t.lj && n.setAttribute(\"stroke-miterlimit\", t.ml)), this.of = l, this.ms = s, this.ost = p, this.maskId = h, e.msElem = n;\n            }\n        }, extendPrototype([\n            DynamicPropertyContainer\n        ], SVGGradientFillStyleData), extendPrototype([\n            SVGGradientFillStyleData,\n            DynamicPropertyContainer\n        ], SVGGradientStrokeStyleData);\n        var buildShapeString = function(t, e, r, i) {\n            if (0 === e) return \"\";\n            var a, s = t.o, n = t.i, o = t.v, h = \" M\" + i.applyToPointStringified(o[0][0], o[0][1]);\n            for(a = 1; a < e; a += 1)h += \" C\" + i.applyToPointStringified(s[a - 1][0], s[a - 1][1]) + \" \" + i.applyToPointStringified(n[a][0], n[a][1]) + \" \" + i.applyToPointStringified(o[a][0], o[a][1]);\n            return r && e && (h += \" C\" + i.applyToPointStringified(s[a - 1][0], s[a - 1][1]) + \" \" + i.applyToPointStringified(n[0][0], n[0][1]) + \" \" + i.applyToPointStringified(o[0][0], o[0][1]), h += \"z\"), h;\n        }, SVGElementsRenderer = function() {\n            var t = new Matrix, e = new Matrix;\n            function r(t, e, r) {\n                (r || e.transform.op._mdf) && e.transform.container.setAttribute(\"opacity\", e.transform.op.v), (r || e.transform.mProps._mdf) && e.transform.container.setAttribute(\"transform\", e.transform.mProps.v.to2dCSS());\n            }\n            function i() {}\n            function a(r, i, a) {\n                var s, n, o, h, l, p, f, c, m, d, u, y = i.styles.length, g = i.lvl;\n                for(p = 0; p < y; p += 1){\n                    if (h = i.sh._mdf || a, i.styles[p].lvl < g) {\n                        for(c = e.reset(), d = g - i.styles[p].lvl, u = i.transformers.length - 1; !h && d > 0;)h = i.transformers[u].mProps._mdf || h, d -= 1, u -= 1;\n                        if (h) for(d = g - i.styles[p].lvl, u = i.transformers.length - 1; d > 0;)m = i.transformers[u].mProps.v.props, c.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]), d -= 1, u -= 1;\n                    } else c = t;\n                    if (n = (f = i.sh.paths)._length, h) {\n                        for(o = \"\", s = 0; s < n; s += 1)(l = f.shapes[s]) && l._length && (o += buildShapeString(l, l._length, l.c, c));\n                        i.caches[p] = o;\n                    } else o = i.caches[p];\n                    i.styles[p].d += !0 === r.hd ? \"\" : o, i.styles[p]._mdf = h || i.styles[p]._mdf;\n                }\n            }\n            function s(t, e, r) {\n                var i = e.style;\n                (e.c._mdf || r) && i.pElem.setAttribute(\"fill\", \"rgb(\" + bmFloor(e.c.v[0]) + \",\" + bmFloor(e.c.v[1]) + \",\" + bmFloor(e.c.v[2]) + \")\"), (e.o._mdf || r) && i.pElem.setAttribute(\"fill-opacity\", e.o.v);\n            }\n            function n(t, e, r) {\n                o(t, e, r), h(t, e, r);\n            }\n            function o(t, e, r) {\n                var i, a, s, n, o, h = e.gf, l = e.g._hasOpacity, p = e.s.v, f = e.e.v;\n                if (e.o._mdf || r) {\n                    var c = \"gf\" === t.ty ? \"fill-opacity\" : \"stroke-opacity\";\n                    e.style.pElem.setAttribute(c, e.o.v);\n                }\n                if (e.s._mdf || r) {\n                    var m = 1 === t.t ? \"x1\" : \"cx\", d = \"x1\" === m ? \"y1\" : \"cy\";\n                    h.setAttribute(m, p[0]), h.setAttribute(d, p[1]), l && !e.g._collapsable && (e.of.setAttribute(m, p[0]), e.of.setAttribute(d, p[1]));\n                }\n                if (e.g._cmdf || r) {\n                    i = e.cst;\n                    var u = e.g.c;\n                    for(s = i.length, a = 0; a < s; a += 1)(n = i[a]).setAttribute(\"offset\", u[4 * a] + \"%\"), n.setAttribute(\"stop-color\", \"rgb(\" + u[4 * a + 1] + \",\" + u[4 * a + 2] + \",\" + u[4 * a + 3] + \")\");\n                }\n                if (l && (e.g._omdf || r)) {\n                    var y = e.g.o;\n                    for(s = (i = e.g._collapsable ? e.cst : e.ost).length, a = 0; a < s; a += 1)n = i[a], e.g._collapsable || n.setAttribute(\"offset\", y[2 * a] + \"%\"), n.setAttribute(\"stop-opacity\", y[2 * a + 1]);\n                }\n                if (1 === t.t) (e.e._mdf || r) && (h.setAttribute(\"x2\", f[0]), h.setAttribute(\"y2\", f[1]), l && !e.g._collapsable && (e.of.setAttribute(\"x2\", f[0]), e.of.setAttribute(\"y2\", f[1])));\n                else if ((e.s._mdf || e.e._mdf || r) && (o = Math.sqrt(Math.pow(p[0] - f[0], 2) + Math.pow(p[1] - f[1], 2)), h.setAttribute(\"r\", o), l && !e.g._collapsable && e.of.setAttribute(\"r\", o)), e.e._mdf || e.h._mdf || e.a._mdf || r) {\n                    o || (o = Math.sqrt(Math.pow(p[0] - f[0], 2) + Math.pow(p[1] - f[1], 2)));\n                    var g = Math.atan2(f[1] - p[1], f[0] - p[0]), v = e.h.v;\n                    v >= 1 ? v = .99 : v <= -1 && (v = -.99);\n                    var b = o * v, x = Math.cos(g + e.a.v) * b + p[0], P = Math.sin(g + e.a.v) * b + p[1];\n                    h.setAttribute(\"fx\", x), h.setAttribute(\"fy\", P), l && !e.g._collapsable && (e.of.setAttribute(\"fx\", x), e.of.setAttribute(\"fy\", P));\n                }\n            }\n            function h(t, e, r) {\n                var i = e.style, a = e.d;\n                a && (a._mdf || r) && a.dashStr && (i.pElem.setAttribute(\"stroke-dasharray\", a.dashStr), i.pElem.setAttribute(\"stroke-dashoffset\", a.dashoffset[0])), e.c && (e.c._mdf || r) && i.pElem.setAttribute(\"stroke\", \"rgb(\" + bmFloor(e.c.v[0]) + \",\" + bmFloor(e.c.v[1]) + \",\" + bmFloor(e.c.v[2]) + \")\"), (e.o._mdf || r) && i.pElem.setAttribute(\"stroke-opacity\", e.o.v), (e.w._mdf || r) && (i.pElem.setAttribute(\"stroke-width\", e.w.v), i.msElem && i.msElem.setAttribute(\"stroke-width\", e.w.v));\n            }\n            return {\n                createRenderFunction: function(t) {\n                    switch(t.ty){\n                        case \"fl\":\n                            return s;\n                        case \"gf\":\n                            return o;\n                        case \"gs\":\n                            return n;\n                        case \"st\":\n                            return h;\n                        case \"sh\":\n                        case \"el\":\n                        case \"rc\":\n                        case \"sr\":\n                            return a;\n                        case \"tr\":\n                            return r;\n                        case \"no\":\n                            return i;\n                        default:\n                            return null;\n                    }\n                }\n            };\n        }();\n        function SVGShapeElement(t, e, r) {\n            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.initElement(t, e, r), this.prevViewData = [];\n        }\n        function LetterProps(t, e, r, i, a, s) {\n            this.o = t, this.sw = e, this.sc = r, this.fc = i, this.m = a, this.p = s, this._mdf = {\n                o: !0,\n                sw: !!e,\n                sc: !!r,\n                fc: !!i,\n                m: !0,\n                p: !0\n            };\n        }\n        function TextProperty(t, e) {\n            this._frameId = initialDefaultFrame, this.pv = \"\", this.v = \"\", this.kf = !1, this._isFirstFrame = !0, this._mdf = !1, this.data = e, this.elem = t, this.comp = this.elem.comp, this.keysIndex = 0, this.canResize = !1, this.minimumFontSize = 1, this.effectsSequence = [], this.currentData = {\n                ascent: 0,\n                boxWidth: this.defaultBoxWidth,\n                f: \"\",\n                fStyle: \"\",\n                fWeight: \"\",\n                fc: \"\",\n                j: \"\",\n                justifyOffset: \"\",\n                l: [],\n                lh: 0,\n                lineWidths: [],\n                ls: \"\",\n                of: \"\",\n                s: \"\",\n                sc: \"\",\n                sw: 0,\n                t: 0,\n                tr: 0,\n                sz: 0,\n                ps: null,\n                fillColorAnim: !1,\n                strokeColorAnim: !1,\n                strokeWidthAnim: !1,\n                yOffset: 0,\n                finalSize: 0,\n                finalText: [],\n                finalLineHeight: 0,\n                __complete: !1\n            }, this.copyData(this.currentData, this.data.d.k[0].s), this.searchProperty() || this.completeTextData(this.currentData);\n        }\n        extendPrototype([\n            BaseElement,\n            TransformElement,\n            SVGBaseElement,\n            IShapeElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableDOMElement\n        ], SVGShapeElement), SVGShapeElement.prototype.initSecondaryElement = function() {}, SVGShapeElement.prototype.identityMatrix = new Matrix, SVGShapeElement.prototype.buildExpressionInterface = function() {}, SVGShapeElement.prototype.createContent = function() {\n            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes();\n        }, SVGShapeElement.prototype.filterUniqueShapes = function() {\n            var t, e, r, i, a = this.shapes.length, s = this.stylesList.length, n = [], o = !1;\n            for(r = 0; r < s; r += 1){\n                for(i = this.stylesList[r], o = !1, n.length = 0, t = 0; t < a; t += 1)-1 !== (e = this.shapes[t]).styles.indexOf(i) && (n.push(e), o = e._isAnimated || o);\n                n.length > 1 && o && this.setShapesAsAnimated(n);\n            }\n        }, SVGShapeElement.prototype.setShapesAsAnimated = function(t) {\n            var e, r = t.length;\n            for(e = 0; e < r; e += 1)t[e].setAsAnimated();\n        }, SVGShapeElement.prototype.createStyleElement = function(t, e) {\n            var r, i = new SVGStyleData(t, e), a = i.pElem;\n            if (\"st\" === t.ty) r = new SVGStrokeStyleData(this, t, i);\n            else if (\"fl\" === t.ty) r = new SVGFillStyleData(this, t, i);\n            else if (\"gf\" === t.ty || \"gs\" === t.ty) {\n                r = new (\"gf\" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, i), this.globalData.defs.appendChild(r.gf), r.maskId && (this.globalData.defs.appendChild(r.ms), this.globalData.defs.appendChild(r.of), a.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + r.maskId + \")\"));\n            } else \"no\" === t.ty && (r = new SVGNoStyleData(this, t, i));\n            return \"st\" !== t.ty && \"gs\" !== t.ty || (a.setAttribute(\"stroke-linecap\", lineCapEnum[t.lc || 2]), a.setAttribute(\"stroke-linejoin\", lineJoinEnum[t.lj || 2]), a.setAttribute(\"fill-opacity\", \"0\"), 1 === t.lj && a.setAttribute(\"stroke-miterlimit\", t.ml)), 2 === t.r && a.setAttribute(\"fill-rule\", \"evenodd\"), t.ln && a.setAttribute(\"id\", t.ln), t.cl && a.setAttribute(\"class\", t.cl), t.bm && (a.style[\"mix-blend-mode\"] = getBlendMode(t.bm)), this.stylesList.push(i), this.addToAnimatedContents(t, r), r;\n        }, SVGShapeElement.prototype.createGroupElement = function(t) {\n            var e = new ShapeGroupData;\n            return t.ln && e.gr.setAttribute(\"id\", t.ln), t.cl && e.gr.setAttribute(\"class\", t.cl), t.bm && (e.gr.style[\"mix-blend-mode\"] = getBlendMode(t.bm)), e;\n        }, SVGShapeElement.prototype.createTransformElement = function(t, e) {\n            var r = TransformPropertyFactory.getTransformProperty(this, t, this), i = new SVGTransformData(r, r.o, e);\n            return this.addToAnimatedContents(t, i), i;\n        }, SVGShapeElement.prototype.createShapeElement = function(t, e, r) {\n            var i = 4;\n            \"rc\" === t.ty ? i = 5 : \"el\" === t.ty ? i = 6 : \"sr\" === t.ty && (i = 7);\n            var a = new SVGShapeData(e, r, ShapePropertyFactory.getShapeProp(this, t, i, this));\n            return this.shapes.push(a), this.addShapeToModifiers(a), this.addToAnimatedContents(t, a), a;\n        }, SVGShapeElement.prototype.addToAnimatedContents = function(t, e) {\n            for(var r = 0, i = this.animatedContents.length; r < i;){\n                if (this.animatedContents[r].element === e) return;\n                r += 1;\n            }\n            this.animatedContents.push({\n                fn: SVGElementsRenderer.createRenderFunction(t),\n                element: e,\n                data: t\n            });\n        }, SVGShapeElement.prototype.setElementStyles = function(t) {\n            var e, r = t.styles, i = this.stylesList.length;\n            for(e = 0; e < i; e += 1)this.stylesList[e].closed || r.push(this.stylesList[e]);\n        }, SVGShapeElement.prototype.reloadShapes = function() {\n            var t;\n            this._isFirstFrame = !0;\n            var e = this.itemsData.length;\n            for(t = 0; t < e; t += 1)this.prevViewData[t] = this.itemsData[t];\n            for(this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1)this.dynamicProperties[t].getValue();\n            this.renderModifiers();\n        }, SVGShapeElement.prototype.searchShapes = function(t, e, r, i, a, s, n) {\n            var o, h, l, p, f, c, m = [].concat(s), d = t.length - 1, u = [], y = [];\n            for(o = d; o >= 0; o -= 1){\n                if ((c = this.searchProcessedElement(t[o])) ? e[o] = r[c - 1] : t[o]._render = n, \"fl\" === t[o].ty || \"st\" === t[o].ty || \"gf\" === t[o].ty || \"gs\" === t[o].ty || \"no\" === t[o].ty) c ? e[o].style.closed = !1 : e[o] = this.createStyleElement(t[o], a), t[o]._render && e[o].style.pElem.parentNode !== i && i.appendChild(e[o].style.pElem), u.push(e[o].style);\n                else if (\"gr\" === t[o].ty) {\n                    if (c) for(l = e[o].it.length, h = 0; h < l; h += 1)e[o].prevViewData[h] = e[o].it[h];\n                    else e[o] = this.createGroupElement(t[o]);\n                    this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, a + 1, m, n), t[o]._render && e[o].gr.parentNode !== i && i.appendChild(e[o].gr);\n                } else \"tr\" === t[o].ty ? (c || (e[o] = this.createTransformElement(t[o], i)), p = e[o].transform, m.push(p)) : \"sh\" === t[o].ty || \"rc\" === t[o].ty || \"el\" === t[o].ty || \"sr\" === t[o].ty ? (c || (e[o] = this.createShapeElement(t[o], m, a)), this.setElementStyles(e[o])) : \"tm\" === t[o].ty || \"rd\" === t[o].ty || \"ms\" === t[o].ty || \"pb\" === t[o].ty || \"zz\" === t[o].ty || \"op\" === t[o].ty ? (c ? (f = e[o]).closed = !1 : ((f = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), e[o] = f, this.shapeModifiers.push(f)), y.push(f)) : \"rp\" === t[o].ty && (c ? (f = e[o]).closed = !0 : (f = ShapeModifiers.getModifier(t[o].ty), e[o] = f, f.init(this, t, o, e), this.shapeModifiers.push(f), n = !1), y.push(f));\n                this.addProcessedElement(t[o], o + 1);\n            }\n            for(d = u.length, o = 0; o < d; o += 1)u[o].closed = !0;\n            for(d = y.length, o = 0; o < d; o += 1)y[o].closed = !0;\n        }, SVGShapeElement.prototype.renderInnerContent = function() {\n            var t;\n            this.renderModifiers();\n            var e = this.stylesList.length;\n            for(t = 0; t < e; t += 1)this.stylesList[t].reset();\n            for(this.renderShape(), t = 0; t < e; t += 1)(this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute(\"d\", this.stylesList[t].d), this.stylesList[t].d = \"M0 0\" + this.stylesList[t].d), this.stylesList[t].pElem.setAttribute(\"d\", this.stylesList[t].d || \"M0 0\"));\n        }, SVGShapeElement.prototype.renderShape = function() {\n            var t, e, r = this.animatedContents.length;\n            for(t = 0; t < r; t += 1)e = this.animatedContents[t], (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame);\n        }, SVGShapeElement.prototype.destroy = function() {\n            this.destroyBaseElement(), this.shapesData = null, this.itemsData = null;\n        }, LetterProps.prototype.update = function(t, e, r, i, a, s) {\n            this._mdf.o = !1, this._mdf.sw = !1, this._mdf.sc = !1, this._mdf.fc = !1, this._mdf.m = !1, this._mdf.p = !1;\n            var n = !1;\n            return this.o !== t && (this.o = t, this._mdf.o = !0, n = !0), this.sw !== e && (this.sw = e, this._mdf.sw = !0, n = !0), this.sc !== r && (this.sc = r, this._mdf.sc = !0, n = !0), this.fc !== i && (this.fc = i, this._mdf.fc = !0, n = !0), this.m !== a && (this.m = a, this._mdf.m = !0, n = !0), !s.length || this.p[0] === s[0] && this.p[1] === s[1] && this.p[4] === s[4] && this.p[5] === s[5] && this.p[12] === s[12] && this.p[13] === s[13] || (this.p = s, this._mdf.p = !0, n = !0), n;\n        }, TextProperty.prototype.defaultBoxWidth = [\n            0,\n            0\n        ], TextProperty.prototype.copyData = function(t, e) {\n            for(var r in e)Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n            return t;\n        }, TextProperty.prototype.setCurrentData = function(t) {\n            t.__complete || this.completeTextData(t), this.currentData = t, this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth, this._mdf = !0;\n        }, TextProperty.prototype.searchProperty = function() {\n            return this.searchKeyframes();\n        }, TextProperty.prototype.searchKeyframes = function() {\n            return this.kf = this.data.d.k.length > 1, this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf;\n        }, TextProperty.prototype.addEffect = function(t) {\n            this.effectsSequence.push(t), this.elem.addDynamicProperty(this);\n        }, TextProperty.prototype.getValue = function(t) {\n            if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || t) {\n                this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n                var e = this.currentData, r = this.keysIndex;\n                if (this.lock) this.setCurrentData(this.currentData);\n                else {\n                    var i;\n                    this.lock = !0, this._mdf = !1;\n                    var a = this.effectsSequence.length, s = t || this.data.d.k[this.keysIndex].s;\n                    for(i = 0; i < a; i += 1)s = r !== this.keysIndex ? this.effectsSequence[i](s, s.t) : this.effectsSequence[i](this.currentData, s.t);\n                    e !== s && this.setCurrentData(s), this.v = this.currentData, this.pv = this.v, this.lock = !1, this.frameId = this.elem.globalData.frameId;\n                }\n            }\n        }, TextProperty.prototype.getKeyframeValue = function() {\n            for(var t = this.data.d.k, e = this.elem.comp.renderedFrame, r = 0, i = t.length; r <= i - 1 && !(r === i - 1 || t[r + 1].t > e);)r += 1;\n            return this.keysIndex !== r && (this.keysIndex = r), this.data.d.k[this.keysIndex].s;\n        }, TextProperty.prototype.buildFinalText = function(t) {\n            for(var e, r, i = [], a = 0, s = t.length, n = !1; a < s;)e = t.charCodeAt(a), FontManager.isCombinedCharacter(e) ? i[i.length - 1] += t.charAt(a) : e >= 55296 && e <= 56319 ? (r = t.charCodeAt(a + 1)) >= 56320 && r <= 57343 ? (n || FontManager.isModifier(e, r) ? (i[i.length - 1] += t.substr(a, 2), n = !1) : i.push(t.substr(a, 2)), a += 1) : i.push(t.charAt(a)) : e > 56319 ? (r = t.charCodeAt(a + 1), FontManager.isZeroWidthJoiner(e, r) ? (n = !0, i[i.length - 1] += t.substr(a, 2), a += 1) : i.push(t.charAt(a))) : FontManager.isZeroWidthJoiner(e) ? (i[i.length - 1] += t.charAt(a), n = !0) : i.push(t.charAt(a)), a += 1;\n            return i;\n        }, TextProperty.prototype.completeTextData = function(t) {\n            t.__complete = !0;\n            var e, r, i, a, s, n, o, h = this.elem.globalData.fontManager, l = this.data, p = [], f = 0, c = l.m.g, m = 0, d = 0, u = 0, y = [], g = 0, v = 0, b = h.getFontByName(t.f), x = 0, P = getFontProperties(b);\n            t.fWeight = P.weight, t.fStyle = P.style, t.finalSize = t.s, t.finalText = this.buildFinalText(t.t), r = t.finalText.length, t.finalLineHeight = t.lh;\n            var E, S = t.tr / 1e3 * t.finalSize;\n            if (t.sz) for(var C, _, A = !0, k = t.sz[0], w = t.sz[1]; A;){\n                C = 0, g = 0, r = (_ = this.buildFinalText(t.t)).length, S = t.tr / 1e3 * t.finalSize;\n                var T = -1;\n                for(e = 0; e < r; e += 1)E = _[e].charCodeAt(0), i = !1, \" \" === _[e] ? T = e : 13 !== E && 3 !== E || (g = 0, i = !0, C += t.finalLineHeight || 1.2 * t.finalSize), h.chars ? (o = h.getCharData(_[e], b.fStyle, b.fFamily), x = i ? 0 : o.w * t.finalSize / 100) : x = h.measureText(_[e], t.f, t.finalSize), g + x > k && \" \" !== _[e] ? (-1 === T ? r += 1 : e = T, C += t.finalLineHeight || 1.2 * t.finalSize, _.splice(e, T === e ? 1 : 0, \"\\r\"), T = -1, g = 0) : (g += x, g += S);\n                C += b.ascent * t.finalSize / 100, this.canResize && t.finalSize > this.minimumFontSize && w < C ? (t.finalSize -= 1, t.finalLineHeight = t.finalSize * t.lh / t.s) : (t.finalText = _, r = t.finalText.length, A = !1);\n            }\n            g = -S, x = 0;\n            var M, D = 0;\n            for(e = 0; e < r; e += 1)if (i = !1, 13 === (E = (M = t.finalText[e]).charCodeAt(0)) || 3 === E ? (D = 0, y.push(g), v = g > v ? g : v, g = -2 * S, a = \"\", i = !0, u += 1) : a = M, h.chars ? (o = h.getCharData(M, b.fStyle, h.getFontByName(t.f).fFamily), x = i ? 0 : o.w * t.finalSize / 100) : x = h.measureText(a, t.f, t.finalSize), \" \" === M ? D += x + S : (g += x + S + D, D = 0), p.push({\n                l: x,\n                an: x,\n                add: m,\n                n: i,\n                anIndexes: [],\n                val: a,\n                line: u,\n                animatorJustifyOffset: 0\n            }), 2 == c) {\n                if (m += x, \"\" === a || \" \" === a || e === r - 1) {\n                    for(\"\" !== a && \" \" !== a || (m -= x); d <= e;)p[d].an = m, p[d].ind = f, p[d].extra = x, d += 1;\n                    f += 1, m = 0;\n                }\n            } else if (3 == c) {\n                if (m += x, \"\" === a || e === r - 1) {\n                    for(\"\" === a && (m -= x); d <= e;)p[d].an = m, p[d].ind = f, p[d].extra = x, d += 1;\n                    m = 0, f += 1;\n                }\n            } else p[f].ind = f, p[f].extra = 0, f += 1;\n            if (t.l = p, v = g > v ? g : v, y.push(g), t.sz) t.boxWidth = t.sz[0], t.justifyOffset = 0;\n            else switch(t.boxWidth = v, t.j){\n                case 1:\n                    t.justifyOffset = -t.boxWidth;\n                    break;\n                case 2:\n                    t.justifyOffset = -t.boxWidth / 2;\n                    break;\n                default:\n                    t.justifyOffset = 0;\n            }\n            t.lineWidths = y;\n            var F, I, R, B, V = l.a;\n            n = V.length;\n            var L = [];\n            for(s = 0; s < n; s += 1){\n                for((F = V[s]).a.sc && (t.strokeColorAnim = !0), F.a.sw && (t.strokeWidthAnim = !0), (F.a.fc || F.a.fh || F.a.fs || F.a.fb) && (t.fillColorAnim = !0), B = 0, R = F.s.b, e = 0; e < r; e += 1)(I = p[e]).anIndexes[s] = B, (1 == R && \"\" !== I.val || 2 == R && \"\" !== I.val && \" \" !== I.val || 3 == R && (I.n || \" \" == I.val || e == r - 1) || 4 == R && (I.n || e == r - 1)) && (1 === F.s.rn && L.push(B), B += 1);\n                l.a[s].s.totalChars = B;\n                var z, G = -1;\n                if (1 === F.s.rn) for(e = 0; e < r; e += 1)G != (I = p[e]).anIndexes[s] && (G = I.anIndexes[s], z = L.splice(Math.floor(Math.random() * L.length), 1)[0]), I.anIndexes[s] = z;\n            }\n            t.yOffset = t.finalLineHeight || 1.2 * t.finalSize, t.ls = t.ls || 0, t.ascent = b.ascent * t.finalSize / 100;\n        }, TextProperty.prototype.updateDocumentData = function(t, e) {\n            e = void 0 === e ? this.keysIndex : e;\n            var r = this.copyData({}, this.data.d.k[e].s);\n            r = this.copyData(r, t), this.data.d.k[e].s = r, this.recalculate(e), this.elem.addDynamicProperty(this);\n        }, TextProperty.prototype.recalculate = function(t) {\n            var e = this.data.d.k[t].s;\n            e.__complete = !1, this.keysIndex = 0, this._isFirstFrame = !0, this.getValue(e);\n        }, TextProperty.prototype.canResizeFont = function(t) {\n            this.canResize = t, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);\n        }, TextProperty.prototype.setMinimumFontSize = function(t) {\n            this.minimumFontSize = Math.floor(t) || 1, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);\n        };\n        var TextSelectorProp = function() {\n            var t = Math.max, e = Math.min, r = Math.floor;\n            function i(t, e) {\n                this._currentTextLength = -1, this.k = !1, this.data = e, this.elem = t, this.comp = t.comp, this.finalS = 0, this.finalE = 0, this.initDynamicPropertyContainer(t), this.s = PropertyFactory.getProp(t, e.s || {\n                    k: 0\n                }, 0, 0, this), this.e = \"e\" in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : {\n                    v: 100\n                }, this.o = PropertyFactory.getProp(t, e.o || {\n                    k: 0\n                }, 0, 0, this), this.xe = PropertyFactory.getProp(t, e.xe || {\n                    k: 0\n                }, 0, 0, this), this.ne = PropertyFactory.getProp(t, e.ne || {\n                    k: 0\n                }, 0, 0, this), this.sm = PropertyFactory.getProp(t, e.sm || {\n                    k: 100\n                }, 0, 0, this), this.a = PropertyFactory.getProp(t, e.a, 0, .01, this), this.dynamicProperties.length || this.getValue();\n            }\n            return i.prototype = {\n                getMult: function(i) {\n                    this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();\n                    var a = 0, s = 0, n = 1, o = 1;\n                    this.ne.v > 0 ? a = this.ne.v / 100 : s = -this.ne.v / 100, this.xe.v > 0 ? n = 1 - this.xe.v / 100 : o = 1 + this.xe.v / 100;\n                    var h = BezierFactory.getBezierEasing(a, s, n, o).get, l = 0, p = this.finalS, f = this.finalE, c = this.data.sh;\n                    if (2 === c) l = h(l = f === p ? i >= f ? 1 : 0 : t(0, e(.5 / (f - p) + (i - p) / (f - p), 1)));\n                    else if (3 === c) l = h(l = f === p ? i >= f ? 0 : 1 : 1 - t(0, e(.5 / (f - p) + (i - p) / (f - p), 1)));\n                    else if (4 === c) f === p ? l = 0 : (l = t(0, e(.5 / (f - p) + (i - p) / (f - p), 1))) < .5 ? l *= 2 : l = 1 - 2 * (l - .5), l = h(l);\n                    else if (5 === c) {\n                        if (f === p) l = 0;\n                        else {\n                            var m = f - p, d = -m / 2 + (i = e(t(0, i + .5 - p), f - p)), u = m / 2;\n                            l = Math.sqrt(1 - d * d / (u * u));\n                        }\n                        l = h(l);\n                    } else 6 === c ? (f === p ? l = 0 : (i = e(t(0, i + .5 - p), f - p), l = (1 + Math.cos(Math.PI + 2 * Math.PI * i / (f - p))) / 2), l = h(l)) : (i >= r(p) && (l = t(0, e(i - p < 0 ? e(f, 1) - (p - i) : f - i, 1))), l = h(l));\n                    if (100 !== this.sm.v) {\n                        var y = .01 * this.sm.v;\n                        0 === y && (y = 1e-8);\n                        var g = .5 - .5 * y;\n                        l < g ? l = 0 : (l = (l - g) / y) > 1 && (l = 1);\n                    }\n                    return l * this.a.v;\n                },\n                getValue: function(t) {\n                    this.iterateDynamicProperties(), this._mdf = t || this._mdf, this._currentTextLength = this.elem.textProperty.currentData.l.length || 0, t && 2 === this.data.r && (this.e.v = this._currentTextLength);\n                    var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars, r = this.o.v / e, i = this.s.v / e + r, a = this.e.v / e + r;\n                    if (i > a) {\n                        var s = i;\n                        i = a, a = s;\n                    }\n                    this.finalS = i, this.finalE = a;\n                }\n            }, extendPrototype([\n                DynamicPropertyContainer\n            ], i), {\n                getTextSelectorProp: function(t, e, r) {\n                    return new i(t, e, r);\n                }\n            };\n        }();\n        function TextAnimatorDataProperty(t, e, r) {\n            var i = {\n                propType: !1\n            }, a = PropertyFactory.getProp, s = e.a;\n            this.a = {\n                r: s.r ? a(t, s.r, 0, degToRads, r) : i,\n                rx: s.rx ? a(t, s.rx, 0, degToRads, r) : i,\n                ry: s.ry ? a(t, s.ry, 0, degToRads, r) : i,\n                sk: s.sk ? a(t, s.sk, 0, degToRads, r) : i,\n                sa: s.sa ? a(t, s.sa, 0, degToRads, r) : i,\n                s: s.s ? a(t, s.s, 1, .01, r) : i,\n                a: s.a ? a(t, s.a, 1, 0, r) : i,\n                o: s.o ? a(t, s.o, 0, .01, r) : i,\n                p: s.p ? a(t, s.p, 1, 0, r) : i,\n                sw: s.sw ? a(t, s.sw, 0, 0, r) : i,\n                sc: s.sc ? a(t, s.sc, 1, 0, r) : i,\n                fc: s.fc ? a(t, s.fc, 1, 0, r) : i,\n                fh: s.fh ? a(t, s.fh, 0, 0, r) : i,\n                fs: s.fs ? a(t, s.fs, 0, .01, r) : i,\n                fb: s.fb ? a(t, s.fb, 0, .01, r) : i,\n                t: s.t ? a(t, s.t, 0, 0, r) : i\n            }, this.s = TextSelectorProp.getTextSelectorProp(t, e.s, r), this.s.t = e.s.t;\n        }\n        function TextAnimatorProperty(t, e, r) {\n            this._isFirstFrame = !0, this._hasMaskedPath = !1, this._frameId = -1, this._textData = t, this._renderType = e, this._elem = r, this._animatorsData = createSizedArray(this._textData.a.length), this._pathData = {}, this._moreOptions = {\n                alignment: {}\n            }, this.renderedLetters = [], this.lettersChangedFlag = !1, this.initDynamicPropertyContainer(r);\n        }\n        function ITextElement() {}\n        TextAnimatorProperty.prototype.searchProperties = function() {\n            var t, e, r = this._textData.a.length, i = PropertyFactory.getProp;\n            for(t = 0; t < r; t += 1)e = this._textData.a[t], this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this);\n            this._textData.p && \"m\" in this._textData.p ? (this._pathData = {\n                a: i(this._elem, this._textData.p.a, 0, 0, this),\n                f: i(this._elem, this._textData.p.f, 0, 0, this),\n                l: i(this._elem, this._textData.p.l, 0, 0, this),\n                r: i(this._elem, this._textData.p.r, 0, 0, this),\n                p: i(this._elem, this._textData.p.p, 0, 0, this),\n                m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n            }, this._hasMaskedPath = !0) : this._hasMaskedPath = !1, this._moreOptions.alignment = i(this._elem, this._textData.m.a, 1, 0, this);\n        }, TextAnimatorProperty.prototype.getMeasures = function(t, e) {\n            if (this.lettersChangedFlag = e, this._mdf || this._isFirstFrame || e || this._hasMaskedPath && this._pathData.m._mdf) {\n                this._isFirstFrame = !1;\n                var r, i, a, s, n, o, h, l, p, f, c, m, d, u, y, g, v, b, x, P = this._moreOptions.alignment.v, E = this._animatorsData, S = this._textData, C = this.mHelper, _ = this._renderType, A = this.renderedLetters.length, k = t.l;\n                if (this._hasMaskedPath) {\n                    if (x = this._pathData.m, !this._pathData.n || this._pathData._mdf) {\n                        var w, T = x.v;\n                        for(this._pathData.r.v && (T = T.reverse()), n = {\n                            tLength: 0,\n                            segments: []\n                        }, s = T._length - 1, g = 0, a = 0; a < s; a += 1)w = bez.buildBezierData(T.v[a], T.v[a + 1], [\n                            T.o[a][0] - T.v[a][0],\n                            T.o[a][1] - T.v[a][1]\n                        ], [\n                            T.i[a + 1][0] - T.v[a + 1][0],\n                            T.i[a + 1][1] - T.v[a + 1][1]\n                        ]), n.tLength += w.segmentLength, n.segments.push(w), g += w.segmentLength;\n                        a = s, x.v.c && (w = bez.buildBezierData(T.v[a], T.v[0], [\n                            T.o[a][0] - T.v[a][0],\n                            T.o[a][1] - T.v[a][1]\n                        ], [\n                            T.i[0][0] - T.v[0][0],\n                            T.i[0][1] - T.v[0][1]\n                        ]), n.tLength += w.segmentLength, n.segments.push(w), g += w.segmentLength), this._pathData.pi = n;\n                    }\n                    if (n = this._pathData.pi, o = this._pathData.f.v, c = 0, f = 1, l = 0, p = !0, u = n.segments, o < 0 && x.v.c) for(n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength), f = (d = u[c = u.length - 1].points).length - 1; o < 0;)o += d[f].partialLength, (f -= 1) < 0 && (f = (d = u[c -= 1].points).length - 1);\n                    m = (d = u[c].points)[f - 1], y = (h = d[f]).partialLength;\n                }\n                s = k.length, r = 0, i = 0;\n                var M, D, F, I, R, B = 1.2 * t.finalSize * .714, V = !0;\n                F = E.length;\n                var L, z, G, O, N, H, j, q, W, $, Y, X, Z = -1, K = o, J = c, U = f, Q = -1, tt = \"\", et = this.defaultPropsArray;\n                if (2 === t.j || 1 === t.j) {\n                    var rt = 0, it = 0, at = 2 === t.j ? -.5 : -1, st = 0, nt = !0;\n                    for(a = 0; a < s; a += 1)if (k[a].n) {\n                        for(rt && (rt += it); st < a;)k[st].animatorJustifyOffset = rt, st += 1;\n                        rt = 0, nt = !0;\n                    } else {\n                        for(D = 0; D < F; D += 1)(M = E[D].a).t.propType && (nt && 2 === t.j && (it += M.t.v * at), (R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars)).length ? rt += M.t.v * R[0] * at : rt += M.t.v * R * at);\n                        nt = !1;\n                    }\n                    for(rt && (rt += it); st < a;)k[st].animatorJustifyOffset = rt, st += 1;\n                }\n                for(a = 0; a < s; a += 1){\n                    if (C.reset(), O = 1, k[a].n) r = 0, i += t.yOffset, i += V ? 1 : 0, o = K, V = !1, this._hasMaskedPath && (f = U, m = (d = u[c = J].points)[f - 1], y = (h = d[f]).partialLength, l = 0), tt = \"\", Y = \"\", W = \"\", X = \"\", et = this.defaultPropsArray;\n                    else {\n                        if (this._hasMaskedPath) {\n                            if (Q !== k[a].line) {\n                                switch(t.j){\n                                    case 1:\n                                        o += g - t.lineWidths[k[a].line];\n                                        break;\n                                    case 2:\n                                        o += (g - t.lineWidths[k[a].line]) / 2;\n                                }\n                                Q = k[a].line;\n                            }\n                            Z !== k[a].ind && (k[Z] && (o += k[Z].extra), o += k[a].an / 2, Z = k[a].ind), o += P[0] * k[a].an * .005;\n                            var ot = 0;\n                            for(D = 0; D < F; D += 1)(M = E[D].a).p.propType && ((R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars)).length ? ot += M.p.v[0] * R[0] : ot += M.p.v[0] * R), M.a.propType && ((R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars)).length ? ot += M.a.v[0] * R[0] : ot += M.a.v[0] * R);\n                            for(p = !0, this._pathData.a.v && (o = .5 * k[0].an + (g - this._pathData.f.v - .5 * k[0].an - .5 * k[k.length - 1].an) * Z / (s - 1), o += this._pathData.f.v); p;)l + y >= o + ot || !d ? (v = (o + ot - l) / h.partialLength, z = m.point[0] + (h.point[0] - m.point[0]) * v, G = m.point[1] + (h.point[1] - m.point[1]) * v, C.translate(-P[0] * k[a].an * .005, -P[1] * B * .01), p = !1) : d && (l += h.partialLength, (f += 1) >= d.length && (f = 0, u[c += 1] ? d = u[c].points : x.v.c ? (f = 0, d = u[c = 0].points) : (l -= h.partialLength, d = null)), d && (m = h, y = (h = d[f]).partialLength));\n                            L = k[a].an / 2 - k[a].add, C.translate(-L, 0, 0);\n                        } else L = k[a].an / 2 - k[a].add, C.translate(-L, 0, 0), C.translate(-P[0] * k[a].an * .005, -P[1] * B * .01, 0);\n                        for(D = 0; D < F; D += 1)(M = E[D].a).t.propType && (R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars), 0 === r && 0 === t.j || (this._hasMaskedPath ? R.length ? o += M.t.v * R[0] : o += M.t.v * R : R.length ? r += M.t.v * R[0] : r += M.t.v * R));\n                        for(t.strokeWidthAnim && (H = t.sw || 0), t.strokeColorAnim && (N = t.sc ? [\n                            t.sc[0],\n                            t.sc[1],\n                            t.sc[2]\n                        ] : [\n                            0,\n                            0,\n                            0\n                        ]), t.fillColorAnim && t.fc && (j = [\n                            t.fc[0],\n                            t.fc[1],\n                            t.fc[2]\n                        ]), D = 0; D < F; D += 1)(M = E[D].a).a.propType && ((R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars)).length ? C.translate(-M.a.v[0] * R[0], -M.a.v[1] * R[1], M.a.v[2] * R[2]) : C.translate(-M.a.v[0] * R, -M.a.v[1] * R, M.a.v[2] * R));\n                        for(D = 0; D < F; D += 1)(M = E[D].a).s.propType && ((R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars)).length ? C.scale(1 + (M.s.v[0] - 1) * R[0], 1 + (M.s.v[1] - 1) * R[1], 1) : C.scale(1 + (M.s.v[0] - 1) * R, 1 + (M.s.v[1] - 1) * R, 1));\n                        for(D = 0; D < F; D += 1){\n                            if (M = E[D].a, R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars), M.sk.propType && (R.length ? C.skewFromAxis(-M.sk.v * R[0], M.sa.v * R[1]) : C.skewFromAxis(-M.sk.v * R, M.sa.v * R)), M.r.propType && (R.length ? C.rotateZ(-M.r.v * R[2]) : C.rotateZ(-M.r.v * R)), M.ry.propType && (R.length ? C.rotateY(M.ry.v * R[1]) : C.rotateY(M.ry.v * R)), M.rx.propType && (R.length ? C.rotateX(M.rx.v * R[0]) : C.rotateX(M.rx.v * R)), M.o.propType && (R.length ? O += (M.o.v * R[0] - O) * R[0] : O += (M.o.v * R - O) * R), t.strokeWidthAnim && M.sw.propType && (R.length ? H += M.sw.v * R[0] : H += M.sw.v * R), t.strokeColorAnim && M.sc.propType) for(q = 0; q < 3; q += 1)R.length ? N[q] += (M.sc.v[q] - N[q]) * R[0] : N[q] += (M.sc.v[q] - N[q]) * R;\n                            if (t.fillColorAnim && t.fc) {\n                                if (M.fc.propType) for(q = 0; q < 3; q += 1)R.length ? j[q] += (M.fc.v[q] - j[q]) * R[0] : j[q] += (M.fc.v[q] - j[q]) * R;\n                                M.fh.propType && (j = R.length ? addHueToRGB(j, M.fh.v * R[0]) : addHueToRGB(j, M.fh.v * R)), M.fs.propType && (j = R.length ? addSaturationToRGB(j, M.fs.v * R[0]) : addSaturationToRGB(j, M.fs.v * R)), M.fb.propType && (j = R.length ? addBrightnessToRGB(j, M.fb.v * R[0]) : addBrightnessToRGB(j, M.fb.v * R));\n                            }\n                        }\n                        for(D = 0; D < F; D += 1)(M = E[D].a).p.propType && (R = E[D].s.getMult(k[a].anIndexes[D], S.a[D].s.totalChars), this._hasMaskedPath ? R.length ? C.translate(0, M.p.v[1] * R[0], -M.p.v[2] * R[1]) : C.translate(0, M.p.v[1] * R, -M.p.v[2] * R) : R.length ? C.translate(M.p.v[0] * R[0], M.p.v[1] * R[1], -M.p.v[2] * R[2]) : C.translate(M.p.v[0] * R, M.p.v[1] * R, -M.p.v[2] * R));\n                        if (t.strokeWidthAnim && (W = H < 0 ? 0 : H), t.strokeColorAnim && ($ = \"rgb(\" + Math.round(255 * N[0]) + \",\" + Math.round(255 * N[1]) + \",\" + Math.round(255 * N[2]) + \")\"), t.fillColorAnim && t.fc && (Y = \"rgb(\" + Math.round(255 * j[0]) + \",\" + Math.round(255 * j[1]) + \",\" + Math.round(255 * j[2]) + \")\"), this._hasMaskedPath) {\n                            if (C.translate(0, -t.ls), C.translate(0, P[1] * B * .01 + i, 0), this._pathData.p.v) {\n                                b = (h.point[1] - m.point[1]) / (h.point[0] - m.point[0]);\n                                var ht = 180 * Math.atan(b) / Math.PI;\n                                h.point[0] < m.point[0] && (ht += 180), C.rotate(-ht * Math.PI / 180);\n                            }\n                            C.translate(z, G, 0), o -= P[0] * k[a].an * .005, k[a + 1] && Z !== k[a + 1].ind && (o += k[a].an / 2, o += .001 * t.tr * t.finalSize);\n                        } else {\n                            switch(C.translate(r, i, 0), t.ps && C.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j){\n                                case 1:\n                                    C.translate(k[a].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[k[a].line]), 0, 0);\n                                    break;\n                                case 2:\n                                    C.translate(k[a].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[k[a].line]) / 2, 0, 0);\n                            }\n                            C.translate(0, -t.ls), C.translate(L, 0, 0), C.translate(P[0] * k[a].an * .005, P[1] * B * .01, 0), r += k[a].l + .001 * t.tr * t.finalSize;\n                        }\n                        \"html\" === _ ? tt = C.toCSS() : \"svg\" === _ ? tt = C.to2dCSS() : et = [\n                            C.props[0],\n                            C.props[1],\n                            C.props[2],\n                            C.props[3],\n                            C.props[4],\n                            C.props[5],\n                            C.props[6],\n                            C.props[7],\n                            C.props[8],\n                            C.props[9],\n                            C.props[10],\n                            C.props[11],\n                            C.props[12],\n                            C.props[13],\n                            C.props[14],\n                            C.props[15]\n                        ], X = O;\n                    }\n                    A <= a ? (I = new LetterProps(X, W, $, Y, tt, et), this.renderedLetters.push(I), A += 1, this.lettersChangedFlag = !0) : (I = this.renderedLetters[a], this.lettersChangedFlag = I.update(X, W, $, Y, tt, et) || this.lettersChangedFlag);\n                }\n            }\n        }, TextAnimatorProperty.prototype.getValue = function() {\n            this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId, this.iterateDynamicProperties());\n        }, TextAnimatorProperty.prototype.mHelper = new Matrix, TextAnimatorProperty.prototype.defaultPropsArray = [], extendPrototype([\n            DynamicPropertyContainer\n        ], TextAnimatorProperty), ITextElement.prototype.initElement = function(t, e, r) {\n            this.lettersChangedFlag = !0, this.initFrame(), this.initBaseData(t, e, r), this.textProperty = new TextProperty(this, t.t, this.dynamicProperties), this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this), this.initTransform(t, e, r), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide(), this.textAnimator.searchProperties(this.dynamicProperties);\n        }, ITextElement.prototype.prepareFrame = function(t) {\n            this._mdf = !1, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), this.textProperty._isFirstFrame = !1, this.textProperty._mdf = !1);\n        }, ITextElement.prototype.createPathShape = function(t, e) {\n            var r, i, a = e.length, s = \"\";\n            for(r = 0; r < a; r += 1)\"sh\" === e[r].ty && (i = e[r].ks.k, s += buildShapeString(i, i.i.length, !0, t));\n            return s;\n        }, ITextElement.prototype.updateDocumentData = function(t, e) {\n            this.textProperty.updateDocumentData(t, e);\n        }, ITextElement.prototype.canResizeFont = function(t) {\n            this.textProperty.canResizeFont(t);\n        }, ITextElement.prototype.setMinimumFontSize = function(t) {\n            this.textProperty.setMinimumFontSize(t);\n        }, ITextElement.prototype.applyTextPropertiesToMatrix = function(t, e, r, i, a) {\n            switch(t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j){\n                case 1:\n                    e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]), 0, 0);\n                    break;\n                case 2:\n                    e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]) / 2, 0, 0);\n            }\n            e.translate(i, a, 0);\n        }, ITextElement.prototype.buildColor = function(t) {\n            return \"rgb(\" + Math.round(255 * t[0]) + \",\" + Math.round(255 * t[1]) + \",\" + Math.round(255 * t[2]) + \")\";\n        }, ITextElement.prototype.emptyProp = new LetterProps, ITextElement.prototype.destroy = function() {};\n        var emptyShapeData = {\n            shapes: []\n        };\n        function SVGTextLottieElement(t, e, r) {\n            this.textSpans = [], this.renderType = \"svg\", this.initElement(t, e, r);\n        }\n        function ISolidElement(t, e, r) {\n            this.initElement(t, e, r);\n        }\n        function NullElement(t, e, r) {\n            this.initFrame(), this.initBaseData(t, e, r), this.initFrame(), this.initTransform(t, e, r), this.initHierarchy();\n        }\n        function SVGRendererBase() {}\n        function ICompElement() {}\n        function SVGCompElement(t, e, r) {\n            this.layers = t.layers, this.supports3d = !0, this.completeLayers = !1, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, r), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {\n                _placeholder: !0\n            };\n        }\n        function SVGRenderer(t, e) {\n            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.svgElement = createNS(\"svg\");\n            var r = \"\";\n            if (e && e.title) {\n                var i = createNS(\"title\"), a = createElementID();\n                i.setAttribute(\"id\", a), i.textContent = e.title, this.svgElement.appendChild(i), r += a;\n            }\n            if (e && e.description) {\n                var s = createNS(\"desc\"), n = createElementID();\n                s.setAttribute(\"id\", n), s.textContent = e.description, this.svgElement.appendChild(s), r += \" \" + n;\n            }\n            r && this.svgElement.setAttribute(\"aria-labelledby\", r);\n            var o = createNS(\"defs\");\n            this.svgElement.appendChild(o);\n            var h = createNS(\"g\");\n            this.svgElement.appendChild(h), this.layerElement = h, this.renderConfig = {\n                preserveAspectRatio: e && e.preserveAspectRatio || \"xMidYMid meet\",\n                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || \"xMidYMid slice\",\n                contentVisibility: e && e.contentVisibility || \"visible\",\n                progressiveLoad: e && e.progressiveLoad || !1,\n                hideOnTransparent: !(e && !1 === e.hideOnTransparent),\n                viewBoxOnly: e && e.viewBoxOnly || !1,\n                viewBoxSize: e && e.viewBoxSize || !1,\n                className: e && e.className || \"\",\n                id: e && e.id || \"\",\n                focusable: e && e.focusable,\n                filterSize: {\n                    width: e && e.filterSize && e.filterSize.width || \"100%\",\n                    height: e && e.filterSize && e.filterSize.height || \"100%\",\n                    x: e && e.filterSize && e.filterSize.x || \"0%\",\n                    y: e && e.filterSize && e.filterSize.y || \"0%\"\n                },\n                width: e && e.width,\n                height: e && e.height,\n                runExpressions: !e || void 0 === e.runExpressions || e.runExpressions\n            }, this.globalData = {\n                _mdf: !1,\n                frameNum: -1,\n                defs: o,\n                renderConfig: this.renderConfig\n            }, this.elements = [], this.pendingElements = [], this.destroyed = !1, this.rendererType = \"svg\";\n        }\n        function CVContextData() {\n            var t;\n            this.saved = [], this.cArrPos = 0, this.cTr = new Matrix, this.cO = 1;\n            for(this.savedOp = createTypedArray(\"float32\", 15), t = 0; t < 15; t += 1)this.saved[t] = createTypedArray(\"float32\", 16);\n            this._length = 15;\n        }\n        function ShapeTransformManager() {\n            this.sequences = {}, this.sequenceList = [], this.transform_key_count = 0;\n        }\n        extendPrototype([\n            BaseElement,\n            TransformElement,\n            SVGBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableDOMElement,\n            ITextElement\n        ], SVGTextLottieElement), SVGTextLottieElement.prototype.createContent = function() {\n            this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS(\"text\"));\n        }, SVGTextLottieElement.prototype.buildTextContents = function(t) {\n            for(var e = 0, r = t.length, i = [], a = \"\"; e < r;)t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (i.push(a), a = \"\") : a += t[e], e += 1;\n            return i.push(a), i;\n        }, SVGTextLottieElement.prototype.buildShapeData = function(t, e) {\n            if (t.shapes && t.shapes.length) {\n                var r = t.shapes[0];\n                if (r.it) {\n                    var i = r.it[r.it.length - 1];\n                    i.s && (i.s.k[0] = e, i.s.k[1] = e);\n                }\n            }\n            return t;\n        }, SVGTextLottieElement.prototype.buildNewText = function() {\n            var t, e;\n            this.addDynamicProperty(this);\n            var r = this.textProperty.currentData;\n            this.renderedLetters = createSizedArray(r ? r.l.length : 0), r.fc ? this.layerElement.setAttribute(\"fill\", this.buildColor(r.fc)) : this.layerElement.setAttribute(\"fill\", \"rgba(0,0,0,0)\"), r.sc && (this.layerElement.setAttribute(\"stroke\", this.buildColor(r.sc)), this.layerElement.setAttribute(\"stroke-width\", r.sw)), this.layerElement.setAttribute(\"font-size\", r.finalSize);\n            var i = this.globalData.fontManager.getFontByName(r.f);\n            if (i.fClass) this.layerElement.setAttribute(\"class\", i.fClass);\n            else {\n                this.layerElement.setAttribute(\"font-family\", i.fFamily);\n                var a = r.fWeight, s = r.fStyle;\n                this.layerElement.setAttribute(\"font-style\", s), this.layerElement.setAttribute(\"font-weight\", a);\n            }\n            this.layerElement.setAttribute(\"aria-label\", r.t);\n            var n, o = r.l || [], h = !!this.globalData.fontManager.chars;\n            e = o.length;\n            var l = this.mHelper, p = this.data.singleShape, f = 0, c = 0, m = !0, d = .001 * r.tr * r.finalSize;\n            if (!p || h || r.sz) {\n                var u, y = this.textSpans.length;\n                for(t = 0; t < e; t += 1){\n                    if (this.textSpans[t] || (this.textSpans[t] = {\n                        span: null,\n                        childSpan: null,\n                        glyph: null\n                    }), !h || !p || 0 === t) {\n                        if (n = y > t ? this.textSpans[t].span : createNS(h ? \"g\" : \"text\"), y <= t) {\n                            if (n.setAttribute(\"stroke-linecap\", \"butt\"), n.setAttribute(\"stroke-linejoin\", \"round\"), n.setAttribute(\"stroke-miterlimit\", \"4\"), this.textSpans[t].span = n, h) {\n                                var g = createNS(\"g\");\n                                n.appendChild(g), this.textSpans[t].childSpan = g;\n                            }\n                            this.textSpans[t].span = n, this.layerElement.appendChild(n);\n                        }\n                        n.style.display = \"inherit\";\n                    }\n                    if (l.reset(), p && (o[t].n && (f = -d, c += r.yOffset, c += m ? 1 : 0, m = !1), this.applyTextPropertiesToMatrix(r, l, o[t].line, f, c), f += o[t].l || 0, f += d), h) {\n                        var v;\n                        if (1 === (u = this.globalData.fontManager.getCharData(r.finalText[t], i.fStyle, this.globalData.fontManager.getFontByName(r.f).fFamily)).t) v = new SVGCompElement(u.data, this.globalData, this);\n                        else {\n                            var b = emptyShapeData;\n                            u.data && u.data.shapes && (b = this.buildShapeData(u.data, r.finalSize)), v = new SVGShapeElement(b, this.globalData, this);\n                        }\n                        if (this.textSpans[t].glyph) {\n                            var x = this.textSpans[t].glyph;\n                            this.textSpans[t].childSpan.removeChild(x.layerElement), x.destroy();\n                        }\n                        this.textSpans[t].glyph = v, v._debug = !0, v.prepareFrame(0), v.renderFrame(), this.textSpans[t].childSpan.appendChild(v.layerElement), 1 === u.t && this.textSpans[t].childSpan.setAttribute(\"transform\", \"scale(\" + r.finalSize / 100 + \",\" + r.finalSize / 100 + \")\");\n                    } else p && n.setAttribute(\"transform\", \"translate(\" + l.props[12] + \",\" + l.props[13] + \")\"), n.textContent = o[t].val, n.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n                }\n                p && n && n.setAttribute(\"d\", \"\");\n            } else {\n                var P = this.textContainer, E = \"start\";\n                switch(r.j){\n                    case 1:\n                        E = \"end\";\n                        break;\n                    case 2:\n                        E = \"middle\";\n                        break;\n                    default:\n                        E = \"start\";\n                }\n                P.setAttribute(\"text-anchor\", E), P.setAttribute(\"letter-spacing\", d);\n                var S = this.buildTextContents(r.finalText);\n                for(e = S.length, c = r.ps ? r.ps[1] + r.ascent : 0, t = 0; t < e; t += 1)(n = this.textSpans[t].span || createNS(\"tspan\")).textContent = S[t], n.setAttribute(\"x\", 0), n.setAttribute(\"y\", c), n.style.display = \"inherit\", P.appendChild(n), this.textSpans[t] || (this.textSpans[t] = {\n                    span: null,\n                    glyph: null\n                }), this.textSpans[t].span = n, c += r.finalLineHeight;\n                this.layerElement.appendChild(P);\n            }\n            for(; t < this.textSpans.length;)this.textSpans[t].span.style.display = \"none\", t += 1;\n            this._sizeChanged = !0;\n        }, SVGTextLottieElement.prototype.sourceRectAtTime = function() {\n            if (this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged) {\n                this._sizeChanged = !1;\n                var t = this.layerElement.getBBox();\n                this.bbox = {\n                    top: t.y,\n                    left: t.x,\n                    width: t.width,\n                    height: t.height\n                };\n            }\n            return this.bbox;\n        }, SVGTextLottieElement.prototype.getValue = function() {\n            var t, e, r = this.textSpans.length;\n            for(this.renderedFrame = this.comp.renderedFrame, t = 0; t < r; t += 1)(e = this.textSpans[t].glyph) && (e.prepareFrame(this.comp.renderedFrame - this.data.st), e._mdf && (this._mdf = !0));\n        }, SVGTextLottieElement.prototype.renderInnerContent = function() {\n            if ((!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {\n                var t, e;\n                this._sizeChanged = !0;\n                var r, i, a, s = this.textAnimator.renderedLetters, n = this.textProperty.currentData.l;\n                for(e = n.length, t = 0; t < e; t += 1)n[t].n || (r = s[t], i = this.textSpans[t].span, (a = this.textSpans[t].glyph) && a.renderFrame(), r._mdf.m && i.setAttribute(\"transform\", r.m), r._mdf.o && i.setAttribute(\"opacity\", r.o), r._mdf.sw && i.setAttribute(\"stroke-width\", r.sw), r._mdf.sc && i.setAttribute(\"stroke\", r.sc), r._mdf.fc && i.setAttribute(\"fill\", r.fc));\n            }\n        }, extendPrototype([\n            IImageElement\n        ], ISolidElement), ISolidElement.prototype.createContent = function() {\n            var t = createNS(\"rect\");\n            t.setAttribute(\"width\", this.data.sw), t.setAttribute(\"height\", this.data.sh), t.setAttribute(\"fill\", this.data.sc), this.layerElement.appendChild(t);\n        }, NullElement.prototype.prepareFrame = function(t) {\n            this.prepareProperties(t, !0);\n        }, NullElement.prototype.renderFrame = function() {}, NullElement.prototype.getBaseElement = function() {\n            return null;\n        }, NullElement.prototype.destroy = function() {}, NullElement.prototype.sourceRectAtTime = function() {}, NullElement.prototype.hide = function() {}, extendPrototype([\n            BaseElement,\n            TransformElement,\n            HierarchyElement,\n            FrameElement\n        ], NullElement), extendPrototype([\n            BaseRenderer\n        ], SVGRendererBase), SVGRendererBase.prototype.createNull = function(t) {\n            return new NullElement(t, this.globalData, this);\n        }, SVGRendererBase.prototype.createShape = function(t) {\n            return new SVGShapeElement(t, this.globalData, this);\n        }, SVGRendererBase.prototype.createText = function(t) {\n            return new SVGTextLottieElement(t, this.globalData, this);\n        }, SVGRendererBase.prototype.createImage = function(t) {\n            return new IImageElement(t, this.globalData, this);\n        }, SVGRendererBase.prototype.createSolid = function(t) {\n            return new ISolidElement(t, this.globalData, this);\n        }, SVGRendererBase.prototype.configAnimation = function(t) {\n            this.svgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\"), this.svgElement.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\"), this.renderConfig.viewBoxSize ? this.svgElement.setAttribute(\"viewBox\", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute(\"viewBox\", \"0 0 \" + t.w + \" \" + t.h), this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute(\"width\", t.w), this.svgElement.setAttribute(\"height\", t.h), this.svgElement.style.width = \"100%\", this.svgElement.style.height = \"100%\", this.svgElement.style.transform = \"translate3d(0,0,0)\", this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility), this.renderConfig.width && this.svgElement.setAttribute(\"width\", this.renderConfig.width), this.renderConfig.height && this.svgElement.setAttribute(\"height\", this.renderConfig.height), this.renderConfig.className && this.svgElement.setAttribute(\"class\", this.renderConfig.className), this.renderConfig.id && this.svgElement.setAttribute(\"id\", this.renderConfig.id), void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute(\"focusable\", this.renderConfig.focusable), this.svgElement.setAttribute(\"preserveAspectRatio\", this.renderConfig.preserveAspectRatio), this.animationItem.wrapper.appendChild(this.svgElement);\n            var e = this.globalData.defs;\n            this.setupGlobalData(t, e), this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.data = t;\n            var r = createNS(\"clipPath\"), i = createNS(\"rect\");\n            i.setAttribute(\"width\", t.w), i.setAttribute(\"height\", t.h), i.setAttribute(\"x\", 0), i.setAttribute(\"y\", 0);\n            var a = createElementID();\n            r.setAttribute(\"id\", a), r.appendChild(i), this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + a + \")\"), e.appendChild(r), this.layers = t.layers, this.elements = createSizedArray(t.layers.length);\n        }, SVGRendererBase.prototype.destroy = function() {\n            var t;\n            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = \"\"), this.layerElement = null, this.globalData.defs = null;\n            var e = this.layers ? this.layers.length : 0;\n            for(t = 0; t < e; t += 1)this.elements[t] && this.elements[t].destroy();\n            this.elements.length = 0, this.destroyed = !0, this.animationItem = null;\n        }, SVGRendererBase.prototype.updateContainerSize = function() {}, SVGRendererBase.prototype.findIndexByInd = function(t) {\n            var e = 0, r = this.layers.length;\n            for(e = 0; e < r; e += 1)if (this.layers[e].ind === t) return e;\n            return -1;\n        }, SVGRendererBase.prototype.buildItem = function(t) {\n            var e = this.elements;\n            if (!e[t] && 99 !== this.layers[t].ty) {\n                e[t] = !0;\n                var r = this.createItem(this.layers[t]);\n                if (e[t] = r, getExpressionsPlugin() && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(r), r.initExpressions()), this.appendElementInPos(r, t), this.layers[t].tt) {\n                    var i = \"tp\" in this.layers[t] ? this.findIndexByInd(this.layers[t].tp) : t - 1;\n                    if (-1 === i) return;\n                    if (this.elements[i] && !0 !== this.elements[i]) {\n                        var a = e[i].getMatte(this.layers[t].tt);\n                        r.setMatte(a);\n                    } else this.buildItem(i), this.addPendingElement(r);\n                }\n            }\n        }, SVGRendererBase.prototype.checkPendingElements = function() {\n            for(; this.pendingElements.length;){\n                var t = this.pendingElements.pop();\n                if (t.checkParenting(), t.data.tt) for(var e = 0, r = this.elements.length; e < r;){\n                    if (this.elements[e] === t) {\n                        var i = \"tp\" in t.data ? this.findIndexByInd(t.data.tp) : e - 1, a = this.elements[i].getMatte(this.layers[e].tt);\n                        t.setMatte(a);\n                        break;\n                    }\n                    e += 1;\n                }\n            }\n        }, SVGRendererBase.prototype.renderFrame = function(t) {\n            if (this.renderedFrame !== t && !this.destroyed) {\n                var e;\n                null === t ? t = this.renderedFrame : this.renderedFrame = t, this.globalData.frameNum = t, this.globalData.frameId += 1, this.globalData.projectInterface.currentFrame = t, this.globalData._mdf = !1;\n                var r = this.layers.length;\n                for(this.completeLayers || this.checkLayers(t), e = r - 1; e >= 0; e -= 1)(this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);\n                if (this.globalData._mdf) for(e = 0; e < r; e += 1)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();\n            }\n        }, SVGRendererBase.prototype.appendElementInPos = function(t, e) {\n            var r = t.getBaseElement();\n            if (r) {\n                for(var i, a = 0; a < e;)this.elements[a] && !0 !== this.elements[a] && this.elements[a].getBaseElement() && (i = this.elements[a].getBaseElement()), a += 1;\n                i ? this.layerElement.insertBefore(r, i) : this.layerElement.appendChild(r);\n            }\n        }, SVGRendererBase.prototype.hide = function() {\n            this.layerElement.style.display = \"none\";\n        }, SVGRendererBase.prototype.show = function() {\n            this.layerElement.style.display = \"block\";\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableDOMElement\n        ], ICompElement), ICompElement.prototype.initElement = function(t, e, r) {\n            this.initFrame(), this.initBaseData(t, e, r), this.initTransform(t, e, r), this.initRenderable(), this.initHierarchy(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), !this.data.xt && e.progressiveLoad || this.buildAllItems(), this.hide();\n        }, ICompElement.prototype.prepareFrame = function(t) {\n            if (this._mdf = !1, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt) {\n                if (this.tm._placeholder) this.renderedFrame = t / this.data.sr;\n                else {\n                    var e = this.tm.v;\n                    e === this.data.op && (e = this.data.op - 1), this.renderedFrame = e;\n                }\n                var r, i = this.elements.length;\n                for(this.completeLayers || this.checkLayers(this.renderedFrame), r = i - 1; r >= 0; r -= 1)(this.completeLayers || this.elements[r]) && (this.elements[r].prepareFrame(this.renderedFrame - this.layers[r].st), this.elements[r]._mdf && (this._mdf = !0));\n            }\n        }, ICompElement.prototype.renderInnerContent = function() {\n            var t, e = this.layers.length;\n            for(t = 0; t < e; t += 1)(this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();\n        }, ICompElement.prototype.setElements = function(t) {\n            this.elements = t;\n        }, ICompElement.prototype.getElements = function() {\n            return this.elements;\n        }, ICompElement.prototype.destroyElements = function() {\n            var t, e = this.layers.length;\n            for(t = 0; t < e; t += 1)this.elements[t] && this.elements[t].destroy();\n        }, ICompElement.prototype.destroy = function() {\n            this.destroyElements(), this.destroyBaseElement();\n        }, extendPrototype([\n            SVGRendererBase,\n            ICompElement,\n            SVGBaseElement\n        ], SVGCompElement), SVGCompElement.prototype.createComp = function(t) {\n            return new SVGCompElement(t, this.globalData, this);\n        }, extendPrototype([\n            SVGRendererBase\n        ], SVGRenderer), SVGRenderer.prototype.createComp = function(t) {\n            return new SVGCompElement(t, this.globalData, this);\n        }, CVContextData.prototype.duplicate = function() {\n            var t = 2 * this._length, e = this.savedOp;\n            this.savedOp = createTypedArray(\"float32\", t), this.savedOp.set(e);\n            var r = 0;\n            for(r = this._length; r < t; r += 1)this.saved[r] = createTypedArray(\"float32\", 16);\n            this._length = t;\n        }, CVContextData.prototype.reset = function() {\n            this.cArrPos = 0, this.cTr.reset(), this.cO = 1;\n        }, CVContextData.prototype.popTransform = function() {\n            var t, e = this.saved[this.cArrPos], r = this.cTr.props;\n            for(t = 0; t < 16; t += 1)r[t] = e[t];\n            return e;\n        }, CVContextData.prototype.popOpacity = function() {\n            var t = this.savedOp[this.cArrPos];\n            return this.cO = t, t;\n        }, CVContextData.prototype.pop = function() {\n            return this.cArrPos -= 1, {\n                transform: this.popTransform(),\n                opacity: this.popOpacity()\n            };\n        }, CVContextData.prototype.push = function() {\n            var t, e = this.cTr.props;\n            this._length <= this.cArrPos && this.duplicate();\n            var r = this.saved[this.cArrPos];\n            for(t = 0; t < 16; t += 1)r[t] = e[t];\n            this.savedOp[this.cArrPos] = this.cO, this.cArrPos += 1;\n        }, CVContextData.prototype.getTransform = function() {\n            return this.cTr;\n        }, CVContextData.prototype.getOpacity = function() {\n            return this.cO;\n        }, CVContextData.prototype.setOpacity = function(t) {\n            this.cO = t;\n        }, ShapeTransformManager.prototype = {\n            addTransformSequence: function(t) {\n                var e, r = t.length, i = \"_\";\n                for(e = 0; e < r; e += 1)i += t[e].transform.key + \"_\";\n                var a = this.sequences[i];\n                return a || (a = {\n                    transforms: [].concat(t),\n                    finalTransform: new Matrix,\n                    _mdf: !1\n                }, this.sequences[i] = a, this.sequenceList.push(a)), a;\n            },\n            processSequence: function(t, e) {\n                for(var r, i = 0, a = t.transforms.length, s = e; i < a && !e;){\n                    if (t.transforms[i].transform.mProps._mdf) {\n                        s = !0;\n                        break;\n                    }\n                    i += 1;\n                }\n                if (s) for(t.finalTransform.reset(), i = a - 1; i >= 0; i -= 1)r = t.transforms[i].transform.mProps.v.props, t.finalTransform.transform(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8], r[9], r[10], r[11], r[12], r[13], r[14], r[15]);\n                t._mdf = s;\n            },\n            processSequences: function(t) {\n                var e, r = this.sequenceList.length;\n                for(e = 0; e < r; e += 1)this.processSequence(this.sequenceList[e], t);\n            },\n            getNewKey: function() {\n                return this.transform_key_count += 1, \"_\" + this.transform_key_count;\n            }\n        };\n        var lumaLoader = function() {\n            var t = \"__lottie_element_luma_buffer\", e = null, r = null, i = null;\n            function a() {\n                var a, s, n;\n                e || (a = createNS(\"svg\"), s = createNS(\"filter\"), n = createNS(\"feColorMatrix\"), s.setAttribute(\"id\", t), n.setAttribute(\"type\", \"matrix\"), n.setAttribute(\"color-interpolation-filters\", \"sRGB\"), n.setAttribute(\"values\", \"0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0\"), s.appendChild(n), a.appendChild(s), a.setAttribute(\"id\", t + \"_svg\"), featureSupport.svgLumaHidden && (a.style.display = \"none\"), i = a, document.body.appendChild(i), e = createTag(\"canvas\"), (r = e.getContext(\"2d\")).filter = \"url(#\" + t + \")\", r.fillStyle = \"rgba(0,0,0,0)\", r.fillRect(0, 0, 1, 1));\n            }\n            return {\n                load: a,\n                get: function(i) {\n                    return e || a(), e.width = i.width, e.height = i.height, r.filter = \"url(#\" + t + \")\", e;\n                }\n            };\n        };\n        function createCanvas(t, e) {\n            if (featureSupport.offscreenCanvas) return new OffscreenCanvas(t, e);\n            var r = createTag(\"canvas\");\n            return r.width = t, r.height = e, r;\n        }\n        var assetLoader = {\n            loadLumaCanvas: lumaLoader.load,\n            getLumaCanvas: lumaLoader.get,\n            createCanvas: createCanvas\n        };\n        function CVEffects() {}\n        function CVMaskElement(t, e) {\n            var r;\n            this.data = t, this.element = e, this.masksProperties = this.data.masksProperties || [], this.viewData = createSizedArray(this.masksProperties.length);\n            var i = this.masksProperties.length, a = !1;\n            for(r = 0; r < i; r += 1)\"n\" !== this.masksProperties[r].mode && (a = !0), this.viewData[r] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[r], 3);\n            this.hasMasks = a, a && this.element.addRenderableComponent(this);\n        }\n        function CVBaseElement() {}\n        CVEffects.prototype.renderFrame = function() {}, CVMaskElement.prototype.renderFrame = function() {\n            if (this.hasMasks) {\n                var t, e, r, i, a = this.element.finalTransform.mat, s = this.element.canvasContext, n = this.masksProperties.length;\n                for(s.beginPath(), t = 0; t < n; t += 1)if (\"n\" !== this.masksProperties[t].mode) {\n                    var o;\n                    this.masksProperties[t].inv && (s.moveTo(0, 0), s.lineTo(this.element.globalData.compSize.w, 0), s.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h), s.lineTo(0, this.element.globalData.compSize.h), s.lineTo(0, 0)), i = this.viewData[t].v, e = a.applyToPointArray(i.v[0][0], i.v[0][1], 0), s.moveTo(e[0], e[1]);\n                    var h = i._length;\n                    for(o = 1; o < h; o += 1)r = a.applyToTriplePoints(i.o[o - 1], i.i[o], i.v[o]), s.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5]);\n                    r = a.applyToTriplePoints(i.o[o - 1], i.i[0], i.v[0]), s.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5]);\n                }\n                this.element.globalData.renderer.save(!0), s.clip();\n            }\n        }, CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty, CVMaskElement.prototype.destroy = function() {\n            this.element = null;\n        };\n        var operationsMap = {\n            1: \"source-in\",\n            2: \"source-out\",\n            3: \"source-in\",\n            4: \"source-out\"\n        };\n        function CVShapeData(t, e, r, i) {\n            this.styledShapes = [], this.tr = [\n                0,\n                0,\n                0,\n                0,\n                0,\n                0\n            ];\n            var a, s = 4;\n            \"rc\" === e.ty ? s = 5 : \"el\" === e.ty ? s = 6 : \"sr\" === e.ty && (s = 7), this.sh = ShapePropertyFactory.getShapeProp(t, e, s, t);\n            var n, o = r.length;\n            for(a = 0; a < o; a += 1)r[a].closed || (n = {\n                transforms: i.addTransformSequence(r[a].transforms),\n                trNodes: []\n            }, this.styledShapes.push(n), r[a].elements.push(n));\n        }\n        function CVShapeElement(t, e, r) {\n            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.itemsData = [], this.prevViewData = [], this.shapeModifiers = [], this.processedElements = [], this.transformsManager = new ShapeTransformManager, this.initElement(t, e, r);\n        }\n        function CVTextElement(t, e, r) {\n            this.textSpans = [], this.yOffset = 0, this.fillColorAnim = !1, this.strokeColorAnim = !1, this.strokeWidthAnim = !1, this.stroke = !1, this.fill = !1, this.justifyOffset = 0, this.currentRender = null, this.renderType = \"canvas\", this.values = {\n                fill: \"rgba(0,0,0,0)\",\n                stroke: \"rgba(0,0,0,0)\",\n                sWidth: 0,\n                fValue: \"\"\n            }, this.initElement(t, e, r);\n        }\n        function CVImageElement(t, e, r) {\n            this.assetData = e.getAssetData(t.refId), this.img = e.imageLoader.getAsset(this.assetData), this.initElement(t, e, r);\n        }\n        function CVSolidElement(t, e, r) {\n            this.initElement(t, e, r);\n        }\n        function CanvasRendererBase(t, e) {\n            this.animationItem = t, this.renderConfig = {\n                clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,\n                context: e && e.context || null,\n                progressiveLoad: e && e.progressiveLoad || !1,\n                preserveAspectRatio: e && e.preserveAspectRatio || \"xMidYMid meet\",\n                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || \"xMidYMid slice\",\n                contentVisibility: e && e.contentVisibility || \"visible\",\n                className: e && e.className || \"\",\n                id: e && e.id || \"\"\n            }, this.renderConfig.dpr = e && e.dpr || 1, this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1), this.renderedFrame = -1, this.globalData = {\n                frameNum: -1,\n                _mdf: !1,\n                renderConfig: this.renderConfig,\n                currentGlobalAlpha: -1\n            }, this.contextData = new CVContextData, this.elements = [], this.pendingElements = [], this.transformMat = new Matrix, this.completeLayers = !1, this.rendererType = \"canvas\";\n        }\n        function CVCompElement(t, e, r) {\n            this.completeLayers = !1, this.layers = t.layers, this.pendingElements = [], this.elements = createSizedArray(this.layers.length), this.initElement(t, e, r), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {\n                _placeholder: !0\n            };\n        }\n        function CanvasRenderer(t, e) {\n            this.animationItem = t, this.renderConfig = {\n                clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,\n                context: e && e.context || null,\n                progressiveLoad: e && e.progressiveLoad || !1,\n                preserveAspectRatio: e && e.preserveAspectRatio || \"xMidYMid meet\",\n                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || \"xMidYMid slice\",\n                contentVisibility: e && e.contentVisibility || \"visible\",\n                className: e && e.className || \"\",\n                id: e && e.id || \"\",\n                runExpressions: !e || void 0 === e.runExpressions || e.runExpressions\n            }, this.renderConfig.dpr = e && e.dpr || 1, this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1), this.renderedFrame = -1, this.globalData = {\n                frameNum: -1,\n                _mdf: !1,\n                renderConfig: this.renderConfig,\n                currentGlobalAlpha: -1\n            }, this.contextData = new CVContextData, this.elements = [], this.pendingElements = [], this.transformMat = new Matrix, this.completeLayers = !1, this.rendererType = \"canvas\";\n        }\n        function HBaseElement() {}\n        function HSolidElement(t, e, r) {\n            this.initElement(t, e, r);\n        }\n        function HShapeElement(t, e, r) {\n            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.shapesContainer = createNS(\"g\"), this.initElement(t, e, r), this.prevViewData = [], this.currentBBox = {\n                x: 999999,\n                y: -999999,\n                h: 0,\n                w: 0\n            };\n        }\n        function HTextElement(t, e, r) {\n            this.textSpans = [], this.textPaths = [], this.currentBBox = {\n                x: 999999,\n                y: -999999,\n                h: 0,\n                w: 0\n            }, this.renderType = \"svg\", this.isMasked = !1, this.initElement(t, e, r);\n        }\n        function HCameraElement(t, e, r) {\n            this.initFrame(), this.initBaseData(t, e, r), this.initHierarchy();\n            var i = PropertyFactory.getProp;\n            if (this.pe = i(this, t.pe, 0, 0, this), t.ks.p.s ? (this.px = i(this, t.ks.p.x, 1, 0, this), this.py = i(this, t.ks.p.y, 1, 0, this), this.pz = i(this, t.ks.p.z, 1, 0, this)) : this.p = i(this, t.ks.p, 1, 0, this), t.ks.a && (this.a = i(this, t.ks.a, 1, 0, this)), t.ks.or.k.length && t.ks.or.k[0].to) {\n                var a, s = t.ks.or.k.length;\n                for(a = 0; a < s; a += 1)t.ks.or.k[a].to = null, t.ks.or.k[a].ti = null;\n            }\n            this.or = i(this, t.ks.or, 1, degToRads, this), this.or.sh = !0, this.rx = i(this, t.ks.rx, 0, degToRads, this), this.ry = i(this, t.ks.ry, 0, degToRads, this), this.rz = i(this, t.ks.rz, 0, degToRads, this), this.mat = new Matrix, this._prevMat = new Matrix, this._isFirstFrame = !0, this.finalTransform = {\n                mProp: this\n            };\n        }\n        function HImageElement(t, e, r) {\n            this.assetData = e.getAssetData(t.refId), this.initElement(t, e, r);\n        }\n        function HybridRendererBase(t, e) {\n            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.renderConfig = {\n                className: e && e.className || \"\",\n                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || \"xMidYMid slice\",\n                hideOnTransparent: !(e && !1 === e.hideOnTransparent),\n                filterSize: {\n                    width: e && e.filterSize && e.filterSize.width || \"400%\",\n                    height: e && e.filterSize && e.filterSize.height || \"400%\",\n                    x: e && e.filterSize && e.filterSize.x || \"-100%\",\n                    y: e && e.filterSize && e.filterSize.y || \"-100%\"\n                }\n            }, this.globalData = {\n                _mdf: !1,\n                frameNum: -1,\n                renderConfig: this.renderConfig\n            }, this.pendingElements = [], this.elements = [], this.threeDElements = [], this.destroyed = !1, this.camera = null, this.supports3d = !0, this.rendererType = \"html\";\n        }\n        function HCompElement(t, e, r) {\n            this.layers = t.layers, this.supports3d = !t.hasMask, this.completeLayers = !1, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, r), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {\n                _placeholder: !0\n            };\n        }\n        function HybridRenderer(t, e) {\n            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.renderConfig = {\n                className: e && e.className || \"\",\n                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || \"xMidYMid slice\",\n                hideOnTransparent: !(e && !1 === e.hideOnTransparent),\n                filterSize: {\n                    width: e && e.filterSize && e.filterSize.width || \"400%\",\n                    height: e && e.filterSize && e.filterSize.height || \"400%\",\n                    x: e && e.filterSize && e.filterSize.x || \"-100%\",\n                    y: e && e.filterSize && e.filterSize.y || \"-100%\"\n                },\n                runExpressions: !e || void 0 === e.runExpressions || e.runExpressions\n            }, this.globalData = {\n                _mdf: !1,\n                frameNum: -1,\n                renderConfig: this.renderConfig\n            }, this.pendingElements = [], this.elements = [], this.threeDElements = [], this.destroyed = !1, this.camera = null, this.supports3d = !0, this.rendererType = \"html\";\n        }\n        CVBaseElement.prototype = {\n            createElements: function() {},\n            initRendererElement: function() {},\n            createContainerElements: function() {\n                if (this.data.tt >= 1) {\n                    this.buffers = [];\n                    var t = this.globalData.canvasContext, e = assetLoader.createCanvas(t.canvas.width, t.canvas.height);\n                    this.buffers.push(e);\n                    var r = assetLoader.createCanvas(t.canvas.width, t.canvas.height);\n                    this.buffers.push(r), this.data.tt >= 3 && !document._isProxy && assetLoader.loadLumaCanvas();\n                }\n                this.canvasContext = this.globalData.canvasContext, this.transformCanvas = this.globalData.transformCanvas, this.renderableEffectsManager = new CVEffects(this);\n            },\n            createContent: function() {},\n            setBlendMode: function() {\n                var t = this.globalData;\n                if (t.blendMode !== this.data.bm) {\n                    t.blendMode = this.data.bm;\n                    var e = getBlendMode(this.data.bm);\n                    t.canvasContext.globalCompositeOperation = e;\n                }\n            },\n            createRenderableComponents: function() {\n                this.maskManager = new CVMaskElement(this.data, this);\n            },\n            hideElement: function() {\n                this.hidden || this.isInRange && !this.isTransparent || (this.hidden = !0);\n            },\n            showElement: function() {\n                this.isInRange && !this.isTransparent && (this.hidden = !1, this._isFirstFrame = !0, this.maskManager._isFirstFrame = !0);\n            },\n            clearCanvas: function(t) {\n                t.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);\n            },\n            prepareLayer: function() {\n                if (this.data.tt >= 1) {\n                    var t = this.buffers[0].getContext(\"2d\");\n                    this.clearCanvas(t), t.drawImage(this.canvasContext.canvas, 0, 0), this.currentTransform = this.canvasContext.getTransform(), this.canvasContext.setTransform(1, 0, 0, 1, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.setTransform(this.currentTransform);\n                }\n            },\n            exitLayer: function() {\n                if (this.data.tt >= 1) {\n                    var t = this.buffers[1], e = t.getContext(\"2d\");\n                    if (this.clearCanvas(e), e.drawImage(this.canvasContext.canvas, 0, 0), this.canvasContext.setTransform(1, 0, 0, 1, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.setTransform(this.currentTransform), this.comp.getElementById(\"tp\" in this.data ? this.data.tp : this.data.ind - 1).renderFrame(!0), this.canvasContext.setTransform(1, 0, 0, 1, 0, 0), this.data.tt >= 3 && !document._isProxy) {\n                        var r = assetLoader.getLumaCanvas(this.canvasContext.canvas);\n                        r.getContext(\"2d\").drawImage(this.canvasContext.canvas, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.drawImage(r, 0, 0);\n                    }\n                    this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt], this.canvasContext.drawImage(t, 0, 0), this.canvasContext.globalCompositeOperation = \"destination-over\", this.canvasContext.drawImage(this.buffers[0], 0, 0), this.canvasContext.setTransform(this.currentTransform), this.canvasContext.globalCompositeOperation = \"source-over\";\n                }\n            },\n            renderFrame: function(t) {\n                if (!this.hidden && !this.data.hd && (1 !== this.data.td || t)) {\n                    this.renderTransform(), this.renderRenderable(), this.setBlendMode();\n                    var e = 0 === this.data.ty;\n                    this.prepareLayer(), this.globalData.renderer.save(e), this.globalData.renderer.ctxTransform(this.finalTransform.mat.props), this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v), this.renderInnerContent(), this.globalData.renderer.restore(e), this.exitLayer(), this.maskManager.hasMasks && this.globalData.renderer.restore(!0), this._isFirstFrame && (this._isFirstFrame = !1);\n                }\n            },\n            destroy: function() {\n                this.canvasContext = null, this.data = null, this.globalData = null, this.maskManager.destroy();\n            },\n            mHelper: new Matrix\n        }, CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement, CVBaseElement.prototype.show = CVBaseElement.prototype.showElement, CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated, extendPrototype([\n            BaseElement,\n            TransformElement,\n            CVBaseElement,\n            IShapeElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableElement\n        ], CVShapeElement), CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement, CVShapeElement.prototype.transformHelper = {\n            opacity: 1,\n            _opMdf: !1\n        }, CVShapeElement.prototype.dashResetter = [], CVShapeElement.prototype.createContent = function() {\n            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []);\n        }, CVShapeElement.prototype.createStyleElement = function(t, e) {\n            var r = {\n                data: t,\n                type: t.ty,\n                preTransforms: this.transformsManager.addTransformSequence(e),\n                transforms: [],\n                elements: [],\n                closed: !0 === t.hd\n            }, i = {};\n            if (\"fl\" === t.ty || \"st\" === t.ty ? (i.c = PropertyFactory.getProp(this, t.c, 1, 255, this), i.c.k || (r.co = \"rgb(\" + bmFloor(i.c.v[0]) + \",\" + bmFloor(i.c.v[1]) + \",\" + bmFloor(i.c.v[2]) + \")\")) : \"gf\" !== t.ty && \"gs\" !== t.ty || (i.s = PropertyFactory.getProp(this, t.s, 1, null, this), i.e = PropertyFactory.getProp(this, t.e, 1, null, this), i.h = PropertyFactory.getProp(this, t.h || {\n                k: 0\n            }, 0, .01, this), i.a = PropertyFactory.getProp(this, t.a || {\n                k: 0\n            }, 0, degToRads, this), i.g = new GradientProperty(this, t.g, this)), i.o = PropertyFactory.getProp(this, t.o, 0, .01, this), \"st\" === t.ty || \"gs\" === t.ty) {\n                if (r.lc = lineCapEnum[t.lc || 2], r.lj = lineJoinEnum[t.lj || 2], 1 == t.lj && (r.ml = t.ml), i.w = PropertyFactory.getProp(this, t.w, 0, null, this), i.w.k || (r.wi = i.w.v), t.d) {\n                    var a = new DashProperty(this, t.d, \"canvas\", this);\n                    i.d = a, i.d.k || (r.da = i.d.dashArray, r.do = i.d.dashoffset[0]);\n                }\n            } else r.r = 2 === t.r ? \"evenodd\" : \"nonzero\";\n            return this.stylesList.push(r), i.style = r, i;\n        }, CVShapeElement.prototype.createGroupElement = function() {\n            return {\n                it: [],\n                prevViewData: []\n            };\n        }, CVShapeElement.prototype.createTransformElement = function(t) {\n            return {\n                transform: {\n                    opacity: 1,\n                    _opMdf: !1,\n                    key: this.transformsManager.getNewKey(),\n                    op: PropertyFactory.getProp(this, t.o, 0, .01, this),\n                    mProps: TransformPropertyFactory.getTransformProperty(this, t, this)\n                }\n            };\n        }, CVShapeElement.prototype.createShapeElement = function(t) {\n            var e = new CVShapeData(this, t, this.stylesList, this.transformsManager);\n            return this.shapes.push(e), this.addShapeToModifiers(e), e;\n        }, CVShapeElement.prototype.reloadShapes = function() {\n            var t;\n            this._isFirstFrame = !0;\n            var e = this.itemsData.length;\n            for(t = 0; t < e; t += 1)this.prevViewData[t] = this.itemsData[t];\n            for(this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []), e = this.dynamicProperties.length, t = 0; t < e; t += 1)this.dynamicProperties[t].getValue();\n            this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame);\n        }, CVShapeElement.prototype.addTransformToStyleList = function(t) {\n            var e, r = this.stylesList.length;\n            for(e = 0; e < r; e += 1)this.stylesList[e].closed || this.stylesList[e].transforms.push(t);\n        }, CVShapeElement.prototype.removeTransformFromStyleList = function() {\n            var t, e = this.stylesList.length;\n            for(t = 0; t < e; t += 1)this.stylesList[t].closed || this.stylesList[t].transforms.pop();\n        }, CVShapeElement.prototype.closeStyles = function(t) {\n            var e, r = t.length;\n            for(e = 0; e < r; e += 1)t[e].closed = !0;\n        }, CVShapeElement.prototype.searchShapes = function(t, e, r, i, a) {\n            var s, n, o, h, l, p, f = t.length - 1, c = [], m = [], d = [].concat(a);\n            for(s = f; s >= 0; s -= 1){\n                if ((h = this.searchProcessedElement(t[s])) ? e[s] = r[h - 1] : t[s]._shouldRender = i, \"fl\" === t[s].ty || \"st\" === t[s].ty || \"gf\" === t[s].ty || \"gs\" === t[s].ty) h ? e[s].style.closed = !1 : e[s] = this.createStyleElement(t[s], d), c.push(e[s].style);\n                else if (\"gr\" === t[s].ty) {\n                    if (h) for(o = e[s].it.length, n = 0; n < o; n += 1)e[s].prevViewData[n] = e[s].it[n];\n                    else e[s] = this.createGroupElement(t[s]);\n                    this.searchShapes(t[s].it, e[s].it, e[s].prevViewData, i, d);\n                } else \"tr\" === t[s].ty ? (h || (p = this.createTransformElement(t[s]), e[s] = p), d.push(e[s]), this.addTransformToStyleList(e[s])) : \"sh\" === t[s].ty || \"rc\" === t[s].ty || \"el\" === t[s].ty || \"sr\" === t[s].ty ? h || (e[s] = this.createShapeElement(t[s])) : \"tm\" === t[s].ty || \"rd\" === t[s].ty || \"pb\" === t[s].ty || \"zz\" === t[s].ty || \"op\" === t[s].ty ? (h ? (l = e[s]).closed = !1 : ((l = ShapeModifiers.getModifier(t[s].ty)).init(this, t[s]), e[s] = l, this.shapeModifiers.push(l)), m.push(l)) : \"rp\" === t[s].ty && (h ? (l = e[s]).closed = !0 : (l = ShapeModifiers.getModifier(t[s].ty), e[s] = l, l.init(this, t, s, e), this.shapeModifiers.push(l), i = !1), m.push(l));\n                this.addProcessedElement(t[s], s + 1);\n            }\n            for(this.removeTransformFromStyleList(), this.closeStyles(c), f = m.length, s = 0; s < f; s += 1)m[s].closed = !0;\n        }, CVShapeElement.prototype.renderInnerContent = function() {\n            this.transformHelper.opacity = 1, this.transformHelper._opMdf = !1, this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame), this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0);\n        }, CVShapeElement.prototype.renderShapeTransform = function(t, e) {\n            (t._opMdf || e.op._mdf || this._isFirstFrame) && (e.opacity = t.opacity, e.opacity *= e.op.v, e._opMdf = !0);\n        }, CVShapeElement.prototype.drawLayer = function() {\n            var t, e, r, i, a, s, n, o, h, l = this.stylesList.length, p = this.globalData.renderer, f = this.globalData.canvasContext;\n            for(t = 0; t < l; t += 1)if ((\"st\" !== (o = (h = this.stylesList[t]).type) && \"gs\" !== o || 0 !== h.wi) && h.data._shouldRender && 0 !== h.coOp && 0 !== this.globalData.currentGlobalAlpha) {\n                for(p.save(), s = h.elements, \"st\" === o || \"gs\" === o ? (f.strokeStyle = \"st\" === o ? h.co : h.grd, f.lineWidth = h.wi, f.lineCap = h.lc, f.lineJoin = h.lj, f.miterLimit = h.ml || 0) : f.fillStyle = \"fl\" === o ? h.co : h.grd, p.ctxOpacity(h.coOp), \"st\" !== o && \"gs\" !== o && f.beginPath(), p.ctxTransform(h.preTransforms.finalTransform.props), r = s.length, e = 0; e < r; e += 1){\n                    for(\"st\" !== o && \"gs\" !== o || (f.beginPath(), h.da && (f.setLineDash(h.da), f.lineDashOffset = h.do)), a = (n = s[e].trNodes).length, i = 0; i < a; i += 1)\"m\" === n[i].t ? f.moveTo(n[i].p[0], n[i].p[1]) : \"c\" === n[i].t ? f.bezierCurveTo(n[i].pts[0], n[i].pts[1], n[i].pts[2], n[i].pts[3], n[i].pts[4], n[i].pts[5]) : f.closePath();\n                    \"st\" !== o && \"gs\" !== o || (f.stroke(), h.da && f.setLineDash(this.dashResetter));\n                }\n                \"st\" !== o && \"gs\" !== o && f.fill(h.r), p.restore();\n            }\n        }, CVShapeElement.prototype.renderShape = function(t, e, r, i) {\n            var a, s;\n            for(s = t, a = e.length - 1; a >= 0; a -= 1)\"tr\" === e[a].ty ? (s = r[a].transform, this.renderShapeTransform(t, s)) : \"sh\" === e[a].ty || \"el\" === e[a].ty || \"rc\" === e[a].ty || \"sr\" === e[a].ty ? this.renderPath(e[a], r[a]) : \"fl\" === e[a].ty ? this.renderFill(e[a], r[a], s) : \"st\" === e[a].ty ? this.renderStroke(e[a], r[a], s) : \"gf\" === e[a].ty || \"gs\" === e[a].ty ? this.renderGradientFill(e[a], r[a], s) : \"gr\" === e[a].ty ? this.renderShape(s, e[a].it, r[a].it) : e[a].ty;\n            i && this.drawLayer();\n        }, CVShapeElement.prototype.renderStyledShape = function(t, e) {\n            if (this._isFirstFrame || e._mdf || t.transforms._mdf) {\n                var r, i, a, s = t.trNodes, n = e.paths, o = n._length;\n                s.length = 0;\n                var h = t.transforms.finalTransform;\n                for(a = 0; a < o; a += 1){\n                    var l = n.shapes[a];\n                    if (l && l.v) {\n                        for(i = l._length, r = 1; r < i; r += 1)1 === r && s.push({\n                            t: \"m\",\n                            p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0)\n                        }), s.push({\n                            t: \"c\",\n                            pts: h.applyToTriplePoints(l.o[r - 1], l.i[r], l.v[r])\n                        });\n                        1 === i && s.push({\n                            t: \"m\",\n                            p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0)\n                        }), l.c && i && (s.push({\n                            t: \"c\",\n                            pts: h.applyToTriplePoints(l.o[r - 1], l.i[0], l.v[0])\n                        }), s.push({\n                            t: \"z\"\n                        }));\n                    }\n                }\n                t.trNodes = s;\n            }\n        }, CVShapeElement.prototype.renderPath = function(t, e) {\n            if (!0 !== t.hd && t._shouldRender) {\n                var r, i = e.styledShapes.length;\n                for(r = 0; r < i; r += 1)this.renderStyledShape(e.styledShapes[r], e.sh);\n            }\n        }, CVShapeElement.prototype.renderFill = function(t, e, r) {\n            var i = e.style;\n            (e.c._mdf || this._isFirstFrame) && (i.co = \"rgb(\" + bmFloor(e.c.v[0]) + \",\" + bmFloor(e.c.v[1]) + \",\" + bmFloor(e.c.v[2]) + \")\"), (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity);\n        }, CVShapeElement.prototype.renderGradientFill = function(t, e, r) {\n            var i, a = e.style;\n            if (!a.grd || e.g._mdf || e.s._mdf || e.e._mdf || 1 !== t.t && (e.h._mdf || e.a._mdf)) {\n                var s, n = this.globalData.canvasContext, o = e.s.v, h = e.e.v;\n                if (1 === t.t) i = n.createLinearGradient(o[0], o[1], h[0], h[1]);\n                else {\n                    var l = Math.sqrt(Math.pow(o[0] - h[0], 2) + Math.pow(o[1] - h[1], 2)), p = Math.atan2(h[1] - o[1], h[0] - o[0]), f = e.h.v;\n                    f >= 1 ? f = .99 : f <= -1 && (f = -.99);\n                    var c = l * f, m = Math.cos(p + e.a.v) * c + o[0], d = Math.sin(p + e.a.v) * c + o[1];\n                    i = n.createRadialGradient(m, d, 0, o[0], o[1], l);\n                }\n                var u = t.g.p, y = e.g.c, g = 1;\n                for(s = 0; s < u; s += 1)e.g._hasOpacity && e.g._collapsable && (g = e.g.o[2 * s + 1]), i.addColorStop(y[4 * s] / 100, \"rgba(\" + y[4 * s + 1] + \",\" + y[4 * s + 2] + \",\" + y[4 * s + 3] + \",\" + g + \")\");\n                a.grd = i;\n            }\n            a.coOp = e.o.v * r.opacity;\n        }, CVShapeElement.prototype.renderStroke = function(t, e, r) {\n            var i = e.style, a = e.d;\n            a && (a._mdf || this._isFirstFrame) && (i.da = a.dashArray, i.do = a.dashoffset[0]), (e.c._mdf || this._isFirstFrame) && (i.co = \"rgb(\" + bmFloor(e.c.v[0]) + \",\" + bmFloor(e.c.v[1]) + \",\" + bmFloor(e.c.v[2]) + \")\"), (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity), (e.w._mdf || this._isFirstFrame) && (i.wi = e.w.v);\n        }, CVShapeElement.prototype.destroy = function() {\n            this.shapesData = null, this.globalData = null, this.canvasContext = null, this.stylesList.length = 0, this.itemsData.length = 0;\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            CVBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableElement,\n            ITextElement\n        ], CVTextElement), CVTextElement.prototype.tHelper = createTag(\"canvas\").getContext(\"2d\"), CVTextElement.prototype.buildNewText = function() {\n            var t = this.textProperty.currentData;\n            this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);\n            var e = !1;\n            t.fc ? (e = !0, this.values.fill = this.buildColor(t.fc)) : this.values.fill = \"rgba(0,0,0,0)\", this.fill = e;\n            var r = !1;\n            t.sc && (r = !0, this.values.stroke = this.buildColor(t.sc), this.values.sWidth = t.sw);\n            var i, a, s, n, o, h, l, p, f, c, m, d, u = this.globalData.fontManager.getFontByName(t.f), y = t.l, g = this.mHelper;\n            this.stroke = r, this.values.fValue = t.finalSize + \"px \" + this.globalData.fontManager.getFontByName(t.f).fFamily, a = t.finalText.length;\n            var v = this.data.singleShape, b = .001 * t.tr * t.finalSize, x = 0, P = 0, E = !0, S = 0;\n            for(i = 0; i < a; i += 1){\n                n = (s = this.globalData.fontManager.getCharData(t.finalText[i], u.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && s.data || {}, g.reset(), v && y[i].n && (x = -b, P += t.yOffset, P += E ? 1 : 0, E = !1), f = (l = n.shapes ? n.shapes[0].it : []).length, g.scale(t.finalSize / 100, t.finalSize / 100), v && this.applyTextPropertiesToMatrix(t, g, y[i].line, x, P), m = createSizedArray(f - 1);\n                var C = 0;\n                for(p = 0; p < f; p += 1)if (\"sh\" === l[p].ty) {\n                    for(h = l[p].ks.k.i.length, c = l[p].ks.k, d = [], o = 1; o < h; o += 1)1 === o && d.push(g.applyToX(c.v[0][0], c.v[0][1], 0), g.applyToY(c.v[0][0], c.v[0][1], 0)), d.push(g.applyToX(c.o[o - 1][0], c.o[o - 1][1], 0), g.applyToY(c.o[o - 1][0], c.o[o - 1][1], 0), g.applyToX(c.i[o][0], c.i[o][1], 0), g.applyToY(c.i[o][0], c.i[o][1], 0), g.applyToX(c.v[o][0], c.v[o][1], 0), g.applyToY(c.v[o][0], c.v[o][1], 0));\n                    d.push(g.applyToX(c.o[o - 1][0], c.o[o - 1][1], 0), g.applyToY(c.o[o - 1][0], c.o[o - 1][1], 0), g.applyToX(c.i[0][0], c.i[0][1], 0), g.applyToY(c.i[0][0], c.i[0][1], 0), g.applyToX(c.v[0][0], c.v[0][1], 0), g.applyToY(c.v[0][0], c.v[0][1], 0)), m[C] = d, C += 1;\n                }\n                v && (x += y[i].l, x += b), this.textSpans[S] ? this.textSpans[S].elem = m : this.textSpans[S] = {\n                    elem: m\n                }, S += 1;\n            }\n        }, CVTextElement.prototype.renderInnerContent = function() {\n            var t, e, r, i, a, s, n = this.canvasContext;\n            n.font = this.values.fValue, n.lineCap = \"butt\", n.lineJoin = \"miter\", n.miterLimit = 4, this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n            var o, h = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;\n            e = l.length;\n            var p, f, c = null, m = null, d = null;\n            for(t = 0; t < e; t += 1)if (!l[t].n) {\n                if ((o = h[t]) && (this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(o.p), this.globalData.renderer.ctxOpacity(o.o)), this.fill) {\n                    for(o && o.fc ? c !== o.fc && (c = o.fc, n.fillStyle = o.fc) : c !== this.values.fill && (c = this.values.fill, n.fillStyle = this.values.fill), i = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), r = 0; r < i; r += 1)for(s = (f = p[r]).length, this.globalData.canvasContext.moveTo(f[0], f[1]), a = 2; a < s; a += 6)this.globalData.canvasContext.bezierCurveTo(f[a], f[a + 1], f[a + 2], f[a + 3], f[a + 4], f[a + 5]);\n                    this.globalData.canvasContext.closePath(), this.globalData.canvasContext.fill();\n                }\n                if (this.stroke) {\n                    for(o && o.sw ? d !== o.sw && (d = o.sw, n.lineWidth = o.sw) : d !== this.values.sWidth && (d = this.values.sWidth, n.lineWidth = this.values.sWidth), o && o.sc ? m !== o.sc && (m = o.sc, n.strokeStyle = o.sc) : m !== this.values.stroke && (m = this.values.stroke, n.strokeStyle = this.values.stroke), i = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), r = 0; r < i; r += 1)for(s = (f = p[r]).length, this.globalData.canvasContext.moveTo(f[0], f[1]), a = 2; a < s; a += 6)this.globalData.canvasContext.bezierCurveTo(f[a], f[a + 1], f[a + 2], f[a + 3], f[a + 4], f[a + 5]);\n                    this.globalData.canvasContext.closePath(), this.globalData.canvasContext.stroke();\n                }\n                o && this.globalData.renderer.restore();\n            }\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            CVBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableElement\n        ], CVImageElement), CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVImageElement.prototype.createContent = function() {\n            if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n                var t = createTag(\"canvas\");\n                t.width = this.assetData.w, t.height = this.assetData.h;\n                var e, r, i = t.getContext(\"2d\"), a = this.img.width, s = this.img.height, n = a / s, o = this.assetData.w / this.assetData.h, h = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n                n > o && \"xMidYMid slice\" === h || n < o && \"xMidYMid slice\" !== h ? e = (r = s) * o : r = (e = a) / o, i.drawImage(this.img, (a - e) / 2, (s - r) / 2, e, r, 0, 0, this.assetData.w, this.assetData.h), this.img = t;\n            }\n        }, CVImageElement.prototype.renderInnerContent = function() {\n            this.canvasContext.drawImage(this.img, 0, 0);\n        }, CVImageElement.prototype.destroy = function() {\n            this.img = null;\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            CVBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableElement\n        ], CVSolidElement), CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVSolidElement.prototype.renderInnerContent = function() {\n            var t = this.canvasContext;\n            t.fillStyle = this.data.sc, t.fillRect(0, 0, this.data.sw, this.data.sh);\n        }, extendPrototype([\n            BaseRenderer\n        ], CanvasRendererBase), CanvasRendererBase.prototype.createShape = function(t) {\n            return new CVShapeElement(t, this.globalData, this);\n        }, CanvasRendererBase.prototype.createText = function(t) {\n            return new CVTextElement(t, this.globalData, this);\n        }, CanvasRendererBase.prototype.createImage = function(t) {\n            return new CVImageElement(t, this.globalData, this);\n        }, CanvasRendererBase.prototype.createSolid = function(t) {\n            return new CVSolidElement(t, this.globalData, this);\n        }, CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull, CanvasRendererBase.prototype.ctxTransform = function(t) {\n            if (1 !== t[0] || 0 !== t[1] || 0 !== t[4] || 1 !== t[5] || 0 !== t[12] || 0 !== t[13]) if (this.renderConfig.clearCanvas) {\n                this.transformMat.cloneFromProps(t);\n                var e = this.contextData.getTransform(), r = e.props;\n                this.transformMat.transform(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8], r[9], r[10], r[11], r[12], r[13], r[14], r[15]), e.cloneFromProps(this.transformMat.props);\n                var i = e.props;\n                this.canvasContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]);\n            } else this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13]);\n        }, CanvasRendererBase.prototype.ctxOpacity = function(t) {\n            var e = this.contextData.getOpacity();\n            if (!this.renderConfig.clearCanvas) return this.canvasContext.globalAlpha *= t < 0 ? 0 : t, void (this.globalData.currentGlobalAlpha = e);\n            e *= t < 0 ? 0 : t, this.contextData.setOpacity(e), this.globalData.currentGlobalAlpha !== e && (this.canvasContext.globalAlpha = e, this.globalData.currentGlobalAlpha = e);\n        }, CanvasRendererBase.prototype.reset = function() {\n            this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore();\n        }, CanvasRendererBase.prototype.save = function(t) {\n            this.renderConfig.clearCanvas ? (t && this.canvasContext.save(), this.contextData.push()) : this.canvasContext.save();\n        }, CanvasRendererBase.prototype.restore = function(t) {\n            if (this.renderConfig.clearCanvas) {\n                t && (this.canvasContext.restore(), this.globalData.blendMode = \"source-over\");\n                var e = this.contextData.pop(), r = e.transform, i = e.opacity;\n                this.canvasContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13]), this.globalData.currentGlobalAlpha !== i && (this.canvasContext.globalAlpha = i, this.globalData.currentGlobalAlpha = i);\n            } else this.canvasContext.restore();\n        }, CanvasRendererBase.prototype.configAnimation = function(t) {\n            if (this.animationItem.wrapper) {\n                this.animationItem.container = createTag(\"canvas\");\n                var e = this.animationItem.container.style;\n                e.width = \"100%\", e.height = \"100%\";\n                var r = \"0px 0px 0px\";\n                e.transformOrigin = r, e.mozTransformOrigin = r, e.webkitTransformOrigin = r, e[\"-webkit-transform\"] = r, e.contentVisibility = this.renderConfig.contentVisibility, this.animationItem.wrapper.appendChild(this.animationItem.container), this.canvasContext = this.animationItem.container.getContext(\"2d\"), this.renderConfig.className && this.animationItem.container.setAttribute(\"class\", this.renderConfig.className), this.renderConfig.id && this.animationItem.container.setAttribute(\"id\", this.renderConfig.id);\n            } else this.canvasContext = this.renderConfig.context;\n            this.data = t, this.layers = t.layers, this.transformCanvas = {\n                w: t.w,\n                h: t.h,\n                sx: 0,\n                sy: 0,\n                tx: 0,\n                ty: 0\n            }, this.setupGlobalData(t, document.body), this.globalData.canvasContext = this.canvasContext, this.globalData.renderer = this, this.globalData.isDashed = !1, this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.globalData.transformCanvas = this.transformCanvas, this.elements = createSizedArray(t.layers.length), this.updateContainerSize();\n        }, CanvasRendererBase.prototype.updateContainerSize = function(t, e) {\n            var r, i, a, s;\n            if (this.reset(), t ? (r = t, i = e, this.canvasContext.canvas.width = r, this.canvasContext.canvas.height = i) : (this.animationItem.wrapper && this.animationItem.container ? (r = this.animationItem.wrapper.offsetWidth, i = this.animationItem.wrapper.offsetHeight) : (r = this.canvasContext.canvas.width, i = this.canvasContext.canvas.height), this.canvasContext.canvas.width = r * this.renderConfig.dpr, this.canvasContext.canvas.height = i * this.renderConfig.dpr), -1 !== this.renderConfig.preserveAspectRatio.indexOf(\"meet\") || -1 !== this.renderConfig.preserveAspectRatio.indexOf(\"slice\")) {\n                var n = this.renderConfig.preserveAspectRatio.split(\" \"), o = n[1] || \"meet\", h = n[0] || \"xMidYMid\", l = h.substr(0, 4), p = h.substr(4);\n                a = r / i, (s = this.transformCanvas.w / this.transformCanvas.h) > a && \"meet\" === o || s < a && \"slice\" === o ? (this.transformCanvas.sx = r / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = r / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = i / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.sy = i / (this.transformCanvas.h / this.renderConfig.dpr)), this.transformCanvas.tx = \"xMid\" === l && (s < a && \"meet\" === o || s > a && \"slice\" === o) ? (r - this.transformCanvas.w * (i / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : \"xMax\" === l && (s < a && \"meet\" === o || s > a && \"slice\" === o) ? (r - this.transformCanvas.w * (i / this.transformCanvas.h)) * this.renderConfig.dpr : 0, this.transformCanvas.ty = \"YMid\" === p && (s > a && \"meet\" === o || s < a && \"slice\" === o) ? (i - this.transformCanvas.h * (r / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : \"YMax\" === p && (s > a && \"meet\" === o || s < a && \"slice\" === o) ? (i - this.transformCanvas.h * (r / this.transformCanvas.w)) * this.renderConfig.dpr : 0;\n            } else \"none\" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = r / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = i / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.tx = 0, this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr, this.transformCanvas.sy = this.renderConfig.dpr, this.transformCanvas.tx = 0, this.transformCanvas.ty = 0);\n            this.transformCanvas.props = [\n                this.transformCanvas.sx,\n                0,\n                0,\n                0,\n                0,\n                this.transformCanvas.sy,\n                0,\n                0,\n                0,\n                0,\n                1,\n                0,\n                this.transformCanvas.tx,\n                this.transformCanvas.ty,\n                0,\n                1\n            ], this.ctxTransform(this.transformCanvas.props), this.canvasContext.beginPath(), this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h), this.canvasContext.closePath(), this.canvasContext.clip(), this.renderFrame(this.renderedFrame, !0);\n        }, CanvasRendererBase.prototype.destroy = function() {\n            var t;\n            for(this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = \"\"), t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1)this.elements[t] && this.elements[t].destroy();\n            this.elements.length = 0, this.globalData.canvasContext = null, this.animationItem.container = null, this.destroyed = !0;\n        }, CanvasRendererBase.prototype.renderFrame = function(t, e) {\n            if ((this.renderedFrame !== t || !0 !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {\n                var r;\n                this.renderedFrame = t, this.globalData.frameNum = t - this.animationItem._isFirstFrame, this.globalData.frameId += 1, this.globalData._mdf = !this.renderConfig.clearCanvas || e, this.globalData.projectInterface.currentFrame = t;\n                var i = this.layers.length;\n                for(this.completeLayers || this.checkLayers(t), r = 0; r < i; r += 1)(this.completeLayers || this.elements[r]) && this.elements[r].prepareFrame(t - this.layers[r].st);\n                if (this.globalData._mdf) {\n                    for(!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(), r = i - 1; r >= 0; r -= 1)(this.completeLayers || this.elements[r]) && this.elements[r].renderFrame();\n                    !0 !== this.renderConfig.clearCanvas && this.restore();\n                }\n            }\n        }, CanvasRendererBase.prototype.buildItem = function(t) {\n            var e = this.elements;\n            if (!e[t] && 99 !== this.layers[t].ty) {\n                var r = this.createItem(this.layers[t], this, this.globalData);\n                e[t] = r, r.initExpressions();\n            }\n        }, CanvasRendererBase.prototype.checkPendingElements = function() {\n            for(; this.pendingElements.length;){\n                this.pendingElements.pop().checkParenting();\n            }\n        }, CanvasRendererBase.prototype.hide = function() {\n            this.animationItem.container.style.display = \"none\";\n        }, CanvasRendererBase.prototype.show = function() {\n            this.animationItem.container.style.display = \"block\";\n        }, extendPrototype([\n            CanvasRendererBase,\n            ICompElement,\n            CVBaseElement\n        ], CVCompElement), CVCompElement.prototype.renderInnerContent = function() {\n            var t, e = this.canvasContext;\n            for(e.beginPath(), e.moveTo(0, 0), e.lineTo(this.data.w, 0), e.lineTo(this.data.w, this.data.h), e.lineTo(0, this.data.h), e.lineTo(0, 0), e.clip(), t = this.layers.length - 1; t >= 0; t -= 1)(this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();\n        }, CVCompElement.prototype.destroy = function() {\n            var t;\n            for(t = this.layers.length - 1; t >= 0; t -= 1)this.elements[t] && this.elements[t].destroy();\n            this.layers = null, this.elements = null;\n        }, CVCompElement.prototype.createComp = function(t) {\n            return new CVCompElement(t, this.globalData, this);\n        }, extendPrototype([\n            CanvasRendererBase\n        ], CanvasRenderer), CanvasRenderer.prototype.createComp = function(t) {\n            return new CVCompElement(t, this.globalData, this);\n        }, HBaseElement.prototype = {\n            checkBlendMode: function() {},\n            initRendererElement: function() {\n                this.baseElement = createTag(this.data.tg || \"div\"), this.data.hasMask ? (this.svgElement = createNS(\"svg\"), this.layerElement = createNS(\"g\"), this.maskedElement = this.layerElement, this.svgElement.appendChild(this.layerElement), this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement, styleDiv(this.baseElement);\n            },\n            createContainerElements: function() {\n                this.renderableEffectsManager = new CVEffects(this), this.transformedElement = this.baseElement, this.maskedElement = this.layerElement, this.data.ln && this.layerElement.setAttribute(\"id\", this.data.ln), this.data.cl && this.layerElement.setAttribute(\"class\", this.data.cl), 0 !== this.data.bm && this.setBlendMode();\n            },\n            renderElement: function() {\n                var t = this.transformedElement ? this.transformedElement.style : {};\n                if (this.finalTransform._matMdf) {\n                    var e = this.finalTransform.mat.toCSS();\n                    t.transform = e, t.webkitTransform = e;\n                }\n                this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v);\n            },\n            renderFrame: function() {\n                this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));\n            },\n            destroy: function() {\n                this.layerElement = null, this.transformedElement = null, this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), this.maskManager = null);\n            },\n            createRenderableComponents: function() {\n                this.maskManager = new MaskElement(this.data, this, this.globalData);\n            },\n            addEffects: function() {},\n            setMatte: function() {}\n        }, HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement, HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy, HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting, extendPrototype([\n            BaseElement,\n            TransformElement,\n            HBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableDOMElement\n        ], HSolidElement), HSolidElement.prototype.createContent = function() {\n            var t;\n            this.data.hasMask ? ((t = createNS(\"rect\")).setAttribute(\"width\", this.data.sw), t.setAttribute(\"height\", this.data.sh), t.setAttribute(\"fill\", this.data.sc), this.svgElement.setAttribute(\"width\", this.data.sw), this.svgElement.setAttribute(\"height\", this.data.sh)) : ((t = createTag(\"div\")).style.width = this.data.sw + \"px\", t.style.height = this.data.sh + \"px\", t.style.backgroundColor = this.data.sc), this.layerElement.appendChild(t);\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            HSolidElement,\n            SVGShapeElement,\n            HBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableElement\n        ], HShapeElement), HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent, HShapeElement.prototype.createContent = function() {\n            var t;\n            if (this.baseElement.style.fontSize = 0, this.data.hasMask) this.layerElement.appendChild(this.shapesContainer), t = this.svgElement;\n            else {\n                t = createNS(\"svg\");\n                var e = this.comp.data ? this.comp.data : this.globalData.compSize;\n                t.setAttribute(\"width\", e.w), t.setAttribute(\"height\", e.h), t.appendChild(this.shapesContainer), this.layerElement.appendChild(t);\n            }\n            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0), this.filterUniqueShapes(), this.shapeCont = t;\n        }, HShapeElement.prototype.getTransformedPoint = function(t, e) {\n            var r, i = t.length;\n            for(r = 0; r < i; r += 1)e = t[r].mProps.v.applyToPointArray(e[0], e[1], 0);\n            return e;\n        }, HShapeElement.prototype.calculateShapeBoundingBox = function(t, e) {\n            var r, i, a, s, n, o = t.sh.v, h = t.transformers, l = o._length;\n            if (!(l <= 1)) {\n                for(r = 0; r < l - 1; r += 1)i = this.getTransformedPoint(h, o.v[r]), a = this.getTransformedPoint(h, o.o[r]), s = this.getTransformedPoint(h, o.i[r + 1]), n = this.getTransformedPoint(h, o.v[r + 1]), this.checkBounds(i, a, s, n, e);\n                o.c && (i = this.getTransformedPoint(h, o.v[r]), a = this.getTransformedPoint(h, o.o[r]), s = this.getTransformedPoint(h, o.i[0]), n = this.getTransformedPoint(h, o.v[0]), this.checkBounds(i, a, s, n, e));\n            }\n        }, HShapeElement.prototype.checkBounds = function(t, e, r, i, a) {\n            this.getBoundsOfCurve(t, e, r, i);\n            var s = this.shapeBoundingBox;\n            a.x = bmMin(s.left, a.x), a.xMax = bmMax(s.right, a.xMax), a.y = bmMin(s.top, a.y), a.yMax = bmMax(s.bottom, a.yMax);\n        }, HShapeElement.prototype.shapeBoundingBox = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, HShapeElement.prototype.tempBoundingBox = {\n            x: 0,\n            xMax: 0,\n            y: 0,\n            yMax: 0,\n            width: 0,\n            height: 0\n        }, HShapeElement.prototype.getBoundsOfCurve = function(t, e, r, i) {\n            for(var a, s, n, o, h, l, p, f = [\n                [\n                    t[0],\n                    i[0]\n                ],\n                [\n                    t[1],\n                    i[1]\n                ]\n            ], c = 0; c < 2; ++c)s = 6 * t[c] - 12 * e[c] + 6 * r[c], a = -3 * t[c] + 9 * e[c] - 9 * r[c] + 3 * i[c], n = 3 * e[c] - 3 * t[c], s |= 0, n |= 0, 0 === (a |= 0) && 0 === s || (0 === a ? (o = -n / s) > 0 && o < 1 && f[c].push(this.calculateF(o, t, e, r, i, c)) : (h = s * s - 4 * n * a) >= 0 && ((l = (-s + bmSqrt(h)) / (2 * a)) > 0 && l < 1 && f[c].push(this.calculateF(l, t, e, r, i, c)), (p = (-s - bmSqrt(h)) / (2 * a)) > 0 && p < 1 && f[c].push(this.calculateF(p, t, e, r, i, c))));\n            this.shapeBoundingBox.left = bmMin.apply(null, f[0]), this.shapeBoundingBox.top = bmMin.apply(null, f[1]), this.shapeBoundingBox.right = bmMax.apply(null, f[0]), this.shapeBoundingBox.bottom = bmMax.apply(null, f[1]);\n        }, HShapeElement.prototype.calculateF = function(t, e, r, i, a, s) {\n            return bmPow(1 - t, 3) * e[s] + 3 * bmPow(1 - t, 2) * t * r[s] + 3 * (1 - t) * bmPow(t, 2) * i[s] + bmPow(t, 3) * a[s];\n        }, HShapeElement.prototype.calculateBoundingBox = function(t, e) {\n            var r, i = t.length;\n            for(r = 0; r < i; r += 1)t[r] && t[r].sh ? this.calculateShapeBoundingBox(t[r], e) : t[r] && t[r].it ? this.calculateBoundingBox(t[r].it, e) : t[r] && t[r].style && t[r].w && this.expandStrokeBoundingBox(t[r].w, e);\n        }, HShapeElement.prototype.expandStrokeBoundingBox = function(t, e) {\n            var r = 0;\n            if (t.keyframes) {\n                for(var i = 0; i < t.keyframes.length; i += 1){\n                    var a = t.keyframes[i].s;\n                    a > r && (r = a);\n                }\n                r *= t.mult;\n            } else r = t.v * t.mult;\n            e.x -= r, e.xMax += r, e.y -= r, e.yMax += r;\n        }, HShapeElement.prototype.currentBoxContains = function(t) {\n            return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height;\n        }, HShapeElement.prototype.renderInnerContent = function() {\n            if (this._renderShapeFrame(), !this.hidden && (this._isFirstFrame || this._mdf)) {\n                var t = this.tempBoundingBox, e = 999999;\n                if (t.x = e, t.xMax = -e, t.y = e, t.yMax = -e, this.calculateBoundingBox(this.itemsData, t), t.width = t.xMax < t.x ? 0 : t.xMax - t.x, t.height = t.yMax < t.y ? 0 : t.yMax - t.y, this.currentBoxContains(t)) return;\n                var r = !1;\n                if (this.currentBBox.w !== t.width && (this.currentBBox.w = t.width, this.shapeCont.setAttribute(\"width\", t.width), r = !0), this.currentBBox.h !== t.height && (this.currentBBox.h = t.height, this.shapeCont.setAttribute(\"height\", t.height), r = !0), r || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) {\n                    this.currentBBox.w = t.width, this.currentBBox.h = t.height, this.currentBBox.x = t.x, this.currentBBox.y = t.y, this.shapeCont.setAttribute(\"viewBox\", this.currentBBox.x + \" \" + this.currentBBox.y + \" \" + this.currentBBox.w + \" \" + this.currentBBox.h);\n                    var i = this.shapeCont.style, a = \"translate(\" + this.currentBBox.x + \"px,\" + this.currentBBox.y + \"px)\";\n                    i.transform = a, i.webkitTransform = a;\n                }\n            }\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            HBaseElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableDOMElement,\n            ITextElement\n        ], HTextElement), HTextElement.prototype.createContent = function() {\n            if (this.isMasked = this.checkMasks(), this.isMasked) {\n                this.renderType = \"svg\", this.compW = this.comp.data.w, this.compH = this.comp.data.h, this.svgElement.setAttribute(\"width\", this.compW), this.svgElement.setAttribute(\"height\", this.compH);\n                var t = createNS(\"g\");\n                this.maskedElement.appendChild(t), this.innerElem = t;\n            } else this.renderType = \"html\", this.innerElem = this.layerElement;\n            this.checkParenting();\n        }, HTextElement.prototype.buildNewText = function() {\n            var t = this.textProperty.currentData;\n            this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);\n            var e = this.innerElem.style, r = t.fc ? this.buildColor(t.fc) : \"rgba(0,0,0,0)\";\n            e.fill = r, e.color = r, t.sc && (e.stroke = this.buildColor(t.sc), e.strokeWidth = t.sw + \"px\");\n            var i, a, s = this.globalData.fontManager.getFontByName(t.f);\n            if (!this.globalData.fontManager.chars) if (e.fontSize = t.finalSize + \"px\", e.lineHeight = t.finalSize + \"px\", s.fClass) this.innerElem.className = s.fClass;\n            else {\n                e.fontFamily = s.fFamily;\n                var n = t.fWeight, o = t.fStyle;\n                e.fontStyle = o, e.fontWeight = n;\n            }\n            var h, l, p, f = t.l;\n            a = f.length;\n            var c, m = this.mHelper, d = \"\", u = 0;\n            for(i = 0; i < a; i += 1){\n                if (this.globalData.fontManager.chars ? (this.textPaths[u] ? h = this.textPaths[u] : ((h = createNS(\"path\")).setAttribute(\"stroke-linecap\", lineCapEnum[1]), h.setAttribute(\"stroke-linejoin\", lineJoinEnum[2]), h.setAttribute(\"stroke-miterlimit\", \"4\")), this.isMasked || (this.textSpans[u] ? p = (l = this.textSpans[u]).children[0] : ((l = createTag(\"div\")).style.lineHeight = 0, (p = createNS(\"svg\")).appendChild(h), styleDiv(l)))) : this.isMasked ? h = this.textPaths[u] ? this.textPaths[u] : createNS(\"text\") : this.textSpans[u] ? (l = this.textSpans[u], h = this.textPaths[u]) : (styleDiv(l = createTag(\"span\")), styleDiv(h = createTag(\"span\")), l.appendChild(h)), this.globalData.fontManager.chars) {\n                    var y, g = this.globalData.fontManager.getCharData(t.finalText[i], s.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);\n                    if (y = g ? g.data : null, m.reset(), y && y.shapes && y.shapes.length && (c = y.shapes[0].it, m.scale(t.finalSize / 100, t.finalSize / 100), d = this.createPathShape(m, c), h.setAttribute(\"d\", d)), this.isMasked) this.innerElem.appendChild(h);\n                    else {\n                        if (this.innerElem.appendChild(l), y && y.shapes) {\n                            document.body.appendChild(p);\n                            var v = p.getBBox();\n                            p.setAttribute(\"width\", v.width + 2), p.setAttribute(\"height\", v.height + 2), p.setAttribute(\"viewBox\", v.x - 1 + \" \" + (v.y - 1) + \" \" + (v.width + 2) + \" \" + (v.height + 2));\n                            var b = p.style, x = \"translate(\" + (v.x - 1) + \"px,\" + (v.y - 1) + \"px)\";\n                            b.transform = x, b.webkitTransform = x, f[i].yOffset = v.y - 1;\n                        } else p.setAttribute(\"width\", 1), p.setAttribute(\"height\", 1);\n                        l.appendChild(p);\n                    }\n                } else if (h.textContent = f[i].val, h.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\"), this.isMasked) this.innerElem.appendChild(h);\n                else {\n                    this.innerElem.appendChild(l);\n                    var P = h.style, E = \"translate3d(0,\" + -t.finalSize / 1.2 + \"px,0)\";\n                    P.transform = E, P.webkitTransform = E;\n                }\n                this.isMasked ? this.textSpans[u] = h : this.textSpans[u] = l, this.textSpans[u].style.display = \"block\", this.textPaths[u] = h, u += 1;\n            }\n            for(; u < this.textSpans.length;)this.textSpans[u].style.display = \"none\", u += 1;\n        }, HTextElement.prototype.renderInnerContent = function() {\n            var t;\n            if (this.data.singleShape) {\n                if (!this._isFirstFrame && !this.lettersChangedFlag) return;\n                if (this.isMasked && this.finalTransform._matMdf) {\n                    this.svgElement.setAttribute(\"viewBox\", -this.finalTransform.mProp.p.v[0] + \" \" + -this.finalTransform.mProp.p.v[1] + \" \" + this.compW + \" \" + this.compH), t = this.svgElement.style;\n                    var e = \"translate(\" + -this.finalTransform.mProp.p.v[0] + \"px,\" + -this.finalTransform.mProp.p.v[1] + \"px)\";\n                    t.transform = e, t.webkitTransform = e;\n                }\n            }\n            if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n                var r, i, a, s, n, o = 0, h = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;\n                for(i = l.length, r = 0; r < i; r += 1)l[r].n ? o += 1 : (s = this.textSpans[r], n = this.textPaths[r], a = h[o], o += 1, a._mdf.m && (this.isMasked ? s.setAttribute(\"transform\", a.m) : (s.style.webkitTransform = a.m, s.style.transform = a.m)), s.style.opacity = a.o, a.sw && a._mdf.sw && n.setAttribute(\"stroke-width\", a.sw), a.sc && a._mdf.sc && n.setAttribute(\"stroke\", a.sc), a.fc && a._mdf.fc && (n.setAttribute(\"fill\", a.fc), n.style.color = a.fc));\n                if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n                    var p = this.innerElem.getBBox();\n                    this.currentBBox.w !== p.width && (this.currentBBox.w = p.width, this.svgElement.setAttribute(\"width\", p.width)), this.currentBBox.h !== p.height && (this.currentBBox.h = p.height, this.svgElement.setAttribute(\"height\", p.height));\n                    if (this.currentBBox.w !== p.width + 2 || this.currentBBox.h !== p.height + 2 || this.currentBBox.x !== p.x - 1 || this.currentBBox.y !== p.y - 1) {\n                        this.currentBBox.w = p.width + 2, this.currentBBox.h = p.height + 2, this.currentBBox.x = p.x - 1, this.currentBBox.y = p.y - 1, this.svgElement.setAttribute(\"viewBox\", this.currentBBox.x + \" \" + this.currentBBox.y + \" \" + this.currentBBox.w + \" \" + this.currentBBox.h), t = this.svgElement.style;\n                        var f = \"translate(\" + this.currentBBox.x + \"px,\" + this.currentBBox.y + \"px)\";\n                        t.transform = f, t.webkitTransform = f;\n                    }\n                }\n            }\n        }, extendPrototype([\n            BaseElement,\n            FrameElement,\n            HierarchyElement\n        ], HCameraElement), HCameraElement.prototype.setup = function() {\n            var t, e, r, i, a = this.comp.threeDElements.length;\n            for(t = 0; t < a; t += 1)if (\"3d\" === (e = this.comp.threeDElements[t]).type) {\n                r = e.perspectiveElem.style, i = e.container.style;\n                var s = this.pe.v + \"px\", n = \"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)\";\n                r.perspective = s, r.webkitPerspective = s, i.transformOrigin = \"0px 0px 0px\", i.mozTransformOrigin = \"0px 0px 0px\", i.webkitTransformOrigin = \"0px 0px 0px\", r.transform = n, r.webkitTransform = n;\n            }\n        }, HCameraElement.prototype.createElements = function() {}, HCameraElement.prototype.hide = function() {}, HCameraElement.prototype.renderFrame = function() {\n            var t, e, r = this._isFirstFrame;\n            if (this.hierarchy) for(e = this.hierarchy.length, t = 0; t < e; t += 1)r = this.hierarchy[t].finalTransform.mProp._mdf || r;\n            if (r || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n                if (this.mat.reset(), this.hierarchy) for(t = e = this.hierarchy.length - 1; t >= 0; t -= 1){\n                    var i = this.hierarchy[t].finalTransform.mProp;\n                    this.mat.translate(-i.p.v[0], -i.p.v[1], i.p.v[2]), this.mat.rotateX(-i.or.v[0]).rotateY(-i.or.v[1]).rotateZ(i.or.v[2]), this.mat.rotateX(-i.rx.v).rotateY(-i.ry.v).rotateZ(i.rz.v), this.mat.scale(1 / i.s.v[0], 1 / i.s.v[1], 1 / i.s.v[2]), this.mat.translate(i.a.v[0], i.a.v[1], i.a.v[2]);\n                }\n                if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a) {\n                    var a;\n                    a = this.p ? [\n                        this.p.v[0] - this.a.v[0],\n                        this.p.v[1] - this.a.v[1],\n                        this.p.v[2] - this.a.v[2]\n                    ] : [\n                        this.px.v - this.a.v[0],\n                        this.py.v - this.a.v[1],\n                        this.pz.v - this.a.v[2]\n                    ];\n                    var s = Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2)), n = [\n                        a[0] / s,\n                        a[1] / s,\n                        a[2] / s\n                    ], o = Math.sqrt(n[2] * n[2] + n[0] * n[0]), h = Math.atan2(n[1], o), l = Math.atan2(n[0], -n[2]);\n                    this.mat.rotateY(l).rotateX(-h);\n                }\n                this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]), this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0), this.mat.translate(0, 0, this.pe.v);\n                var p = !this._prevMat.equals(this.mat);\n                if ((p || this.pe._mdf) && this.comp.threeDElements) {\n                    var f, c, m;\n                    for(e = this.comp.threeDElements.length, t = 0; t < e; t += 1)if (\"3d\" === (f = this.comp.threeDElements[t]).type) {\n                        if (p) {\n                            var d = this.mat.toCSS();\n                            (m = f.container.style).transform = d, m.webkitTransform = d;\n                        }\n                        this.pe._mdf && ((c = f.perspectiveElem.style).perspective = this.pe.v + \"px\", c.webkitPerspective = this.pe.v + \"px\");\n                    }\n                    this.mat.clone(this._prevMat);\n                }\n            }\n            this._isFirstFrame = !1;\n        }, HCameraElement.prototype.prepareFrame = function(t) {\n            this.prepareProperties(t, !0);\n        }, HCameraElement.prototype.destroy = function() {}, HCameraElement.prototype.getBaseElement = function() {\n            return null;\n        }, extendPrototype([\n            BaseElement,\n            TransformElement,\n            HBaseElement,\n            HSolidElement,\n            HierarchyElement,\n            FrameElement,\n            RenderableElement\n        ], HImageElement), HImageElement.prototype.createContent = function() {\n            var t = this.globalData.getAssetsPath(this.assetData), e = new Image;\n            this.data.hasMask ? (this.imageElem = createNS(\"image\"), this.imageElem.setAttribute(\"width\", this.assetData.w + \"px\"), this.imageElem.setAttribute(\"height\", this.assetData.h + \"px\"), this.imageElem.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", t), this.layerElement.appendChild(this.imageElem), this.baseElement.setAttribute(\"width\", this.assetData.w), this.baseElement.setAttribute(\"height\", this.assetData.h)) : this.layerElement.appendChild(e), e.crossOrigin = \"anonymous\", e.src = t, this.data.ln && this.baseElement.setAttribute(\"id\", this.data.ln);\n        }, extendPrototype([\n            BaseRenderer\n        ], HybridRendererBase), HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem, HybridRendererBase.prototype.checkPendingElements = function() {\n            for(; this.pendingElements.length;){\n                this.pendingElements.pop().checkParenting();\n            }\n        }, HybridRendererBase.prototype.appendElementInPos = function(t, e) {\n            var r = t.getBaseElement();\n            if (r) {\n                var i = this.layers[e];\n                if (i.ddd && this.supports3d) this.addTo3dContainer(r, e);\n                else if (this.threeDElements) this.addTo3dContainer(r, e);\n                else {\n                    for(var a, s, n = 0; n < e;)this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement && (s = this.elements[n], a = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : s.getBaseElement()) || a), n += 1;\n                    a ? i.ddd && this.supports3d || this.layerElement.insertBefore(r, a) : i.ddd && this.supports3d || this.layerElement.appendChild(r);\n                }\n            }\n        }, HybridRendererBase.prototype.createShape = function(t) {\n            return this.supports3d ? new HShapeElement(t, this.globalData, this) : new SVGShapeElement(t, this.globalData, this);\n        }, HybridRendererBase.prototype.createText = function(t) {\n            return this.supports3d ? new HTextElement(t, this.globalData, this) : new SVGTextLottieElement(t, this.globalData, this);\n        }, HybridRendererBase.prototype.createCamera = function(t) {\n            return this.camera = new HCameraElement(t, this.globalData, this), this.camera;\n        }, HybridRendererBase.prototype.createImage = function(t) {\n            return this.supports3d ? new HImageElement(t, this.globalData, this) : new IImageElement(t, this.globalData, this);\n        }, HybridRendererBase.prototype.createSolid = function(t) {\n            return this.supports3d ? new HSolidElement(t, this.globalData, this) : new ISolidElement(t, this.globalData, this);\n        }, HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull, HybridRendererBase.prototype.getThreeDContainerByPos = function(t) {\n            for(var e = 0, r = this.threeDElements.length; e < r;){\n                if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t) return this.threeDElements[e].perspectiveElem;\n                e += 1;\n            }\n            return null;\n        }, HybridRendererBase.prototype.createThreeDContainer = function(t, e) {\n            var r, i, a = createTag(\"div\");\n            styleDiv(a);\n            var s = createTag(\"div\");\n            if (styleDiv(s), \"3d\" === e) {\n                (r = a.style).width = this.globalData.compSize.w + \"px\", r.height = this.globalData.compSize.h + \"px\";\n                r.webkitTransformOrigin = \"50% 50%\", r.mozTransformOrigin = \"50% 50%\", r.transformOrigin = \"50% 50%\";\n                var n = \"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)\";\n                (i = s.style).transform = n, i.webkitTransform = n;\n            }\n            a.appendChild(s);\n            var o = {\n                container: s,\n                perspectiveElem: a,\n                startPos: t,\n                endPos: t,\n                type: e\n            };\n            return this.threeDElements.push(o), o;\n        }, HybridRendererBase.prototype.build3dContainers = function() {\n            var t, e, r = this.layers.length, i = \"\";\n            for(t = 0; t < r; t += 1)this.layers[t].ddd && 3 !== this.layers[t].ty ? (\"3d\" !== i && (i = \"3d\", e = this.createThreeDContainer(t, \"3d\")), e.endPos = Math.max(e.endPos, t)) : (\"2d\" !== i && (i = \"2d\", e = this.createThreeDContainer(t, \"2d\")), e.endPos = Math.max(e.endPos, t));\n            for(t = (r = this.threeDElements.length) - 1; t >= 0; t -= 1)this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem);\n        }, HybridRendererBase.prototype.addTo3dContainer = function(t, e) {\n            for(var r = 0, i = this.threeDElements.length; r < i;){\n                if (e <= this.threeDElements[r].endPos) {\n                    for(var a, s = this.threeDElements[r].startPos; s < e;)this.elements[s] && this.elements[s].getBaseElement && (a = this.elements[s].getBaseElement()), s += 1;\n                    a ? this.threeDElements[r].container.insertBefore(t, a) : this.threeDElements[r].container.appendChild(t);\n                    break;\n                }\n                r += 1;\n            }\n        }, HybridRendererBase.prototype.configAnimation = function(t) {\n            var e = createTag(\"div\"), r = this.animationItem.wrapper, i = e.style;\n            i.width = t.w + \"px\", i.height = t.h + \"px\", this.resizerElem = e, styleDiv(e), i.transformStyle = \"flat\", i.mozTransformStyle = \"flat\", i.webkitTransformStyle = \"flat\", this.renderConfig.className && e.setAttribute(\"class\", this.renderConfig.className), r.appendChild(e), i.overflow = \"hidden\";\n            var a = createNS(\"svg\");\n            a.setAttribute(\"width\", \"1\"), a.setAttribute(\"height\", \"1\"), styleDiv(a), this.resizerElem.appendChild(a);\n            var s = createNS(\"defs\");\n            a.appendChild(s), this.data = t, this.setupGlobalData(t, a), this.globalData.defs = s, this.layers = t.layers, this.layerElement = this.resizerElem, this.build3dContainers(), this.updateContainerSize();\n        }, HybridRendererBase.prototype.destroy = function() {\n            var t;\n            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = \"\"), this.animationItem.container = null, this.globalData.defs = null;\n            var e = this.layers ? this.layers.length : 0;\n            for(t = 0; t < e; t += 1)this.elements[t].destroy();\n            this.elements.length = 0, this.destroyed = !0, this.animationItem = null;\n        }, HybridRendererBase.prototype.updateContainerSize = function() {\n            var t, e, r, i, a = this.animationItem.wrapper.offsetWidth, s = this.animationItem.wrapper.offsetHeight, n = a / s;\n            this.globalData.compSize.w / this.globalData.compSize.h > n ? (t = a / this.globalData.compSize.w, e = a / this.globalData.compSize.w, r = 0, i = (s - this.globalData.compSize.h * (a / this.globalData.compSize.w)) / 2) : (t = s / this.globalData.compSize.h, e = s / this.globalData.compSize.h, r = (a - this.globalData.compSize.w * (s / this.globalData.compSize.h)) / 2, i = 0);\n            var o = this.resizerElem.style;\n            o.webkitTransform = \"matrix3d(\" + t + \",0,0,0,0,\" + e + \",0,0,0,0,1,0,\" + r + \",\" + i + \",0,1)\", o.transform = o.webkitTransform;\n        }, HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame, HybridRendererBase.prototype.hide = function() {\n            this.resizerElem.style.display = \"none\";\n        }, HybridRendererBase.prototype.show = function() {\n            this.resizerElem.style.display = \"block\";\n        }, HybridRendererBase.prototype.initItems = function() {\n            if (this.buildAllItems(), this.camera) this.camera.setup();\n            else {\n                var t, e = this.globalData.compSize.w, r = this.globalData.compSize.h, i = this.threeDElements.length;\n                for(t = 0; t < i; t += 1){\n                    var a = this.threeDElements[t].perspectiveElem.style;\n                    a.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(r, 2)) + \"px\", a.perspective = a.webkitPerspective;\n                }\n            }\n        }, HybridRendererBase.prototype.searchExtraCompositions = function(t) {\n            var e, r = t.length, i = createTag(\"div\");\n            for(e = 0; e < r; e += 1)if (t[e].xt) {\n                var a = this.createComp(t[e], i, this.globalData.comp, null);\n                a.initExpressions(), this.globalData.projectInterface.registerComposition(a);\n            }\n        }, extendPrototype([\n            HybridRendererBase,\n            ICompElement,\n            HBaseElement\n        ], HCompElement), HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements, HCompElement.prototype.createContainerElements = function() {\n            this._createBaseContainerElements(), this.data.hasMask ? (this.svgElement.setAttribute(\"width\", this.data.w), this.svgElement.setAttribute(\"height\", this.data.h), this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement;\n        }, HCompElement.prototype.addTo3dContainer = function(t, e) {\n            for(var r, i = 0; i < e;)this.elements[i] && this.elements[i].getBaseElement && (r = this.elements[i].getBaseElement()), i += 1;\n            r ? this.layerElement.insertBefore(t, r) : this.layerElement.appendChild(t);\n        }, HCompElement.prototype.createComp = function(t) {\n            return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);\n        }, extendPrototype([\n            HybridRendererBase\n        ], HybridRenderer), HybridRenderer.prototype.createComp = function(t) {\n            return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);\n        };\n        var CompExpressionInterface = function(t) {\n            function e(e) {\n                for(var r = 0, i = t.layers.length; r < i;){\n                    if (t.layers[r].nm === e || t.layers[r].ind === e) return t.elements[r].layerInterface;\n                    r += 1;\n                }\n                return null;\n            }\n            return Object.defineProperty(e, \"_name\", {\n                value: t.data.nm\n            }), e.layer = e, e.pixelAspect = 1, e.height = t.data.h || t.globalData.compSize.h, e.width = t.data.w || t.globalData.compSize.w, e.pixelAspect = 1, e.frameDuration = 1 / t.globalData.frameRate, e.displayStartTime = 0, e.numLayers = t.layers.length, e;\n        }, Expressions = function() {\n            var t = {};\n            return t.initExpressions = function(t) {\n                var e = 0, r = [];\n                t.renderer.compInterface = CompExpressionInterface(t.renderer), t.renderer.globalData.projectInterface.registerComposition(t.renderer), t.renderer.globalData.pushExpression = function() {\n                    e += 1;\n                }, t.renderer.globalData.popExpression = function() {\n                    0 === (e -= 1) && function() {\n                        var t, e = r.length;\n                        for(t = 0; t < e; t += 1)r[t].release();\n                        r.length = 0;\n                    }();\n                }, t.renderer.globalData.registerExpressionProperty = function(t) {\n                    -1 === r.indexOf(t) && r.push(t);\n                };\n            }, t;\n        }(), MaskManagerInterface = function() {\n            function t(t, e) {\n                this._mask = t, this._data = e;\n            }\n            Object.defineProperty(t.prototype, \"maskPath\", {\n                get: function() {\n                    return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop;\n                }\n            }), Object.defineProperty(t.prototype, \"maskOpacity\", {\n                get: function() {\n                    return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v;\n                }\n            });\n            return function(e) {\n                var r, i = createSizedArray(e.viewData.length), a = e.viewData.length;\n                for(r = 0; r < a; r += 1)i[r] = new t(e.viewData[r], e.masksProperties[r]);\n                return function(t) {\n                    for(r = 0; r < a;){\n                        if (e.masksProperties[r].nm === t) return i[r];\n                        r += 1;\n                    }\n                    return null;\n                };\n            };\n        }(), ExpressionPropertyInterface = function() {\n            var t = {\n                pv: 0,\n                v: 0,\n                mult: 1\n            }, e = {\n                pv: [\n                    0,\n                    0,\n                    0\n                ],\n                v: [\n                    0,\n                    0,\n                    0\n                ],\n                mult: 1\n            };\n            function r(t, e, r) {\n                Object.defineProperty(t, \"velocity\", {\n                    get: function() {\n                        return e.getVelocityAtTime(e.comp.currentFrame);\n                    }\n                }), t.numKeys = e.keyframes ? e.keyframes.length : 0, t.key = function(i) {\n                    if (!t.numKeys) return 0;\n                    var a = \"\";\n                    a = \"s\" in e.keyframes[i - 1] ? e.keyframes[i - 1].s : \"e\" in e.keyframes[i - 2] ? e.keyframes[i - 2].e : e.keyframes[i - 2].s;\n                    var s = \"unidimensional\" === r ? new Number(a) : Object.assign({}, a);\n                    return s.time = e.keyframes[i - 1].t / e.elem.comp.globalData.frameRate, s.value = \"unidimensional\" === r ? a[0] : a, s;\n                }, t.valueAtTime = e.getValueAtTime, t.speedAtTime = e.getSpeedAtTime, t.velocityAtTime = e.getVelocityAtTime, t.propertyGroup = e.propertyGroup;\n            }\n            function i() {\n                return t;\n            }\n            return function(a) {\n                return a ? \"unidimensional\" === a.propType ? function(e) {\n                    e && \"pv\" in e || (e = t);\n                    var i = 1 / e.mult, a = e.pv * i, s = new Number(a);\n                    return s.value = a, r(s, e, \"unidimensional\"), function() {\n                        return e.k && e.getValue(), a = e.v * i, s.value !== a && ((s = new Number(a)).value = a, r(s, e, \"unidimensional\")), s;\n                    };\n                }(a) : function(t) {\n                    t && \"pv\" in t || (t = e);\n                    var i = 1 / t.mult, a = t.data && t.data.l || t.pv.length, s = createTypedArray(\"float32\", a), n = createTypedArray(\"float32\", a);\n                    return s.value = n, r(s, t, \"multidimensional\"), function() {\n                        t.k && t.getValue();\n                        for(var e = 0; e < a; e += 1)n[e] = t.v[e] * i, s[e] = n[e];\n                        return s;\n                    };\n                }(a) : i;\n            };\n        }(), TransformExpressionInterface = function(t) {\n            function e(t) {\n                switch(t){\n                    case \"scale\":\n                    case \"Scale\":\n                    case \"ADBE Scale\":\n                    case 6:\n                        return e.scale;\n                    case \"rotation\":\n                    case \"Rotation\":\n                    case \"ADBE Rotation\":\n                    case \"ADBE Rotate Z\":\n                    case 10:\n                        return e.rotation;\n                    case \"ADBE Rotate X\":\n                        return e.xRotation;\n                    case \"ADBE Rotate Y\":\n                        return e.yRotation;\n                    case \"position\":\n                    case \"Position\":\n                    case \"ADBE Position\":\n                    case 2:\n                        return e.position;\n                    case \"ADBE Position_0\":\n                        return e.xPosition;\n                    case \"ADBE Position_1\":\n                        return e.yPosition;\n                    case \"ADBE Position_2\":\n                        return e.zPosition;\n                    case \"anchorPoint\":\n                    case \"AnchorPoint\":\n                    case \"Anchor Point\":\n                    case \"ADBE AnchorPoint\":\n                    case 1:\n                        return e.anchorPoint;\n                    case \"opacity\":\n                    case \"Opacity\":\n                    case 11:\n                        return e.opacity;\n                    default:\n                        return null;\n                }\n            }\n            var r, i, a, s;\n            return Object.defineProperty(e, \"rotation\", {\n                get: ExpressionPropertyInterface(t.r || t.rz)\n            }), Object.defineProperty(e, \"zRotation\", {\n                get: ExpressionPropertyInterface(t.rz || t.r)\n            }), Object.defineProperty(e, \"xRotation\", {\n                get: ExpressionPropertyInterface(t.rx)\n            }), Object.defineProperty(e, \"yRotation\", {\n                get: ExpressionPropertyInterface(t.ry)\n            }), Object.defineProperty(e, \"scale\", {\n                get: ExpressionPropertyInterface(t.s)\n            }), t.p ? s = ExpressionPropertyInterface(t.p) : (r = ExpressionPropertyInterface(t.px), i = ExpressionPropertyInterface(t.py), t.pz && (a = ExpressionPropertyInterface(t.pz))), Object.defineProperty(e, \"position\", {\n                get: function() {\n                    return t.p ? s() : [\n                        r(),\n                        i(),\n                        a ? a() : 0\n                    ];\n                }\n            }), Object.defineProperty(e, \"xPosition\", {\n                get: ExpressionPropertyInterface(t.px)\n            }), Object.defineProperty(e, \"yPosition\", {\n                get: ExpressionPropertyInterface(t.py)\n            }), Object.defineProperty(e, \"zPosition\", {\n                get: ExpressionPropertyInterface(t.pz)\n            }), Object.defineProperty(e, \"anchorPoint\", {\n                get: ExpressionPropertyInterface(t.a)\n            }), Object.defineProperty(e, \"opacity\", {\n                get: ExpressionPropertyInterface(t.o)\n            }), Object.defineProperty(e, \"skew\", {\n                get: ExpressionPropertyInterface(t.sk)\n            }), Object.defineProperty(e, \"skewAxis\", {\n                get: ExpressionPropertyInterface(t.sa)\n            }), Object.defineProperty(e, \"orientation\", {\n                get: ExpressionPropertyInterface(t.or)\n            }), e;\n        }, LayerExpressionInterface = function() {\n            function t(t) {\n                var e = new Matrix;\n                void 0 !== t ? this._elem.finalTransform.mProp.getValueAtTime(t).clone(e) : this._elem.finalTransform.mProp.applyToMatrix(e);\n                return e;\n            }\n            function e(t, e) {\n                var r = this.getMatrix(e);\n                return r.props[12] = 0, r.props[13] = 0, r.props[14] = 0, this.applyPoint(r, t);\n            }\n            function r(t, e) {\n                var r = this.getMatrix(e);\n                return this.applyPoint(r, t);\n            }\n            function i(t, e) {\n                var r = this.getMatrix(e);\n                return r.props[12] = 0, r.props[13] = 0, r.props[14] = 0, this.invertPoint(r, t);\n            }\n            function a(t, e) {\n                var r = this.getMatrix(e);\n                return this.invertPoint(r, t);\n            }\n            function s(t, e) {\n                if (this._elem.hierarchy && this._elem.hierarchy.length) {\n                    var r, i = this._elem.hierarchy.length;\n                    for(r = 0; r < i; r += 1)this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t);\n                }\n                return t.applyToPointArray(e[0], e[1], e[2] || 0);\n            }\n            function n(t, e) {\n                if (this._elem.hierarchy && this._elem.hierarchy.length) {\n                    var r, i = this._elem.hierarchy.length;\n                    for(r = 0; r < i; r += 1)this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t);\n                }\n                return t.inversePoint(e);\n            }\n            function o(t) {\n                var e = new Matrix;\n                if (e.reset(), this._elem.finalTransform.mProp.applyToMatrix(e), this._elem.hierarchy && this._elem.hierarchy.length) {\n                    var r, i = this._elem.hierarchy.length;\n                    for(r = 0; r < i; r += 1)this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(e);\n                    return e.inversePoint(t);\n                }\n                return e.inversePoint(t);\n            }\n            function h() {\n                return [\n                    1,\n                    1,\n                    1,\n                    1\n                ];\n            }\n            return function(l) {\n                var p;\n                function f(t) {\n                    switch(t){\n                        case \"ADBE Root Vectors Group\":\n                        case \"Contents\":\n                        case 2:\n                            return f.shapeInterface;\n                        case 1:\n                        case 6:\n                        case \"Transform\":\n                        case \"transform\":\n                        case \"ADBE Transform Group\":\n                            return p;\n                        case 4:\n                        case \"ADBE Effect Parade\":\n                        case \"effects\":\n                        case \"Effects\":\n                            return f.effect;\n                        case \"ADBE Text Properties\":\n                            return f.textInterface;\n                        default:\n                            return null;\n                    }\n                }\n                f.getMatrix = t, f.invertPoint = n, f.applyPoint = s, f.toWorld = r, f.toWorldVec = e, f.fromWorld = a, f.fromWorldVec = i, f.toComp = r, f.fromComp = o, f.sampleImage = h, f.sourceRectAtTime = l.sourceRectAtTime.bind(l), f._elem = l;\n                var c = getDescriptor(p = TransformExpressionInterface(l.finalTransform.mProp), \"anchorPoint\");\n                return Object.defineProperties(f, {\n                    hasParent: {\n                        get: function() {\n                            return l.hierarchy.length;\n                        }\n                    },\n                    parent: {\n                        get: function() {\n                            return l.hierarchy[0].layerInterface;\n                        }\n                    },\n                    rotation: getDescriptor(p, \"rotation\"),\n                    scale: getDescriptor(p, \"scale\"),\n                    position: getDescriptor(p, \"position\"),\n                    opacity: getDescriptor(p, \"opacity\"),\n                    anchorPoint: c,\n                    anchor_point: c,\n                    transform: {\n                        get: function() {\n                            return p;\n                        }\n                    },\n                    active: {\n                        get: function() {\n                            return l.isInRange;\n                        }\n                    }\n                }), f.startTime = l.data.st, f.index = l.data.ind, f.source = l.data.refId, f.height = 0 === l.data.ty ? l.data.h : 100, f.width = 0 === l.data.ty ? l.data.w : 100, f.inPoint = l.data.ip / l.comp.globalData.frameRate, f.outPoint = l.data.op / l.comp.globalData.frameRate, f._name = l.data.nm, f.registerMaskInterface = function(t) {\n                    f.mask = new MaskManagerInterface(t, l);\n                }, f.registerEffectsInterface = function(t) {\n                    f.effect = t;\n                }, f;\n            };\n        }(), propertyGroupFactory = function(t, e) {\n            return function(r) {\n                return (r = void 0 === r ? 1 : r) <= 0 ? t : e(r - 1);\n            };\n        }, PropertyInterface = function(t, e) {\n            var r = {\n                _name: t\n            };\n            return function(t) {\n                return (t = void 0 === t ? 1 : t) <= 0 ? r : e(t - 1);\n            };\n        }, EffectsExpressionInterface = function() {\n            function t(r, i, a, s) {\n                function n(t) {\n                    for(var e = r.ef, i = 0, a = e.length; i < a;){\n                        if (t === e[i].nm || t === e[i].mn || t === e[i].ix) return 5 === e[i].ty ? l[i] : l[i]();\n                        i += 1;\n                    }\n                    throw new Error;\n                }\n                var o, h = propertyGroupFactory(n, a), l = [], p = r.ef.length;\n                for(o = 0; o < p; o += 1)5 === r.ef[o].ty ? l.push(t(r.ef[o], i.effectElements[o], i.effectElements[o].propertyGroup, s)) : l.push(e(i.effectElements[o], r.ef[o].ty, s, h));\n                return \"ADBE Color Control\" === r.mn && Object.defineProperty(n, \"color\", {\n                    get: function() {\n                        return l[0]();\n                    }\n                }), Object.defineProperties(n, {\n                    numProperties: {\n                        get: function() {\n                            return r.np;\n                        }\n                    },\n                    _name: {\n                        value: r.nm\n                    },\n                    propertyGroup: {\n                        value: h\n                    }\n                }), n.enabled = 0 !== r.en, n.active = n.enabled, n;\n            }\n            function e(t, e, r, i) {\n                var a = ExpressionPropertyInterface(t.p);\n                return t.p.setGroupProperty && t.p.setGroupProperty(PropertyInterface(\"\", i)), function() {\n                    return 10 === e ? r.comp.compInterface(t.p.v) : a();\n                };\n            }\n            return {\n                createEffectsInterface: function(e, r) {\n                    if (e.effectsManager) {\n                        var i, a = [], s = e.data.ef, n = e.effectsManager.effectElements.length;\n                        for(i = 0; i < n; i += 1)a.push(t(s[i], e.effectsManager.effectElements[i], r, e));\n                        var o = e.data.ef || [], h = function(t) {\n                            for(i = 0, n = o.length; i < n;){\n                                if (t === o[i].nm || t === o[i].mn || t === o[i].ix) return a[i];\n                                i += 1;\n                            }\n                            return null;\n                        };\n                        return Object.defineProperty(h, \"numProperties\", {\n                            get: function() {\n                                return o.length;\n                            }\n                        }), h;\n                    }\n                    return null;\n                }\n            };\n        }(), ShapePathInterface = function(t, e, r) {\n            var i = e.sh;\n            function a(t) {\n                return \"Shape\" === t || \"shape\" === t || \"Path\" === t || \"path\" === t || \"ADBE Vector Shape\" === t || 2 === t ? a.path : null;\n            }\n            var s = propertyGroupFactory(a, r);\n            return i.setGroupProperty(PropertyInterface(\"Path\", s)), Object.defineProperties(a, {\n                path: {\n                    get: function() {\n                        return i.k && i.getValue(), i;\n                    }\n                },\n                shape: {\n                    get: function() {\n                        return i.k && i.getValue(), i;\n                    }\n                },\n                _name: {\n                    value: t.nm\n                },\n                ix: {\n                    value: t.ix\n                },\n                propertyIndex: {\n                    value: t.ix\n                },\n                mn: {\n                    value: t.mn\n                },\n                propertyGroup: {\n                    value: r\n                }\n            }), a;\n        }, ShapeExpressionInterface = function() {\n            function t(t, o, m) {\n                var d, u = [], y = t ? t.length : 0;\n                for(d = 0; d < y; d += 1)\"gr\" === t[d].ty ? u.push(e(t[d], o[d], m)) : \"fl\" === t[d].ty ? u.push(r(t[d], o[d], m)) : \"st\" === t[d].ty ? u.push(s(t[d], o[d], m)) : \"tm\" === t[d].ty ? u.push(n(t[d], o[d], m)) : \"tr\" === t[d].ty || (\"el\" === t[d].ty ? u.push(h(t[d], o[d], m)) : \"sr\" === t[d].ty ? u.push(l(t[d], o[d], m)) : \"sh\" === t[d].ty ? u.push(ShapePathInterface(t[d], o[d], m)) : \"rc\" === t[d].ty ? u.push(p(t[d], o[d], m)) : \"rd\" === t[d].ty ? u.push(f(t[d], o[d], m)) : \"rp\" === t[d].ty ? u.push(c(t[d], o[d], m)) : \"gf\" === t[d].ty ? u.push(i(t[d], o[d], m)) : u.push(a(t[d], o[d])));\n                return u;\n            }\n            function e(e, r, i) {\n                var a = function(t) {\n                    switch(t){\n                        case \"ADBE Vectors Group\":\n                        case \"Contents\":\n                        case 2:\n                            return a.content;\n                        default:\n                            return a.transform;\n                    }\n                };\n                a.propertyGroup = propertyGroupFactory(a, i);\n                var s = function(e, r, i) {\n                    var a, s = function(t) {\n                        for(var e = 0, r = a.length; e < r;){\n                            if (a[e]._name === t || a[e].mn === t || a[e].propertyIndex === t || a[e].ix === t || a[e].ind === t) return a[e];\n                            e += 1;\n                        }\n                        return \"number\" == typeof t ? a[t - 1] : null;\n                    };\n                    s.propertyGroup = propertyGroupFactory(s, i), a = t(e.it, r.it, s.propertyGroup), s.numProperties = a.length;\n                    var n = o(e.it[e.it.length - 1], r.it[r.it.length - 1], s.propertyGroup);\n                    return s.transform = n, s.propertyIndex = e.cix, s._name = e.nm, s;\n                }(e, r, a.propertyGroup), n = o(e.it[e.it.length - 1], r.it[r.it.length - 1], a.propertyGroup);\n                return a.content = s, a.transform = n, Object.defineProperty(a, \"_name\", {\n                    get: function() {\n                        return e.nm;\n                    }\n                }), a.numProperties = e.np, a.propertyIndex = e.ix, a.nm = e.nm, a.mn = e.mn, a;\n            }\n            function r(t, e, r) {\n                function i(t) {\n                    return \"Color\" === t || \"color\" === t ? i.color : \"Opacity\" === t || \"opacity\" === t ? i.opacity : null;\n                }\n                return Object.defineProperties(i, {\n                    color: {\n                        get: ExpressionPropertyInterface(e.c)\n                    },\n                    opacity: {\n                        get: ExpressionPropertyInterface(e.o)\n                    },\n                    _name: {\n                        value: t.nm\n                    },\n                    mn: {\n                        value: t.mn\n                    }\n                }), e.c.setGroupProperty(PropertyInterface(\"Color\", r)), e.o.setGroupProperty(PropertyInterface(\"Opacity\", r)), i;\n            }\n            function i(t, e, r) {\n                function i(t) {\n                    return \"Start Point\" === t || \"start point\" === t ? i.startPoint : \"End Point\" === t || \"end point\" === t ? i.endPoint : \"Opacity\" === t || \"opacity\" === t ? i.opacity : null;\n                }\n                return Object.defineProperties(i, {\n                    startPoint: {\n                        get: ExpressionPropertyInterface(e.s)\n                    },\n                    endPoint: {\n                        get: ExpressionPropertyInterface(e.e)\n                    },\n                    opacity: {\n                        get: ExpressionPropertyInterface(e.o)\n                    },\n                    type: {\n                        get: function() {\n                            return \"a\";\n                        }\n                    },\n                    _name: {\n                        value: t.nm\n                    },\n                    mn: {\n                        value: t.mn\n                    }\n                }), e.s.setGroupProperty(PropertyInterface(\"Start Point\", r)), e.e.setGroupProperty(PropertyInterface(\"End Point\", r)), e.o.setGroupProperty(PropertyInterface(\"Opacity\", r)), i;\n            }\n            function a() {\n                return function() {\n                    return null;\n                };\n            }\n            function s(t, e, r) {\n                var i, a = propertyGroupFactory(l, r), s = propertyGroupFactory(h, a);\n                function n(r) {\n                    Object.defineProperty(h, t.d[r].nm, {\n                        get: ExpressionPropertyInterface(e.d.dataProps[r].p)\n                    });\n                }\n                var o = t.d ? t.d.length : 0, h = {};\n                for(i = 0; i < o; i += 1)n(i), e.d.dataProps[i].p.setGroupProperty(s);\n                function l(t) {\n                    return \"Color\" === t || \"color\" === t ? l.color : \"Opacity\" === t || \"opacity\" === t ? l.opacity : \"Stroke Width\" === t || \"stroke width\" === t ? l.strokeWidth : null;\n                }\n                return Object.defineProperties(l, {\n                    color: {\n                        get: ExpressionPropertyInterface(e.c)\n                    },\n                    opacity: {\n                        get: ExpressionPropertyInterface(e.o)\n                    },\n                    strokeWidth: {\n                        get: ExpressionPropertyInterface(e.w)\n                    },\n                    dash: {\n                        get: function() {\n                            return h;\n                        }\n                    },\n                    _name: {\n                        value: t.nm\n                    },\n                    mn: {\n                        value: t.mn\n                    }\n                }), e.c.setGroupProperty(PropertyInterface(\"Color\", a)), e.o.setGroupProperty(PropertyInterface(\"Opacity\", a)), e.w.setGroupProperty(PropertyInterface(\"Stroke Width\", a)), l;\n            }\n            function n(t, e, r) {\n                function i(e) {\n                    return e === t.e.ix || \"End\" === e || \"end\" === e ? i.end : e === t.s.ix ? i.start : e === t.o.ix ? i.offset : null;\n                }\n                var a = propertyGroupFactory(i, r);\n                return i.propertyIndex = t.ix, e.s.setGroupProperty(PropertyInterface(\"Start\", a)), e.e.setGroupProperty(PropertyInterface(\"End\", a)), e.o.setGroupProperty(PropertyInterface(\"Offset\", a)), i.propertyIndex = t.ix, i.propertyGroup = r, Object.defineProperties(i, {\n                    start: {\n                        get: ExpressionPropertyInterface(e.s)\n                    },\n                    end: {\n                        get: ExpressionPropertyInterface(e.e)\n                    },\n                    offset: {\n                        get: ExpressionPropertyInterface(e.o)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.mn = t.mn, i;\n            }\n            function o(t, e, r) {\n                function i(e) {\n                    return t.a.ix === e || \"Anchor Point\" === e ? i.anchorPoint : t.o.ix === e || \"Opacity\" === e ? i.opacity : t.p.ix === e || \"Position\" === e ? i.position : t.r.ix === e || \"Rotation\" === e || \"ADBE Vector Rotation\" === e ? i.rotation : t.s.ix === e || \"Scale\" === e ? i.scale : t.sk && t.sk.ix === e || \"Skew\" === e ? i.skew : t.sa && t.sa.ix === e || \"Skew Axis\" === e ? i.skewAxis : null;\n                }\n                var a = propertyGroupFactory(i, r);\n                return e.transform.mProps.o.setGroupProperty(PropertyInterface(\"Opacity\", a)), e.transform.mProps.p.setGroupProperty(PropertyInterface(\"Position\", a)), e.transform.mProps.a.setGroupProperty(PropertyInterface(\"Anchor Point\", a)), e.transform.mProps.s.setGroupProperty(PropertyInterface(\"Scale\", a)), e.transform.mProps.r.setGroupProperty(PropertyInterface(\"Rotation\", a)), e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(PropertyInterface(\"Skew\", a)), e.transform.mProps.sa.setGroupProperty(PropertyInterface(\"Skew Angle\", a))), e.transform.op.setGroupProperty(PropertyInterface(\"Opacity\", a)), Object.defineProperties(i, {\n                    opacity: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.o)\n                    },\n                    position: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.p)\n                    },\n                    anchorPoint: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.a)\n                    },\n                    scale: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.s)\n                    },\n                    rotation: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.r)\n                    },\n                    skew: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.sk)\n                    },\n                    skewAxis: {\n                        get: ExpressionPropertyInterface(e.transform.mProps.sa)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.ty = \"tr\", i.mn = t.mn, i.propertyGroup = r, i;\n            }\n            function h(t, e, r) {\n                function i(e) {\n                    return t.p.ix === e ? i.position : t.s.ix === e ? i.size : null;\n                }\n                var a = propertyGroupFactory(i, r);\n                i.propertyIndex = t.ix;\n                var s = \"tm\" === e.sh.ty ? e.sh.prop : e.sh;\n                return s.s.setGroupProperty(PropertyInterface(\"Size\", a)), s.p.setGroupProperty(PropertyInterface(\"Position\", a)), Object.defineProperties(i, {\n                    size: {\n                        get: ExpressionPropertyInterface(s.s)\n                    },\n                    position: {\n                        get: ExpressionPropertyInterface(s.p)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.mn = t.mn, i;\n            }\n            function l(t, e, r) {\n                function i(e) {\n                    return t.p.ix === e ? i.position : t.r.ix === e ? i.rotation : t.pt.ix === e ? i.points : t.or.ix === e || \"ADBE Vector Star Outer Radius\" === e ? i.outerRadius : t.os.ix === e ? i.outerRoundness : !t.ir || t.ir.ix !== e && \"ADBE Vector Star Inner Radius\" !== e ? t.is && t.is.ix === e ? i.innerRoundness : null : i.innerRadius;\n                }\n                var a = propertyGroupFactory(i, r), s = \"tm\" === e.sh.ty ? e.sh.prop : e.sh;\n                return i.propertyIndex = t.ix, s.or.setGroupProperty(PropertyInterface(\"Outer Radius\", a)), s.os.setGroupProperty(PropertyInterface(\"Outer Roundness\", a)), s.pt.setGroupProperty(PropertyInterface(\"Points\", a)), s.p.setGroupProperty(PropertyInterface(\"Position\", a)), s.r.setGroupProperty(PropertyInterface(\"Rotation\", a)), t.ir && (s.ir.setGroupProperty(PropertyInterface(\"Inner Radius\", a)), s.is.setGroupProperty(PropertyInterface(\"Inner Roundness\", a))), Object.defineProperties(i, {\n                    position: {\n                        get: ExpressionPropertyInterface(s.p)\n                    },\n                    rotation: {\n                        get: ExpressionPropertyInterface(s.r)\n                    },\n                    points: {\n                        get: ExpressionPropertyInterface(s.pt)\n                    },\n                    outerRadius: {\n                        get: ExpressionPropertyInterface(s.or)\n                    },\n                    outerRoundness: {\n                        get: ExpressionPropertyInterface(s.os)\n                    },\n                    innerRadius: {\n                        get: ExpressionPropertyInterface(s.ir)\n                    },\n                    innerRoundness: {\n                        get: ExpressionPropertyInterface(s.is)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.mn = t.mn, i;\n            }\n            function p(t, e, r) {\n                function i(e) {\n                    return t.p.ix === e ? i.position : t.r.ix === e ? i.roundness : t.s.ix === e || \"Size\" === e || \"ADBE Vector Rect Size\" === e ? i.size : null;\n                }\n                var a = propertyGroupFactory(i, r), s = \"tm\" === e.sh.ty ? e.sh.prop : e.sh;\n                return i.propertyIndex = t.ix, s.p.setGroupProperty(PropertyInterface(\"Position\", a)), s.s.setGroupProperty(PropertyInterface(\"Size\", a)), s.r.setGroupProperty(PropertyInterface(\"Rotation\", a)), Object.defineProperties(i, {\n                    position: {\n                        get: ExpressionPropertyInterface(s.p)\n                    },\n                    roundness: {\n                        get: ExpressionPropertyInterface(s.r)\n                    },\n                    size: {\n                        get: ExpressionPropertyInterface(s.s)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.mn = t.mn, i;\n            }\n            function f(t, e, r) {\n                function i(e) {\n                    return t.r.ix === e || \"Round Corners 1\" === e ? i.radius : null;\n                }\n                var a = propertyGroupFactory(i, r), s = e;\n                return i.propertyIndex = t.ix, s.rd.setGroupProperty(PropertyInterface(\"Radius\", a)), Object.defineProperties(i, {\n                    radius: {\n                        get: ExpressionPropertyInterface(s.rd)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.mn = t.mn, i;\n            }\n            function c(t, e, r) {\n                function i(e) {\n                    return t.c.ix === e || \"Copies\" === e ? i.copies : t.o.ix === e || \"Offset\" === e ? i.offset : null;\n                }\n                var a = propertyGroupFactory(i, r), s = e;\n                return i.propertyIndex = t.ix, s.c.setGroupProperty(PropertyInterface(\"Copies\", a)), s.o.setGroupProperty(PropertyInterface(\"Offset\", a)), Object.defineProperties(i, {\n                    copies: {\n                        get: ExpressionPropertyInterface(s.c)\n                    },\n                    offset: {\n                        get: ExpressionPropertyInterface(s.o)\n                    },\n                    _name: {\n                        value: t.nm\n                    }\n                }), i.mn = t.mn, i;\n            }\n            return function(e, r, i) {\n                var a;\n                function s(t) {\n                    if (\"number\" == typeof t) return 0 === (t = void 0 === t ? 1 : t) ? i : a[t - 1];\n                    for(var e = 0, r = a.length; e < r;){\n                        if (a[e]._name === t) return a[e];\n                        e += 1;\n                    }\n                    return null;\n                }\n                return s.propertyGroup = propertyGroupFactory(s, function() {\n                    return i;\n                }), a = t(e, r, s.propertyGroup), s.numProperties = a.length, s._name = \"Contents\", s;\n            };\n        }(), TextExpressionInterface = function(t) {\n            var e, r;\n            function i(t) {\n                switch(t){\n                    case \"ADBE Text Document\":\n                        return i.sourceText;\n                    default:\n                        return null;\n                }\n            }\n            return Object.defineProperty(i, \"sourceText\", {\n                get: function() {\n                    t.textProperty.getValue();\n                    var i = t.textProperty.currentData.t;\n                    return i !== e && (e = t.textProperty.currentData.t, (r = new String(i)).value = i || new String(i), Object.defineProperty(r, \"style\", {\n                        get: function() {\n                            return {\n                                fillColor: t.textProperty.currentData.fc\n                            };\n                        }\n                    })), r;\n                }\n            }), i;\n        };\n        function _typeof$2(t) {\n            return (_typeof$2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        var FootageInterface = (dataInterfaceFactory = function(t) {\n            function e(t) {\n                return \"Outline\" === t ? e.outlineInterface() : null;\n            }\n            return e._name = \"Outline\", e.outlineInterface = function(t) {\n                var e = \"\", r = t.getFootageData();\n                function i(t) {\n                    if (r[t]) return e = t, \"object\" === _typeof$2(r = r[t]) ? i : r;\n                    var a = t.indexOf(e);\n                    if (-1 !== a) {\n                        var s = parseInt(t.substr(a + e.length), 10);\n                        return \"object\" === _typeof$2(r = r[s]) ? i : r;\n                    }\n                    return \"\";\n                }\n                return function() {\n                    return e = \"\", r = t.getFootageData(), i;\n                };\n            }(t), e;\n        }, function(t) {\n            function e(t) {\n                return \"Data\" === t ? e.dataInterface : null;\n            }\n            return e._name = \"Data\", e.dataInterface = dataInterfaceFactory(t), e;\n        }), dataInterfaceFactory, interfaces = {\n            layer: LayerExpressionInterface,\n            effects: EffectsExpressionInterface,\n            comp: CompExpressionInterface,\n            shape: ShapeExpressionInterface,\n            text: TextExpressionInterface,\n            footage: FootageInterface\n        };\n        function getInterface(t) {\n            return interfaces[t] || null;\n        }\n        function _typeof$1(t) {\n            return (_typeof$1 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        function seedRandom(t, e) {\n            var r = this, i = e.pow(256, 6), a = e.pow(2, 52), s = 2 * a;\n            function n(t) {\n                var e, r = t.length, i = this, a = 0, s = i.i = i.j = 0, n = i.S = [];\n                for(r || (t = [\n                    r++\n                ]); a < 256;)n[a] = a++;\n                for(a = 0; a < 256; a++)n[a] = n[s = 255 & s + t[a % r] + (e = n[a])], n[s] = e;\n                i.g = function(t) {\n                    for(var e, r = 0, a = i.i, s = i.j, n = i.S; t--;)e = n[a = 255 & a + 1], r = 256 * r + n[255 & (n[a] = n[s = 255 & s + e]) + (n[s] = e)];\n                    return i.i = a, i.j = s, r;\n                };\n            }\n            function o(t, e) {\n                return e.i = t.i, e.j = t.j, e.S = t.S.slice(), e;\n            }\n            function h(t, e) {\n                for(var r, i = t + \"\", a = 0; a < i.length;)e[255 & a] = 255 & (r ^= 19 * e[255 & a]) + i.charCodeAt(a++);\n                return l(e);\n            }\n            function l(t) {\n                return String.fromCharCode.apply(0, t);\n            }\n            e.seedrandom = function(p, f, c) {\n                var m = [], d = h(function t(e, r) {\n                    var i, a = [], s = _typeof$1(e);\n                    if (r && \"object\" == s) for(i in e)try {\n                        a.push(t(e[i], r - 1));\n                    } catch (t) {}\n                    return a.length ? a : \"string\" == s ? e : e + \"\\x00\";\n                }((f = !0 === f ? {\n                    entropy: !0\n                } : f || {}).entropy ? [\n                    p,\n                    l(t)\n                ] : null === p ? function() {\n                    try {\n                        void 0;\n                        var e = new Uint8Array(256);\n                        return (r.crypto || r.msCrypto).getRandomValues(e), l(e);\n                    } catch (e) {\n                        var i = r.navigator, a = i && i.plugins;\n                        return [\n                            +new Date,\n                            r,\n                            a,\n                            r.screen,\n                            l(t)\n                        ];\n                    }\n                }() : p, 3), m), u = new n(m), y = function() {\n                    for(var t = u.g(6), e = i, r = 0; t < a;)t = 256 * (t + r), e *= 256, r = u.g(1);\n                    for(; t >= s;)t /= 2, e /= 2, r >>>= 1;\n                    return (t + r) / e;\n                };\n                return y.int32 = function() {\n                    return 0 | u.g(4);\n                }, y.quick = function() {\n                    return u.g(4) / 4294967296;\n                }, y.double = y, h(l(u.S), t), (f.pass || c || function(t, r, i, a) {\n                    return a && (a.S && o(a, u), t.state = function() {\n                        return o(u, {});\n                    }), i ? (e.random = t, r) : t;\n                })(y, d, \"global\" in f ? f.global : this == e, f.state);\n            }, h(e.random(), t);\n        }\n        function initialize$2(t) {\n            seedRandom([], t);\n        }\n        var propTypes = {\n            SHAPE: \"shape\"\n        };\n        function _typeof(t) {\n            return (_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                return typeof t;\n            } : function(t) {\n                return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n            })(t);\n        }\n        var ExpressionManager = function() {\n            var ob = {}, Math = BMMath, window = null, document = null, XMLHttpRequest = null, fetch = null, frames = null;\n            function $bm_isInstanceOfArray(t) {\n                return t.constructor === Array || t.constructor === Float32Array;\n            }\n            function isNumerable(t, e) {\n                return \"number\" === t || \"boolean\" === t || \"string\" === t || e instanceof Number;\n            }\n            function $bm_neg(t) {\n                var e = _typeof(t);\n                if (\"number\" === e || \"boolean\" === e || t instanceof Number) return -t;\n                if ($bm_isInstanceOfArray(t)) {\n                    var r, i = t.length, a = [];\n                    for(r = 0; r < i; r += 1)a[r] = -t[r];\n                    return a;\n                }\n                return t.propType ? t.v : -t;\n            }\n            initialize$2(BMMath);\n            var easeInBez = BezierFactory.getBezierEasing(.333, 0, .833, .833, \"easeIn\").get, easeOutBez = BezierFactory.getBezierEasing(.167, .167, .667, 1, \"easeOut\").get, easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, \"easeInOut\").get;\n            function sum(t, e) {\n                var r = _typeof(t), i = _typeof(e);\n                if (\"string\" === r || \"string\" === i) return t + e;\n                if (isNumerable(r, t) && isNumerable(i, e)) return t + e;\n                if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return (t = t.slice(0))[0] += e, t;\n                if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return (e = e.slice(0))[0] = t + e[0], e;\n                if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {\n                    for(var a = 0, s = t.length, n = e.length, o = []; a < s || a < n;)(\"number\" == typeof t[a] || t[a] instanceof Number) && (\"number\" == typeof e[a] || e[a] instanceof Number) ? o[a] = t[a] + e[a] : o[a] = void 0 === e[a] ? t[a] : t[a] || e[a], a += 1;\n                    return o;\n                }\n                return 0;\n            }\n            var add = sum;\n            function sub(t, e) {\n                var r = _typeof(t), i = _typeof(e);\n                if (isNumerable(r, t) && isNumerable(i, e)) return \"string\" === r && (t = parseInt(t, 10)), \"string\" === i && (e = parseInt(e, 10)), t - e;\n                if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return (t = t.slice(0))[0] -= e, t;\n                if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return (e = e.slice(0))[0] = t - e[0], e;\n                if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {\n                    for(var a = 0, s = t.length, n = e.length, o = []; a < s || a < n;)(\"number\" == typeof t[a] || t[a] instanceof Number) && (\"number\" == typeof e[a] || e[a] instanceof Number) ? o[a] = t[a] - e[a] : o[a] = void 0 === e[a] ? t[a] : t[a] || e[a], a += 1;\n                    return o;\n                }\n                return 0;\n            }\n            function mul(t, e) {\n                var r, i, a, s = _typeof(t), n = _typeof(e);\n                if (isNumerable(s, t) && isNumerable(n, e)) return t * e;\n                if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {\n                    for(a = t.length, r = createTypedArray(\"float32\", a), i = 0; i < a; i += 1)r[i] = t[i] * e;\n                    return r;\n                }\n                if (isNumerable(s, t) && $bm_isInstanceOfArray(e)) {\n                    for(a = e.length, r = createTypedArray(\"float32\", a), i = 0; i < a; i += 1)r[i] = t * e[i];\n                    return r;\n                }\n                return 0;\n            }\n            function div(t, e) {\n                var r, i, a, s = _typeof(t), n = _typeof(e);\n                if (isNumerable(s, t) && isNumerable(n, e)) return t / e;\n                if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {\n                    for(a = t.length, r = createTypedArray(\"float32\", a), i = 0; i < a; i += 1)r[i] = t[i] / e;\n                    return r;\n                }\n                if (isNumerable(s, t) && $bm_isInstanceOfArray(e)) {\n                    for(a = e.length, r = createTypedArray(\"float32\", a), i = 0; i < a; i += 1)r[i] = t / e[i];\n                    return r;\n                }\n                return 0;\n            }\n            function mod(t, e) {\n                return \"string\" == typeof t && (t = parseInt(t, 10)), \"string\" == typeof e && (e = parseInt(e, 10)), t % e;\n            }\n            var $bm_sum = sum, $bm_sub = sub, $bm_mul = mul, $bm_div = div, $bm_mod = mod;\n            function clamp(t, e, r) {\n                if (e > r) {\n                    var i = r;\n                    r = e, e = i;\n                }\n                return Math.min(Math.max(t, e), r);\n            }\n            function radiansToDegrees(t) {\n                return t / degToRads;\n            }\n            var radians_to_degrees = radiansToDegrees;\n            function degreesToRadians(t) {\n                return t * degToRads;\n            }\n            var degrees_to_radians = radiansToDegrees, helperLengthArray = [\n                0,\n                0,\n                0,\n                0,\n                0,\n                0\n            ];\n            function length(t, e) {\n                if (\"number\" == typeof t || t instanceof Number) return e = e || 0, Math.abs(t - e);\n                var r;\n                e || (e = helperLengthArray);\n                var i = Math.min(t.length, e.length), a = 0;\n                for(r = 0; r < i; r += 1)a += Math.pow(e[r] - t[r], 2);\n                return Math.sqrt(a);\n            }\n            function normalize(t) {\n                return div(t, length(t));\n            }\n            function rgbToHsl(t) {\n                var e, r, i = t[0], a = t[1], s = t[2], n = Math.max(i, a, s), o = Math.min(i, a, s), h = (n + o) / 2;\n                if (n === o) e = 0, r = 0;\n                else {\n                    var l = n - o;\n                    switch(r = h > .5 ? l / (2 - n - o) : l / (n + o), n){\n                        case i:\n                            e = (a - s) / l + (a < s ? 6 : 0);\n                            break;\n                        case a:\n                            e = (s - i) / l + 2;\n                            break;\n                        case s:\n                            e = (i - a) / l + 4;\n                    }\n                    e /= 6;\n                }\n                return [\n                    e,\n                    r,\n                    h,\n                    t[3]\n                ];\n            }\n            function hue2rgb(t, e, r) {\n                return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? t + 6 * (e - t) * r : r < .5 ? e : r < 2 / 3 ? t + (e - t) * (2 / 3 - r) * 6 : t;\n            }\n            function hslToRgb(t) {\n                var e, r, i, a = t[0], s = t[1], n = t[2];\n                if (0 === s) e = n, i = n, r = n;\n                else {\n                    var o = n < .5 ? n * (1 + s) : n + s - n * s, h = 2 * n - o;\n                    e = hue2rgb(h, o, a + 1 / 3), r = hue2rgb(h, o, a), i = hue2rgb(h, o, a - 1 / 3);\n                }\n                return [\n                    e,\n                    r,\n                    i,\n                    t[3]\n                ];\n            }\n            function linear(t, e, r, i, a) {\n                if (void 0 !== i && void 0 !== a || (i = e, a = r, e = 0, r = 1), r < e) {\n                    var s = r;\n                    r = e, e = s;\n                }\n                if (t <= e) return i;\n                if (t >= r) return a;\n                var n, o = r === e ? 0 : (t - e) / (r - e);\n                if (!i.length) return i + (a - i) * o;\n                var h = i.length, l = createTypedArray(\"float32\", h);\n                for(n = 0; n < h; n += 1)l[n] = i[n] + (a[n] - i[n]) * o;\n                return l;\n            }\n            function random(t, e) {\n                if (void 0 === e && (void 0 === t ? (t = 0, e = 1) : (e = t, t = void 0)), e.length) {\n                    var r, i = e.length;\n                    t || (t = createTypedArray(\"float32\", i));\n                    var a = createTypedArray(\"float32\", i), s = BMMath.random();\n                    for(r = 0; r < i; r += 1)a[r] = t[r] + s * (e[r] - t[r]);\n                    return a;\n                }\n                return void 0 === t && (t = 0), t + BMMath.random() * (e - t);\n            }\n            function createPath(t, e, r, i) {\n                var a, s = t.length, n = shapePool.newElement();\n                n.setPathData(!!i, s);\n                var o, h, l = [\n                    0,\n                    0\n                ];\n                for(a = 0; a < s; a += 1)o = e && e[a] ? e[a] : l, h = r && r[a] ? r[a] : l, n.setTripleAt(t[a][0], t[a][1], h[0] + t[a][0], h[1] + t[a][1], o[0] + t[a][0], o[1] + t[a][1], a, !0);\n                return n;\n            }\n            function initiateExpression(elem, data, property) {\n                function noOp(t) {\n                    return t;\n                }\n                if (!elem.globalData.renderConfig.runExpressions) return noOp;\n                var val = data.x, needsVelocity = /velocity(?![\\w\\d])/.test(val), _needsRandom = -1 !== val.indexOf(\"random\"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;\n                thisProperty.valueAtTime = thisProperty.getValueAtTime, Object.defineProperty(thisProperty, \"value\", {\n                    get: function() {\n                        return thisProperty.v;\n                    }\n                }), elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate, elem.comp.displayStartTime = 0;\n                var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval(\"[function _expression_function(){\" + val + \";scoped_bm_rt=$bm_rt}]\")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || !0 !== this.data.hd, wiggle = (function(t, e) {\n                    var r, i, a = this.pv.length ? this.pv.length : 1, s = createTypedArray(\"float32\", a);\n                    var n = Math.floor(5 * time);\n                    for(r = 0, i = 0; r < n;){\n                        for(i = 0; i < a; i += 1)s[i] += -e + 2 * e * BMMath.random();\n                        r += 1;\n                    }\n                    var o = 5 * time, h = o - Math.floor(o), l = createTypedArray(\"float32\", a);\n                    if (a > 1) {\n                        for(i = 0; i < a; i += 1)l[i] = this.pv[i] + s[i] + (-e + 2 * e * BMMath.random()) * h;\n                        return l;\n                    }\n                    return this.pv + s[0] + (-e + 2 * e * BMMath.random()) * h;\n                }).bind(this);\n                function loopInDuration(t, e) {\n                    return loopIn(t, e, !0);\n                }\n                function loopOutDuration(t, e) {\n                    return loopOut(t, e, !0);\n                }\n                thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty), loop_in = loopIn), thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty), loop_out = loopOut), thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)), this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)), this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));\n                var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;\n                function lookAt(t, e) {\n                    var r = [\n                        e[0] - t[0],\n                        e[1] - t[1],\n                        e[2] - t[2]\n                    ], i = Math.atan2(r[0], Math.sqrt(r[1] * r[1] + r[2] * r[2])) / degToRads;\n                    return [\n                        -Math.atan2(r[1], r[2]) / degToRads,\n                        i,\n                        0\n                    ];\n                }\n                function easeOut(t, e, r, i, a) {\n                    return applyEase(easeOutBez, t, e, r, i, a);\n                }\n                function easeIn(t, e, r, i, a) {\n                    return applyEase(easeInBez, t, e, r, i, a);\n                }\n                function ease(t, e, r, i, a) {\n                    return applyEase(easeInOutBez, t, e, r, i, a);\n                }\n                function applyEase(t, e, r, i, a, s) {\n                    void 0 === a ? (a = r, s = i) : e = (e - r) / (i - r), e > 1 ? e = 1 : e < 0 && (e = 0);\n                    var n = t(e);\n                    if ($bm_isInstanceOfArray(a)) {\n                        var o, h = a.length, l = createTypedArray(\"float32\", h);\n                        for(o = 0; o < h; o += 1)l[o] = (s[o] - a[o]) * n + a[o];\n                        return l;\n                    }\n                    return (s - a) * n + a;\n                }\n                function nearestKey(t) {\n                    var e, r, i, a = data.k.length;\n                    if (data.k.length && \"number\" != typeof data.k[0]) if (r = -1, (t *= elem.comp.globalData.frameRate) < data.k[0].t) r = 1, i = data.k[0].t;\n                    else {\n                        for(e = 0; e < a - 1; e += 1){\n                            if (t === data.k[e].t) {\n                                r = e + 1, i = data.k[e].t;\n                                break;\n                            }\n                            if (t > data.k[e].t && t < data.k[e + 1].t) {\n                                t - data.k[e].t > data.k[e + 1].t - t ? (r = e + 2, i = data.k[e + 1].t) : (r = e + 1, i = data.k[e].t);\n                                break;\n                            }\n                        }\n                        -1 === r && (r = e + 1, i = data.k[e].t);\n                    }\n                    else r = 0, i = 0;\n                    var s = {};\n                    return s.index = r, s.time = i / elem.comp.globalData.frameRate, s;\n                }\n                function key(t) {\n                    var e, r, i;\n                    if (!data.k.length || \"number\" == typeof data.k[0]) throw new Error(\"The property has no keyframe at index \" + t);\n                    t -= 1, e = {\n                        time: data.k[t].t / elem.comp.globalData.frameRate,\n                        value: []\n                    };\n                    var a = Object.prototype.hasOwnProperty.call(data.k[t], \"s\") ? data.k[t].s : data.k[t - 1].e;\n                    for(i = a.length, r = 0; r < i; r += 1)e[r] = a[r], e.value[r] = a[r];\n                    return e;\n                }\n                function framesToTime(t, e) {\n                    return e || (e = elem.comp.globalData.frameRate), t / e;\n                }\n                function timeToFrames(t, e) {\n                    return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e;\n                }\n                function seedRandom(t) {\n                    BMMath.seedrandom(randSeed + t);\n                }\n                function sourceRectAtTime() {\n                    return elem.sourceRectAtTime();\n                }\n                function substring(t, e) {\n                    return \"string\" == typeof value ? void 0 === e ? value.substring(t) : value.substring(t, e) : \"\";\n                }\n                function substr(t, e) {\n                    return \"string\" == typeof value ? void 0 === e ? value.substr(t) : value.substr(t, e) : \"\";\n                }\n                function posterizeTime(t) {\n                    time = 0 === t ? 0 : Math.floor(time * t) / t, value = valueAtTime(time);\n                }\n                var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;\n                function executeExpression(t) {\n                    return value = t, this.frameExpressionId === elem.globalData.frameId && \"textSelector\" !== this.propType ? value : (\"textSelector\" === this.propType && (textIndex = this.textIndex, textTotal = this.textTotal, selectorValue = this.selectorValue), thisLayer || (text = elem.layerInterface.text, thisLayer = elem.layerInterface, thisComp = elem.comp.compInterface, toWorld = thisLayer.toWorld.bind(thisLayer), fromWorld = thisLayer.fromWorld.bind(thisLayer), fromComp = thisLayer.fromComp.bind(thisLayer), toComp = thisLayer.toComp.bind(thisLayer), mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null, fromCompToSurface = fromComp), transform || (transform = elem.layerInterface(\"ADBE Transform Group\"), $bm_transform = transform, transform && (anchorPoint = transform.anchorPoint)), 4 !== elemType || content || (content = thisLayer(\"ADBE Root Vectors Group\")), effect || (effect = thisLayer(4)), (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface), time = this.comp.renderedFrame / this.comp.globalData.frameRate, _needsRandom && seedRandom(randSeed + time), needsVelocity && (velocity = velocityAtTime(time)), expression_function(), this.frameExpressionId = elem.globalData.frameId, scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt);\n                }\n                return executeExpression.__preventDeadCodeRemoval = [\n                    $bm_transform,\n                    anchorPoint,\n                    time,\n                    velocity,\n                    inPoint,\n                    outPoint,\n                    width,\n                    height,\n                    name,\n                    loop_in,\n                    loop_out,\n                    smooth,\n                    toComp,\n                    fromCompToSurface,\n                    toWorld,\n                    fromWorld,\n                    mask,\n                    position,\n                    rotation,\n                    scale,\n                    thisComp,\n                    numKeys,\n                    active,\n                    wiggle,\n                    loopInDuration,\n                    loopOutDuration,\n                    comp,\n                    lookAt,\n                    easeOut,\n                    easeIn,\n                    ease,\n                    nearestKey,\n                    key,\n                    text,\n                    textIndex,\n                    textTotal,\n                    selectorValue,\n                    framesToTime,\n                    timeToFrames,\n                    sourceRectAtTime,\n                    substring,\n                    substr,\n                    posterizeTime,\n                    index,\n                    globalData\n                ], executeExpression;\n            }\n            return ob.initiateExpression = initiateExpression, ob.__preventDeadCodeRemoval = [\n                window,\n                document,\n                XMLHttpRequest,\n                fetch,\n                frames,\n                $bm_neg,\n                add,\n                $bm_sum,\n                $bm_sub,\n                $bm_mul,\n                $bm_div,\n                $bm_mod,\n                clamp,\n                radians_to_degrees,\n                degreesToRadians,\n                degrees_to_radians,\n                normalize,\n                rgbToHsl,\n                hslToRgb,\n                linear,\n                random,\n                createPath\n            ], ob;\n        }(), expressionHelpers = {\n            searchExpressions: function(t, e, r) {\n                e.x && (r.k = !0, r.x = !0, r.initiateExpression = ExpressionManager.initiateExpression, r.effectsSequence.push(r.initiateExpression(t, e, r).bind(r)));\n            },\n            getSpeedAtTime: function(t) {\n                var e = this.getValueAtTime(t), r = this.getValueAtTime(t + -.01), i = 0;\n                if (e.length) {\n                    var a;\n                    for(a = 0; a < e.length; a += 1)i += Math.pow(r[a] - e[a], 2);\n                    i = 100 * Math.sqrt(i);\n                } else i = 0;\n                return i;\n            },\n            getVelocityAtTime: function(t) {\n                if (void 0 !== this.vel) return this.vel;\n                var e, r, i = this.getValueAtTime(t), a = this.getValueAtTime(t + -.001);\n                if (i.length) for(e = createTypedArray(\"float32\", i.length), r = 0; r < i.length; r += 1)e[r] = (a[r] - i[r]) / -.001;\n                else e = (a - i) / -.001;\n                return e;\n            },\n            getValueAtTime: function(t) {\n                return t *= this.elem.globalData.frameRate, (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0, this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime), this._cachingAtTime.lastFrame = t), this._cachingAtTime.value;\n            },\n            getStaticValueAtTime: function() {\n                return this.pv;\n            },\n            setGroupProperty: function(t) {\n                this.propertyGroup = t;\n            }\n        };\n        function addPropertyDecorator() {\n            function t(t, e, r) {\n                if (!this.k || !this.keyframes) return this.pv;\n                t = t ? t.toLowerCase() : \"\";\n                var i, a, s, n, o, h = this.comp.renderedFrame, l = this.keyframes, p = l[l.length - 1].t;\n                if (h <= p) return this.pv;\n                if (r ? a = p - (i = e ? Math.abs(p - this.elem.comp.globalData.frameRate * e) : Math.max(0, p - this.elem.data.ip)) : ((!e || e > l.length - 1) && (e = l.length - 1), i = p - (a = l[l.length - 1 - e].t)), \"pingpong\" === t) {\n                    if (Math.floor((h - a) / i) % 2 != 0) return this.getValueAtTime((i - (h - a) % i + a) / this.comp.globalData.frameRate, 0);\n                } else {\n                    if (\"offset\" === t) {\n                        var f = this.getValueAtTime(a / this.comp.globalData.frameRate, 0), c = this.getValueAtTime(p / this.comp.globalData.frameRate, 0), m = this.getValueAtTime(((h - a) % i + a) / this.comp.globalData.frameRate, 0), d = Math.floor((h - a) / i);\n                        if (this.pv.length) {\n                            for(n = (o = new Array(f.length)).length, s = 0; s < n; s += 1)o[s] = (c[s] - f[s]) * d + m[s];\n                            return o;\n                        }\n                        return (c - f) * d + m;\n                    }\n                    if (\"continue\" === t) {\n                        var u = this.getValueAtTime(p / this.comp.globalData.frameRate, 0), y = this.getValueAtTime((p - .001) / this.comp.globalData.frameRate, 0);\n                        if (this.pv.length) {\n                            for(n = (o = new Array(u.length)).length, s = 0; s < n; s += 1)o[s] = u[s] + (u[s] - y[s]) * ((h - p) / this.comp.globalData.frameRate) / 5e-4;\n                            return o;\n                        }\n                        return u + (h - p) / .001 * (u - y);\n                    }\n                }\n                return this.getValueAtTime(((h - a) % i + a) / this.comp.globalData.frameRate, 0);\n            }\n            function e(t, e, r) {\n                if (!this.k) return this.pv;\n                t = t ? t.toLowerCase() : \"\";\n                var i, a, s, n, o, h = this.comp.renderedFrame, l = this.keyframes, p = l[0].t;\n                if (h >= p) return this.pv;\n                if (r ? a = p + (i = e ? Math.abs(this.elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - p)) : ((!e || e > l.length - 1) && (e = l.length - 1), i = (a = l[e].t) - p), \"pingpong\" === t) {\n                    if (Math.floor((p - h) / i) % 2 == 0) return this.getValueAtTime(((p - h) % i + p) / this.comp.globalData.frameRate, 0);\n                } else {\n                    if (\"offset\" === t) {\n                        var f = this.getValueAtTime(p / this.comp.globalData.frameRate, 0), c = this.getValueAtTime(a / this.comp.globalData.frameRate, 0), m = this.getValueAtTime((i - (p - h) % i + p) / this.comp.globalData.frameRate, 0), d = Math.floor((p - h) / i) + 1;\n                        if (this.pv.length) {\n                            for(n = (o = new Array(f.length)).length, s = 0; s < n; s += 1)o[s] = m[s] - (c[s] - f[s]) * d;\n                            return o;\n                        }\n                        return m - (c - f) * d;\n                    }\n                    if (\"continue\" === t) {\n                        var u = this.getValueAtTime(p / this.comp.globalData.frameRate, 0), y = this.getValueAtTime((p + .001) / this.comp.globalData.frameRate, 0);\n                        if (this.pv.length) {\n                            for(n = (o = new Array(u.length)).length, s = 0; s < n; s += 1)o[s] = u[s] + (u[s] - y[s]) * (p - h) / .001;\n                            return o;\n                        }\n                        return u + (u - y) * (p - h) / .001;\n                    }\n                }\n                return this.getValueAtTime((i - ((p - h) % i + p)) / this.comp.globalData.frameRate, 0);\n            }\n            function r(t, e) {\n                if (!this.k) return this.pv;\n                if (t = .5 * (t || .4), (e = Math.floor(e || 5)) <= 1) return this.pv;\n                var r, i, a = this.comp.renderedFrame / this.comp.globalData.frameRate, s = a - t, n = e > 1 ? (a + t - s) / (e - 1) : 1, o = 0, h = 0;\n                for(r = this.pv.length ? createTypedArray(\"float32\", this.pv.length) : 0; o < e;){\n                    if (i = this.getValueAtTime(s + o * n), this.pv.length) for(h = 0; h < this.pv.length; h += 1)r[h] += i[h];\n                    else r += i;\n                    o += 1;\n                }\n                if (this.pv.length) for(h = 0; h < this.pv.length; h += 1)r[h] /= e;\n                else r /= e;\n                return r;\n            }\n            function i(t) {\n                this._transformCachingAtTime || (this._transformCachingAtTime = {\n                    v: new Matrix\n                });\n                var e = this._transformCachingAtTime.v;\n                if (e.cloneFromProps(this.pre.props), this.appliedTransformations < 1) {\n                    var r = this.a.getValueAtTime(t);\n                    e.translate(-r[0] * this.a.mult, -r[1] * this.a.mult, r[2] * this.a.mult);\n                }\n                if (this.appliedTransformations < 2) {\n                    var i = this.s.getValueAtTime(t);\n                    e.scale(i[0] * this.s.mult, i[1] * this.s.mult, i[2] * this.s.mult);\n                }\n                if (this.sk && this.appliedTransformations < 3) {\n                    var a = this.sk.getValueAtTime(t), s = this.sa.getValueAtTime(t);\n                    e.skewFromAxis(-a * this.sk.mult, s * this.sa.mult);\n                }\n                if (this.r && this.appliedTransformations < 4) {\n                    var n = this.r.getValueAtTime(t);\n                    e.rotate(-n * this.r.mult);\n                } else if (!this.r && this.appliedTransformations < 4) {\n                    var o = this.rz.getValueAtTime(t), h = this.ry.getValueAtTime(t), l = this.rx.getValueAtTime(t), p = this.or.getValueAtTime(t);\n                    e.rotateZ(-o * this.rz.mult).rotateY(h * this.ry.mult).rotateX(l * this.rx.mult).rotateZ(-p[2] * this.or.mult).rotateY(p[1] * this.or.mult).rotateX(p[0] * this.or.mult);\n                }\n                if (this.data.p && this.data.p.s) {\n                    var f = this.px.getValueAtTime(t), c = this.py.getValueAtTime(t);\n                    if (this.data.p.z) {\n                        var m = this.pz.getValueAtTime(t);\n                        e.translate(f * this.px.mult, c * this.py.mult, -m * this.pz.mult);\n                    } else e.translate(f * this.px.mult, c * this.py.mult, 0);\n                } else {\n                    var d = this.p.getValueAtTime(t);\n                    e.translate(d[0] * this.p.mult, d[1] * this.p.mult, -d[2] * this.p.mult);\n                }\n                return e;\n            }\n            function a() {\n                return this.v.clone(new Matrix);\n            }\n            var s = TransformPropertyFactory.getTransformProperty;\n            TransformPropertyFactory.getTransformProperty = function(t, e, r) {\n                var n = s(t, e, r);\n                return n.dynamicProperties.length ? n.getValueAtTime = i.bind(n) : n.getValueAtTime = a.bind(n), n.setGroupProperty = expressionHelpers.setGroupProperty, n;\n            };\n            var n = PropertyFactory.getProp;\n            PropertyFactory.getProp = function(i, a, s, o, h) {\n                var l = n(i, a, s, o, h);\n                l.kf ? l.getValueAtTime = expressionHelpers.getValueAtTime.bind(l) : l.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(l), l.setGroupProperty = expressionHelpers.setGroupProperty, l.loopOut = t, l.loopIn = e, l.smooth = r, l.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(l), l.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(l), l.numKeys = 1 === a.a ? a.k.length : 0, l.propertyIndex = a.ix;\n                var p = 0;\n                return 0 !== s && (p = createTypedArray(\"float32\", 1 === a.a ? a.k[0].s.length : a.k.length)), l._cachingAtTime = {\n                    lastFrame: initialDefaultFrame,\n                    lastIndex: 0,\n                    value: p\n                }, expressionHelpers.searchExpressions(i, a, l), l.k && h.addDynamicProperty(l), l;\n            };\n            var o = ShapePropertyFactory.getConstructorFunction(), h = ShapePropertyFactory.getKeyframedConstructorFunction();\n            function l() {}\n            l.prototype = {\n                vertices: function(t, e) {\n                    this.k && this.getValue();\n                    var r, i = this.v;\n                    void 0 !== e && (i = this.getValueAtTime(e, 0));\n                    var a = i._length, s = i[t], n = i.v, o = createSizedArray(a);\n                    for(r = 0; r < a; r += 1)o[r] = \"i\" === t || \"o\" === t ? [\n                        s[r][0] - n[r][0],\n                        s[r][1] - n[r][1]\n                    ] : [\n                        s[r][0],\n                        s[r][1]\n                    ];\n                    return o;\n                },\n                points: function(t) {\n                    return this.vertices(\"v\", t);\n                },\n                inTangents: function(t) {\n                    return this.vertices(\"i\", t);\n                },\n                outTangents: function(t) {\n                    return this.vertices(\"o\", t);\n                },\n                isClosed: function() {\n                    return this.v.c;\n                },\n                pointOnPath: function(t, e) {\n                    var r = this.v;\n                    void 0 !== e && (r = this.getValueAtTime(e, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(r));\n                    for(var i, a = this._segmentsLength, s = a.lengths, n = a.totalLength * t, o = 0, h = s.length, l = 0; o < h;){\n                        if (l + s[o].addedLength > n) {\n                            var p = o, f = r.c && o === h - 1 ? 0 : o + 1, c = (n - l) / s[o].addedLength;\n                            i = bez.getPointInSegment(r.v[p], r.v[f], r.o[p], r.i[f], c, s[o]);\n                            break;\n                        }\n                        l += s[o].addedLength, o += 1;\n                    }\n                    return i || (i = r.c ? [\n                        r.v[0][0],\n                        r.v[0][1]\n                    ] : [\n                        r.v[r._length - 1][0],\n                        r.v[r._length - 1][1]\n                    ]), i;\n                },\n                vectorOnPath: function(t, e, r) {\n                    1 == t ? t = this.v.c : 0 == t && (t = .999);\n                    var i = this.pointOnPath(t, e), a = this.pointOnPath(t + .001, e), s = a[0] - i[0], n = a[1] - i[1], o = Math.sqrt(Math.pow(s, 2) + Math.pow(n, 2));\n                    return 0 === o ? [\n                        0,\n                        0\n                    ] : \"tangent\" === r ? [\n                        s / o,\n                        n / o\n                    ] : [\n                        -n / o,\n                        s / o\n                    ];\n                },\n                tangentOnPath: function(t, e) {\n                    return this.vectorOnPath(t, e, \"tangent\");\n                },\n                normalOnPath: function(t, e) {\n                    return this.vectorOnPath(t, e, \"normal\");\n                },\n                setGroupProperty: expressionHelpers.setGroupProperty,\n                getValueAtTime: expressionHelpers.getStaticValueAtTime\n            }, extendPrototype([\n                l\n            ], o), extendPrototype([\n                l\n            ], h), h.prototype.getValueAtTime = function(t) {\n                return this._cachingAtTime || (this._cachingAtTime = {\n                    shapeValue: shapePool.clone(this.pv),\n                    lastIndex: 0,\n                    lastTime: initialDefaultFrame\n                }), t *= this.elem.globalData.frameRate, (t -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0, this._cachingAtTime.lastTime = t, this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)), this._cachingAtTime.shapeValue;\n            }, h.prototype.initiateExpression = ExpressionManager.initiateExpression;\n            var p = ShapePropertyFactory.getShapeProp;\n            ShapePropertyFactory.getShapeProp = function(t, e, r, i, a) {\n                var s = p(t, e, r, i, a);\n                return s.propertyIndex = e.ix, s.lock = !1, 3 === r ? expressionHelpers.searchExpressions(t, e.pt, s) : 4 === r && expressionHelpers.searchExpressions(t, e.ks, s), s.k && t.addDynamicProperty(s), s;\n            };\n        }\n        function initialize$1() {\n            addPropertyDecorator();\n        }\n        function addDecorator() {\n            TextProperty.prototype.getExpressionValue = function(t, e) {\n                var r = this.calculateExpression(e);\n                if (t.t !== r) {\n                    var i = {};\n                    return this.copyData(i, t), i.t = r.toString(), i.__complete = !1, i;\n                }\n                return t;\n            }, TextProperty.prototype.searchProperty = function() {\n                var t = this.searchKeyframes(), e = this.searchExpressions();\n                return this.kf = t || e, this.kf;\n            }, TextProperty.prototype.searchExpressions = function() {\n                return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this), this.addEffect(this.getExpressionValue.bind(this)), !0) : null;\n            };\n        }\n        function initialize() {\n            addDecorator();\n        }\n        function SVGComposableEffect() {}\n        SVGComposableEffect.prototype = {\n            createMergeNode: function(t, e) {\n                var r, i, a = createNS(\"feMerge\");\n                for(a.setAttribute(\"result\", t), i = 0; i < e.length; i += 1)(r = createNS(\"feMergeNode\")).setAttribute(\"in\", e[i]), a.appendChild(r), a.appendChild(r);\n                return a;\n            }\n        };\n        var linearFilterValue = \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0\";\n        function SVGTintFilter(t, e, r, i, a) {\n            this.filterManager = e;\n            var s = createNS(\"feColorMatrix\");\n            s.setAttribute(\"type\", \"matrix\"), s.setAttribute(\"color-interpolation-filters\", \"linearRGB\"), s.setAttribute(\"values\", linearFilterValue + \" 1 0\"), this.linearFilter = s, s.setAttribute(\"result\", i + \"_tint_1\"), t.appendChild(s), (s = createNS(\"feColorMatrix\")).setAttribute(\"type\", \"matrix\"), s.setAttribute(\"color-interpolation-filters\", \"sRGB\"), s.setAttribute(\"values\", \"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0\"), s.setAttribute(\"result\", i + \"_tint_2\"), t.appendChild(s), this.matrixFilter = s;\n            var n = this.createMergeNode(i, [\n                a,\n                i + \"_tint_1\",\n                i + \"_tint_2\"\n            ]);\n            t.appendChild(n);\n        }\n        function SVGFillFilter(t, e, r, i) {\n            this.filterManager = e;\n            var a = createNS(\"feColorMatrix\");\n            a.setAttribute(\"type\", \"matrix\"), a.setAttribute(\"color-interpolation-filters\", \"sRGB\"), a.setAttribute(\"values\", \"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0\"), a.setAttribute(\"result\", i), t.appendChild(a), this.matrixFilter = a;\n        }\n        function SVGStrokeEffect(t, e, r) {\n            this.initialized = !1, this.filterManager = e, this.elem = r, this.paths = [];\n        }\n        function SVGTritoneFilter(t, e, r, i) {\n            this.filterManager = e;\n            var a = createNS(\"feColorMatrix\");\n            a.setAttribute(\"type\", \"matrix\"), a.setAttribute(\"color-interpolation-filters\", \"linearRGB\"), a.setAttribute(\"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"), t.appendChild(a);\n            var s = createNS(\"feComponentTransfer\");\n            s.setAttribute(\"color-interpolation-filters\", \"sRGB\"), s.setAttribute(\"result\", i), this.matrixFilter = s;\n            var n = createNS(\"feFuncR\");\n            n.setAttribute(\"type\", \"table\"), s.appendChild(n), this.feFuncR = n;\n            var o = createNS(\"feFuncG\");\n            o.setAttribute(\"type\", \"table\"), s.appendChild(o), this.feFuncG = o;\n            var h = createNS(\"feFuncB\");\n            h.setAttribute(\"type\", \"table\"), s.appendChild(h), this.feFuncB = h, t.appendChild(s);\n        }\n        function SVGProLevelsFilter(t, e, r, i) {\n            this.filterManager = e;\n            var a = this.filterManager.effectElements, s = createNS(\"feComponentTransfer\");\n            (a[10].p.k || 0 !== a[10].p.v || a[11].p.k || 1 !== a[11].p.v || a[12].p.k || 1 !== a[12].p.v || a[13].p.k || 0 !== a[13].p.v || a[14].p.k || 1 !== a[14].p.v) && (this.feFuncR = this.createFeFunc(\"feFuncR\", s)), (a[17].p.k || 0 !== a[17].p.v || a[18].p.k || 1 !== a[18].p.v || a[19].p.k || 1 !== a[19].p.v || a[20].p.k || 0 !== a[20].p.v || a[21].p.k || 1 !== a[21].p.v) && (this.feFuncG = this.createFeFunc(\"feFuncG\", s)), (a[24].p.k || 0 !== a[24].p.v || a[25].p.k || 1 !== a[25].p.v || a[26].p.k || 1 !== a[26].p.v || a[27].p.k || 0 !== a[27].p.v || a[28].p.k || 1 !== a[28].p.v) && (this.feFuncB = this.createFeFunc(\"feFuncB\", s)), (a[31].p.k || 0 !== a[31].p.v || a[32].p.k || 1 !== a[32].p.v || a[33].p.k || 1 !== a[33].p.v || a[34].p.k || 0 !== a[34].p.v || a[35].p.k || 1 !== a[35].p.v) && (this.feFuncA = this.createFeFunc(\"feFuncA\", s)), (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (s.setAttribute(\"color-interpolation-filters\", \"sRGB\"), t.appendChild(s)), (a[3].p.k || 0 !== a[3].p.v || a[4].p.k || 1 !== a[4].p.v || a[5].p.k || 1 !== a[5].p.v || a[6].p.k || 0 !== a[6].p.v || a[7].p.k || 1 !== a[7].p.v) && ((s = createNS(\"feComponentTransfer\")).setAttribute(\"color-interpolation-filters\", \"sRGB\"), s.setAttribute(\"result\", i), t.appendChild(s), this.feFuncRComposed = this.createFeFunc(\"feFuncR\", s), this.feFuncGComposed = this.createFeFunc(\"feFuncG\", s), this.feFuncBComposed = this.createFeFunc(\"feFuncB\", s));\n        }\n        function SVGDropShadowEffect(t, e, r, i, a) {\n            var s = e.container.globalData.renderConfig.filterSize, n = e.data.fs || s;\n            t.setAttribute(\"x\", n.x || s.x), t.setAttribute(\"y\", n.y || s.y), t.setAttribute(\"width\", n.width || s.width), t.setAttribute(\"height\", n.height || s.height), this.filterManager = e;\n            var o = createNS(\"feGaussianBlur\");\n            o.setAttribute(\"in\", \"SourceAlpha\"), o.setAttribute(\"result\", i + \"_drop_shadow_1\"), o.setAttribute(\"stdDeviation\", \"0\"), this.feGaussianBlur = o, t.appendChild(o);\n            var h = createNS(\"feOffset\");\n            h.setAttribute(\"dx\", \"25\"), h.setAttribute(\"dy\", \"0\"), h.setAttribute(\"in\", i + \"_drop_shadow_1\"), h.setAttribute(\"result\", i + \"_drop_shadow_2\"), this.feOffset = h, t.appendChild(h);\n            var l = createNS(\"feFlood\");\n            l.setAttribute(\"flood-color\", \"#00ff00\"), l.setAttribute(\"flood-opacity\", \"1\"), l.setAttribute(\"result\", i + \"_drop_shadow_3\"), this.feFlood = l, t.appendChild(l);\n            var p = createNS(\"feComposite\");\n            p.setAttribute(\"in\", i + \"_drop_shadow_3\"), p.setAttribute(\"in2\", i + \"_drop_shadow_2\"), p.setAttribute(\"operator\", \"in\"), p.setAttribute(\"result\", i + \"_drop_shadow_4\"), t.appendChild(p);\n            var f = this.createMergeNode(i, [\n                i + \"_drop_shadow_4\",\n                a\n            ]);\n            t.appendChild(f);\n        }\n        extendPrototype([\n            SVGComposableEffect\n        ], SVGTintFilter), SVGTintFilter.prototype.renderFrame = function(t) {\n            if (t || this.filterManager._mdf) {\n                var e = this.filterManager.effectElements[0].p.v, r = this.filterManager.effectElements[1].p.v, i = this.filterManager.effectElements[2].p.v / 100;\n                this.linearFilter.setAttribute(\"values\", linearFilterValue + \" \" + i + \" 0\"), this.matrixFilter.setAttribute(\"values\", r[0] - e[0] + \" 0 0 0 \" + e[0] + \" \" + (r[1] - e[1]) + \" 0 0 0 \" + e[1] + \" \" + (r[2] - e[2]) + \" 0 0 0 \" + e[2] + \" 0 0 0 1 0\");\n            }\n        }, SVGFillFilter.prototype.renderFrame = function(t) {\n            if (t || this.filterManager._mdf) {\n                var e = this.filterManager.effectElements[2].p.v, r = this.filterManager.effectElements[6].p.v;\n                this.matrixFilter.setAttribute(\"values\", \"0 0 0 0 \" + e[0] + \" 0 0 0 0 \" + e[1] + \" 0 0 0 0 \" + e[2] + \" 0 0 0 \" + r + \" 0\");\n            }\n        }, SVGStrokeEffect.prototype.initialize = function() {\n            var t, e, r, i, a = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n            for(1 === this.filterManager.effectElements[1].p.v ? (i = this.elem.maskManager.masksProperties.length, r = 0) : i = (r = this.filterManager.effectElements[0].p.v - 1) + 1, (e = createNS(\"g\")).setAttribute(\"fill\", \"none\"), e.setAttribute(\"stroke-linecap\", \"round\"), e.setAttribute(\"stroke-dashoffset\", 1); r < i; r += 1)t = createNS(\"path\"), e.appendChild(t), this.paths.push({\n                p: t,\n                m: r\n            });\n            if (3 === this.filterManager.effectElements[10].p.v) {\n                var s = createNS(\"mask\"), n = createElementID();\n                s.setAttribute(\"id\", n), s.setAttribute(\"mask-type\", \"alpha\"), s.appendChild(e), this.elem.globalData.defs.appendChild(s);\n                var o = createNS(\"g\");\n                for(o.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + n + \")\"); a[0];)o.appendChild(a[0]);\n                this.elem.layerElement.appendChild(o), this.masker = s, e.setAttribute(\"stroke\", \"#fff\");\n            } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {\n                if (2 === this.filterManager.effectElements[10].p.v) for(a = this.elem.layerElement.children || this.elem.layerElement.childNodes; a.length;)this.elem.layerElement.removeChild(a[0]);\n                this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute(\"mask\"), e.setAttribute(\"stroke\", \"#fff\");\n            }\n            this.initialized = !0, this.pathMasker = e;\n        }, SVGStrokeEffect.prototype.renderFrame = function(t) {\n            var e;\n            this.initialized || this.initialize();\n            var r, i, a = this.paths.length;\n            for(e = 0; e < a; e += 1)if (-1 !== this.paths[e].m && (r = this.elem.maskManager.viewData[this.paths[e].m], i = this.paths[e].p, (t || this.filterManager._mdf || r.prop._mdf) && i.setAttribute(\"d\", r.lastPath), t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || r.prop._mdf)) {\n                var s;\n                if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {\n                    var n = .01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v), o = .01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v), h = i.getTotalLength();\n                    s = \"0 0 0 \" + h * n + \" \";\n                    var l, p = h * (o - n), f = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01, c = Math.floor(p / f);\n                    for(l = 0; l < c; l += 1)s += \"1 \" + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01 + \" \";\n                    s += \"0 \" + 10 * h + \" 0 0\";\n                } else s = \"1 \" + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01;\n                i.setAttribute(\"stroke-dasharray\", s);\n            }\n            if ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute(\"stroke-width\", 2 * this.filterManager.effectElements[4].p.v), (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute(\"opacity\", this.filterManager.effectElements[6].p.v), (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf)) {\n                var m = this.filterManager.effectElements[3].p.v;\n                this.pathMasker.setAttribute(\"stroke\", \"rgb(\" + bmFloor(255 * m[0]) + \",\" + bmFloor(255 * m[1]) + \",\" + bmFloor(255 * m[2]) + \")\");\n            }\n        }, SVGTritoneFilter.prototype.renderFrame = function(t) {\n            if (t || this.filterManager._mdf) {\n                var e = this.filterManager.effectElements[0].p.v, r = this.filterManager.effectElements[1].p.v, i = this.filterManager.effectElements[2].p.v, a = i[0] + \" \" + r[0] + \" \" + e[0], s = i[1] + \" \" + r[1] + \" \" + e[1], n = i[2] + \" \" + r[2] + \" \" + e[2];\n                this.feFuncR.setAttribute(\"tableValues\", a), this.feFuncG.setAttribute(\"tableValues\", s), this.feFuncB.setAttribute(\"tableValues\", n);\n            }\n        }, SVGProLevelsFilter.prototype.createFeFunc = function(t, e) {\n            var r = createNS(t);\n            return r.setAttribute(\"type\", \"table\"), e.appendChild(r), r;\n        }, SVGProLevelsFilter.prototype.getTableValue = function(t, e, r, i, a) {\n            for(var s, n, o = 0, h = Math.min(t, e), l = Math.max(t, e), p = Array.call(null, {\n                length: 256\n            }), f = 0, c = a - i, m = e - t; o <= 256;)n = (s = o / 256) <= h ? m < 0 ? a : i : s >= l ? m < 0 ? i : a : i + c * Math.pow((s - t) / m, 1 / r), p[f] = n, f += 1, o += 256 / 255;\n            return p.join(\" \");\n        }, SVGProLevelsFilter.prototype.renderFrame = function(t) {\n            if (t || this.filterManager._mdf) {\n                var e, r = this.filterManager.effectElements;\n                this.feFuncRComposed && (t || r[3].p._mdf || r[4].p._mdf || r[5].p._mdf || r[6].p._mdf || r[7].p._mdf) && (e = this.getTableValue(r[3].p.v, r[4].p.v, r[5].p.v, r[6].p.v, r[7].p.v), this.feFuncRComposed.setAttribute(\"tableValues\", e), this.feFuncGComposed.setAttribute(\"tableValues\", e), this.feFuncBComposed.setAttribute(\"tableValues\", e)), this.feFuncR && (t || r[10].p._mdf || r[11].p._mdf || r[12].p._mdf || r[13].p._mdf || r[14].p._mdf) && (e = this.getTableValue(r[10].p.v, r[11].p.v, r[12].p.v, r[13].p.v, r[14].p.v), this.feFuncR.setAttribute(\"tableValues\", e)), this.feFuncG && (t || r[17].p._mdf || r[18].p._mdf || r[19].p._mdf || r[20].p._mdf || r[21].p._mdf) && (e = this.getTableValue(r[17].p.v, r[18].p.v, r[19].p.v, r[20].p.v, r[21].p.v), this.feFuncG.setAttribute(\"tableValues\", e)), this.feFuncB && (t || r[24].p._mdf || r[25].p._mdf || r[26].p._mdf || r[27].p._mdf || r[28].p._mdf) && (e = this.getTableValue(r[24].p.v, r[25].p.v, r[26].p.v, r[27].p.v, r[28].p.v), this.feFuncB.setAttribute(\"tableValues\", e)), this.feFuncA && (t || r[31].p._mdf || r[32].p._mdf || r[33].p._mdf || r[34].p._mdf || r[35].p._mdf) && (e = this.getTableValue(r[31].p.v, r[32].p.v, r[33].p.v, r[34].p.v, r[35].p.v), this.feFuncA.setAttribute(\"tableValues\", e));\n            }\n        }, extendPrototype([\n            SVGComposableEffect\n        ], SVGDropShadowEffect), SVGDropShadowEffect.prototype.renderFrame = function(t) {\n            if (t || this.filterManager._mdf) {\n                if ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute(\"stdDeviation\", this.filterManager.effectElements[4].p.v / 4), t || this.filterManager.effectElements[0].p._mdf) {\n                    var e = this.filterManager.effectElements[0].p.v;\n                    this.feFlood.setAttribute(\"flood-color\", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])));\n                }\n                if ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute(\"flood-opacity\", this.filterManager.effectElements[1].p.v / 255), t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n                    var r = this.filterManager.effectElements[3].p.v, i = (this.filterManager.effectElements[2].p.v - 90) * degToRads, a = r * Math.cos(i), s = r * Math.sin(i);\n                    this.feOffset.setAttribute(\"dx\", a), this.feOffset.setAttribute(\"dy\", s);\n                }\n            }\n        };\n        var _svgMatteSymbols = [];\n        function SVGMatte3Effect(t, e, r) {\n            this.initialized = !1, this.filterManager = e, this.filterElem = t, this.elem = r, r.matteElement = createNS(\"g\"), r.matteElement.appendChild(r.layerElement), r.matteElement.appendChild(r.transformedElement), r.baseElement = r.matteElement;\n        }\n        function SVGGaussianBlurEffect(t, e, r, i) {\n            t.setAttribute(\"x\", \"-100%\"), t.setAttribute(\"y\", \"-100%\"), t.setAttribute(\"width\", \"300%\"), t.setAttribute(\"height\", \"300%\"), this.filterManager = e;\n            var a = createNS(\"feGaussianBlur\");\n            a.setAttribute(\"result\", i), t.appendChild(a), this.feGaussianBlur = a;\n        }\n        return SVGMatte3Effect.prototype.findSymbol = function(t) {\n            for(var e = 0, r = _svgMatteSymbols.length; e < r;){\n                if (_svgMatteSymbols[e] === t) return _svgMatteSymbols[e];\n                e += 1;\n            }\n            return null;\n        }, SVGMatte3Effect.prototype.replaceInParent = function(t, e) {\n            var r = t.layerElement.parentNode;\n            if (r) {\n                for(var i, a = r.children, s = 0, n = a.length; s < n && a[s] !== t.layerElement;)s += 1;\n                s <= n - 2 && (i = a[s + 1]);\n                var o = createNS(\"use\");\n                o.setAttribute(\"href\", \"#\" + e), i ? r.insertBefore(o, i) : r.appendChild(o);\n            }\n        }, SVGMatte3Effect.prototype.setElementAsMask = function(t, e) {\n            if (!this.findSymbol(e)) {\n                var r = createElementID(), i = createNS(\"mask\");\n                i.setAttribute(\"id\", e.layerId), i.setAttribute(\"mask-type\", \"alpha\"), _svgMatteSymbols.push(e);\n                var a = t.globalData.defs;\n                a.appendChild(i);\n                var s = createNS(\"symbol\");\n                s.setAttribute(\"id\", r), this.replaceInParent(e, r), s.appendChild(e.layerElement), a.appendChild(s);\n                var n = createNS(\"use\");\n                n.setAttribute(\"href\", \"#\" + r), i.appendChild(n), e.data.hd = !1, e.show();\n            }\n            t.setMatte(e.layerId);\n        }, SVGMatte3Effect.prototype.initialize = function() {\n            for(var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, r = 0, i = e.length; r < i;)e[r] && e[r].data.ind === t && this.setElementAsMask(this.elem, e[r]), r += 1;\n            this.initialized = !0;\n        }, SVGMatte3Effect.prototype.renderFrame = function() {\n            this.initialized || this.initialize();\n        }, SVGGaussianBlurEffect.prototype.renderFrame = function(t) {\n            if (t || this.filterManager._mdf) {\n                var e = .3 * this.filterManager.effectElements[0].p.v, r = this.filterManager.effectElements[1].p.v, i = 3 == r ? 0 : e, a = 2 == r ? 0 : e;\n                this.feGaussianBlur.setAttribute(\"stdDeviation\", i + \" \" + a);\n                var s = 1 == this.filterManager.effectElements[2].p.v ? \"wrap\" : \"duplicate\";\n                this.feGaussianBlur.setAttribute(\"edgeMode\", s);\n            }\n        }, registerRenderer(\"canvas\", CanvasRenderer), registerRenderer(\"html\", HybridRenderer), registerRenderer(\"svg\", SVGRenderer), ShapeModifiers.registerModifier(\"tm\", TrimModifier), ShapeModifiers.registerModifier(\"pb\", PuckerAndBloatModifier), ShapeModifiers.registerModifier(\"rp\", RepeaterModifier), ShapeModifiers.registerModifier(\"rd\", RoundCornersModifier), ShapeModifiers.registerModifier(\"zz\", ZigZagModifier), ShapeModifiers.registerModifier(\"op\", OffsetPathModifier), setExpressionsPlugin(Expressions), setExpressionInterfaces(getInterface), initialize$1(), initialize(), registerEffect(20, SVGTintFilter, !0), registerEffect(21, SVGFillFilter, !0), registerEffect(22, SVGStrokeEffect, !1), registerEffect(23, SVGTritoneFilter, !0), registerEffect(24, SVGProLevelsFilter, !0), registerEffect(25, SVGDropShadowEffect, !0), registerEffect(28, SVGMatte3Effect, !1), registerEffect(29, SVGGaussianBlurEffect, !0), lottie;\n    });\n}), REACT_LOTTIE_PLAYER_VERSION = \"3.5.3\", LOTTIE_WEB_VERSION = \"^5.10.2\", PlayerState, PlayerEvent;\nfunction parseSrc(t) {\n    if (\"object\" == typeof t) return t;\n    try {\n        return JSON.parse(t);\n    } catch (t) {}\n    try {\n        return new URL(t).toString();\n    } catch (t) {}\n    return t;\n}\n!function(t) {\n    t.Loading = \"loading\", t.Playing = \"playing\", t.Paused = \"paused\", t.Stopped = \"stopped\", t.Frozen = \"frozen\", t.Error = \"error\";\n}(PlayerState || (PlayerState = {})), function(t) {\n    t.Load = \"load\", t.InstanceSaved = \"instanceSaved\", t.Error = \"error\", t.Ready = \"ready\", t.Play = \"play\", t.Pause = \"pause\", t.Stop = \"stop\", t.Freeze = \"freeze\", t.Loop = \"loop\", t.Complete = \"complete\", t.Frame = \"frame\";\n}(PlayerEvent || (PlayerEvent = {}));\nvar defaultOptions = {\n    clearCanvas: !1,\n    hideOnTransparent: !0,\n    progressiveLoad: !0\n}, Player = function(t) {\n    function e(e) {\n        var r = t.call(this, e) || this;\n        return r.container = null, r.unmounted = !1, r.handleBgChange = function(t) {\n            r.setState({\n                background: t\n            });\n        }, r.triggerDownload = function(t, e) {\n            var r = document.createElement(\"a\");\n            r.href = t, r.download = e, document.body.appendChild(r), r.click(), document.body.removeChild(r);\n        }, r.snapshot = function(t) {\n            var e;\n            void 0 === t && (t = !0);\n            var i = r.props.id ? r.props.id : \"lottie\", a = document.getElementById(i);\n            if (\"svg\" === r.props.renderer) {\n                if (a) {\n                    var s = a.querySelector(\"svg\");\n                    if (s) {\n                        var n = (new XMLSerializer).serializeToString(s);\n                        e = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(n);\n                    }\n                }\n                t && r.triggerDownload(e, \"snapshot.svg\");\n            } else if (\"canvas\" === r.props.renderer) {\n                if (a) {\n                    var o = a.querySelector(\"canvas\");\n                    o && (e = o.toDataURL(\"image/png\"));\n                }\n                t && r.triggerDownload(e, \"snapshot.png\");\n            }\n            return e;\n        },  true && (window.lottie = lottie), r.state = {\n            animationData: null,\n            background: \"transparent\",\n            containerRef: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createRef(),\n            debug: !0,\n            instance: null,\n            playerState: PlayerState.Loading,\n            seeker: 0\n        }, r;\n    }\n    return __extends(e, t), e.getDerivedStateFromProps = function(t, e) {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(r) {\n                return t.background !== e.background ? [\n                    2,\n                    {\n                        background: t.background\n                    }\n                ] : [\n                    2,\n                    null\n                ];\n            });\n        });\n    }, e.prototype.getVersions = function() {\n        return {\n            lottieWebVersion: LOTTIE_WEB_VERSION,\n            lottiePlayerVersion: REACT_LOTTIE_PLAYER_VERSION\n        };\n    }, e.prototype.componentDidMount = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(t) {\n                switch(t.label){\n                    case 0:\n                        return this.unmounted ? [\n                            3,\n                            2\n                        ] : [\n                            4,\n                            this.createLottie()\n                        ];\n                    case 1:\n                        t.sent(), t.label = 2;\n                    case 2:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n    }, e.prototype.componentWillUnmount = function() {\n        this.unmounted = !0, this.state.instance && this.state.instance.destroy();\n    }, e.prototype.componentDidUpdate = function(t) {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(e) {\n                switch(e.label){\n                    case 0:\n                        return this.props.src === t.src ? [\n                            3,\n                            2\n                        ] : (this.state.instance && this.state.instance.destroy(), [\n                            4,\n                            this.createLottie()\n                        ]);\n                    case 1:\n                        e.sent(), e.label = 2;\n                    case 2:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n    }, e.prototype.render = function() {\n        var t = this, e = this.props, r = e.children, i = e.loop, a = e.style, s = e.onBackgroundChange, n = e.className, o = this.state, h = o.animationData, l = o.instance, p = o.playerState, f = o.seeker, c = o.debug, m = o.background;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-player-container\"\n        }, this.state.playerState === PlayerState.Error ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-error\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            \"aria-label\": \"error-symbol\",\n            role: \"img\"\n        }, \"⚠️\")) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            id: this.props.id ? this.props.id : \"lottie\",\n            ref: function(e) {\n                return t.container = e;\n            },\n            style: __assign({\n                background: m,\n                margin: \"0 auto\",\n                outline: \"none\",\n                overflow: \"hidden\"\n            }, a),\n            className: n\n        }), react__WEBPACK_IMPORTED_MODULE_0__.Children.map(r, function(e) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(e) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(e, {\n                animationData: h,\n                background: m,\n                debug: c,\n                instance: l,\n                loop: i,\n                pause: function() {\n                    return t.pause();\n                },\n                play: function() {\n                    return t.play();\n                },\n                playerState: p,\n                seeker: f,\n                setBackground: function(e) {\n                    t.setState({\n                        background: e\n                    }), \"function\" == typeof s && s(e);\n                },\n                setSeeker: function(e, r) {\n                    return t.setSeeker(e, r);\n                },\n                stop: function() {\n                    return t.stop();\n                },\n                toggleDebug: function() {\n                    return t.toggleDebug();\n                },\n                setLoop: function(e) {\n                    return t.setLoop(e);\n                },\n                colorChangedEvent: function(e) {\n                    t.handleBgChange(e);\n                },\n                snapshot: function() {\n                    t.snapshot();\n                }\n            }) : null;\n        }));\n    }, e.prototype.toggleDebug = function() {\n        this.setState({\n            debug: !this.state.debug\n        });\n    }, e.prototype.createLottie = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            var t, e, r, i, a, s, n, o, h, l, p, f, c, m, d = this;\n            return __generator(this, function(u) {\n                switch(u.label){\n                    case 0:\n                        if (t = this.props, e = t.autoplay, r = t.direction, i = t.loop, a = t.lottieRef, s = t.renderer, n = t.speed, o = t.src, h = t.background, l = t.rendererSettings, p = t.hover, f = this.state.instance, !o || !this.container) return [\n                            2\n                        ];\n                        u.label = 1;\n                    case 1:\n                        return u.trys.push([\n                            1,\n                            5,\n                            ,\n                            6\n                        ]), \"string\" != typeof (c = parseSrc(o)) ? [\n                            3,\n                            4\n                        ] : [\n                            4,\n                            fetch(c).catch(function() {\n                                throw d.setState({\n                                    playerState: PlayerState.Error\n                                }), d.triggerEvent(PlayerEvent.Error), new Error(\"@LottieFiles/lottie-react: Animation data could not be fetched.\");\n                            })\n                        ];\n                    case 2:\n                        return [\n                            4,\n                            u.sent().json().catch(function() {\n                                throw d.setState({\n                                    playerState: PlayerState.Error\n                                }), d.triggerEvent(PlayerEvent.Error), new Error(\"@LottieFiles/lottie-react: Animation data could not be fetched.\");\n                            })\n                        ];\n                    case 3:\n                        c = u.sent(), u.label = 4;\n                    case 4:\n                        return f && f.destroy(), m = lottie.loadAnimation({\n                            rendererSettings: l || defaultOptions,\n                            animationData: c,\n                            autoplay: e || !1,\n                            container: this.container,\n                            loop: i || !1,\n                            renderer: s\n                        }), n && m.setSpeed(n), this.setState({\n                            animationData: c\n                        }), this.setState({\n                            instance: m\n                        }, function() {\n                            d.triggerEvent(PlayerEvent.InstanceSaved), \"function\" == typeof a && a(m), e && d.play();\n                        }), m.addEventListener(\"enterFrame\", function() {\n                            d.triggerEvent(PlayerEvent.Frame), d.setState({\n                                seeker: Math.floor(m.currentFrame)\n                            });\n                        }), m.addEventListener(\"DOMLoaded\", function() {\n                            d.triggerEvent(PlayerEvent.Load);\n                        }), m.addEventListener(\"data_ready\", function() {\n                            d.triggerEvent(PlayerEvent.Ready);\n                        }), m.addEventListener(\"data_failed\", function() {\n                            d.setState({\n                                playerState: PlayerState.Error\n                            }), d.triggerEvent(PlayerEvent.Error);\n                        }), m.addEventListener(\"loopComplete\", function() {\n                            d.triggerEvent(PlayerEvent.Loop);\n                        }), m.addEventListener(\"complete\", function() {\n                            d.triggerEvent(PlayerEvent.Complete), d.setState({\n                                playerState: PlayerState.Paused\n                            }), d.props.keepLastFrame && !d.props.loop || d.setSeeker(0);\n                        }), this.container && (this.container.addEventListener(\"mouseenter\", function() {\n                            p && d.state.playerState !== PlayerState.Playing && (d.props.keepLastFrame && d.stop(), d.play());\n                        }), this.container.addEventListener(\"mouseleave\", function() {\n                            p && d.state.playerState === PlayerState.Playing && d.stop();\n                        })), n && this.setPlayerSpeed(n), r && this.setPlayerDirection(r), h && this.setState({\n                            background: h\n                        }), [\n                            3,\n                            6\n                        ];\n                    case 5:\n                        return u.sent(), this.setState({\n                            playerState: PlayerState.Error\n                        }), this.triggerEvent(PlayerEvent.Error), [\n                            3,\n                            6\n                        ];\n                    case 6:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n    }, e.prototype.play = function() {\n        var t = this.state.instance;\n        t && (this.triggerEvent(PlayerEvent.Play), t.play(), this.setState({\n            playerState: PlayerState.Playing\n        }));\n    }, e.prototype.pause = function() {\n        var t = this.state.instance;\n        t && (this.triggerEvent(PlayerEvent.Pause), t.pause(), this.setState({\n            playerState: PlayerState.Paused\n        }));\n    }, e.prototype.stop = function() {\n        var t = this.state.instance;\n        t && (this.triggerEvent(PlayerEvent.Stop), t.stop(), this.setState({\n            playerState: PlayerState.Stopped\n        }));\n    }, e.prototype.setPlayerSpeed = function(t) {\n        var e = this.state.instance;\n        e && e.setSpeed(t);\n    }, e.prototype.setPlayerDirection = function(t) {\n        var e = this.state.instance;\n        e && e.setDirection(t);\n    }, e.prototype.setSeeker = function(t, e) {\n        void 0 === e && (e = !1);\n        var r = this.state, i = r.instance, a = r.playerState;\n        i && (e && a === PlayerState.Playing ? i.goToAndPlay(t, !0) : (i.goToAndStop(t, !0), this.triggerEvent(PlayerEvent.Pause), this.setState({\n            playerState: PlayerState.Paused\n        })));\n    }, e.prototype.setLoop = function(t) {\n        var e = this.state.instance;\n        e && (e.loop = t, this.setState({\n            instance: e\n        }));\n    }, e.prototype.triggerEvent = function(t) {\n        var e = this.props.onEvent;\n        e && e(t);\n    }, e.defaultProps = {\n        loop: !1\n    }, e;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nfunction styleInject(t, e) {\n    void 0 === e && (e = {});\n    var r = e.insertAt;\n    if (t && \"undefined\" != typeof document) {\n        var i = document.head || document.getElementsByTagName(\"head\")[0], a = document.createElement(\"style\");\n        a.type = \"text/css\", \"top\" === r && i.firstChild ? i.insertBefore(a, i.firstChild) : i.appendChild(a), a.styleSheet ? a.styleSheet.cssText = t : a.appendChild(document.createTextNode(t));\n    }\n}\nvar css_248z = \".lf-progress {\\n  -webkit-appearance: none;\\n  -moz-apperance: none;\\n  width: 100%;\\n  /* margin: 0 10px; */\\n  height: 4px;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n.lf-progress:focus {\\n  outline: none;\\n  border: none;\\n}\\n.lf-progress::-moz-range-track {\\n  cursor: pointer;\\n  background: none;\\n  border: none;\\n  outline: none;\\n}\\n.lf-progress::-webkit-slider-thumb {\\n  -webkit-appearance: none !important;\\n  height: 13px;\\n  width: 13px;\\n  border: 0;\\n  border-radius: 50%;\\n  background: #0fccce;\\n  cursor: pointer;\\n}\\n.lf-progress::-moz-range-thumb {\\n  -moz-appearance: none !important;\\n  height: 13px;\\n  width: 13px;\\n  border: 0;\\n  border-radius: 50%;\\n  background: #0fccce;\\n  cursor: pointer;\\n}\\n.lf-progress::-ms-track {\\n  width: 100%;\\n  height: 3px;\\n  cursor: pointer;\\n  background: transparent;\\n  border-color: transparent;\\n  color: transparent;\\n}\\n.lf-progress::-ms-fill-lower {\\n  background: #ccc;\\n  border-radius: 3px;\\n}\\n.lf-progress::-ms-fill-upper {\\n  background: #ccc;\\n  border-radius: 3px;\\n}\\n.lf-progress::-ms-thumb {\\n  border: 0;\\n  height: 15px;\\n  width: 15px;\\n  border-radius: 50%;\\n  background: #0fccce;\\n  cursor: pointer;\\n}\\n.lf-progress:focus::-ms-fill-lower {\\n  background: #ccc;\\n}\\n.lf-progress:focus::-ms-fill-upper {\\n  background: #ccc;\\n}\\n.lf-player-container :focus {\\n  outline: 0;\\n}\\n.lf-popover {\\n  position: relative;\\n}\\n\\n.lf-popover-content {\\n  display: inline-block;\\n  position: absolute;\\n  opacity: 1;\\n  visibility: visible;\\n  transform: translate(0, -10px);\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n  transition: all 0.3s cubic-bezier(0.75, -0.02, 0.2, 0.97);\\n}\\n\\n.lf-popover-content.hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transform: translate(0, 0px);\\n}\\n\\n.lf-player-btn-container {\\n  display: flex;\\n  align-items: center;\\n}\\n.lf-player-btn {\\n  cursor: pointer;\\n  fill: #999;\\n  width: 14px;\\n}\\n\\n.lf-player-btn.active {\\n  fill: #555;\\n}\\n\\n.lf-popover {\\n  position: relative;\\n}\\n\\n.lf-popover-content {\\n  display: inline-block;\\n  position: absolute;\\n  background-color: #ffffff;\\n  opacity: 1;\\n\\n  transform: translate(0, -10px);\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n  transition: all 0.3s cubic-bezier(0.75, -0.02, 0.2, 0.97);\\n  padding: 10px;\\n}\\n\\n.lf-popover-content.hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transform: translate(0, 0px);\\n}\\n\\n.lf-arrow {\\n  position: absolute;\\n  z-index: -1;\\n  content: '';\\n  bottom: -9px;\\n  border-style: solid;\\n  border-width: 10px 10px 0px 10px;\\n}\\n\\n.lf-left-align,\\n.lf-left-align .lfarrow {\\n  left: 0;\\n  right: unset;\\n}\\n\\n.lf-right-align,\\n.lf-right-align .lf-arrow {\\n  right: 0;\\n  left: unset;\\n}\\n\\n.lf-text-input {\\n  border: 1px #ccc solid;\\n  border-radius: 5px;\\n  padding: 3px;\\n  width: 60px;\\n  margin: 0;\\n}\\n\\n.lf-color-picker {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  height: 90px;\\n}\\n\\n.lf-color-selectors {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n\\n.lf-color-component {\\n  display: flex;\\n  flex-direction: row;\\n  font-size: 12px;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.lf-color-component strong {\\n  width: 40px;\\n}\\n\\n.lf-color-component input[type='range'] {\\n  margin: 0 0 0 10px;\\n}\\n\\n.lf-color-component input[type='number'] {\\n  width: 50px;\\n  margin: 0 0 0 10px;\\n}\\n\\n.lf-color-preview {\\n  font-size: 12px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding-left: 5px;\\n}\\n\\n.lf-preview {\\n  height: 60px;\\n  width: 60px;\\n}\\n\\n.lf-popover-snapshot {\\n  width: 150px;\\n}\\n.lf-popover-snapshot h5 {\\n  margin: 5px 0 10px 0;\\n  font-size: 0.75rem;\\n}\\n.lf-popover-snapshot a {\\n  display: block;\\n  text-decoration: none;\\n}\\n.lf-popover-snapshot a:before {\\n  content: '⥼';\\n  margin-right: 5px;\\n}\\n.lf-popover-snapshot .lf-note {\\n  display: block;\\n  margin-top: 10px;\\n  color: #999;\\n}\\n.lf-player-controls > div {\\n  margin-right: 5px;\\n  margin-left: 5px;\\n}\\n.lf-player-controls > div:first-child {\\n  margin-left: 0px;\\n}\\n.lf-player-controls > div:last-child {\\n  margin-right: 0px;\\n}\\n\", stylesheet = \".lf-progress {\\n  -webkit-appearance: none;\\n  -moz-apperance: none;\\n  width: 100%;\\n  /* margin: 0 10px; */\\n  height: 4px;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n.lf-progress:focus {\\n  outline: none;\\n  border: none;\\n}\\n.lf-progress::-moz-range-track {\\n  cursor: pointer;\\n  background: none;\\n  border: none;\\n  outline: none;\\n}\\n.lf-progress::-webkit-slider-thumb {\\n  -webkit-appearance: none !important;\\n  height: 13px;\\n  width: 13px;\\n  border: 0;\\n  border-radius: 50%;\\n  background: #0fccce;\\n  cursor: pointer;\\n}\\n.lf-progress::-moz-range-thumb {\\n  -moz-appearance: none !important;\\n  height: 13px;\\n  width: 13px;\\n  border: 0;\\n  border-radius: 50%;\\n  background: #0fccce;\\n  cursor: pointer;\\n}\\n.lf-progress::-ms-track {\\n  width: 100%;\\n  height: 3px;\\n  cursor: pointer;\\n  background: transparent;\\n  border-color: transparent;\\n  color: transparent;\\n}\\n.lf-progress::-ms-fill-lower {\\n  background: #ccc;\\n  border-radius: 3px;\\n}\\n.lf-progress::-ms-fill-upper {\\n  background: #ccc;\\n  border-radius: 3px;\\n}\\n.lf-progress::-ms-thumb {\\n  border: 0;\\n  height: 15px;\\n  width: 15px;\\n  border-radius: 50%;\\n  background: #0fccce;\\n  cursor: pointer;\\n}\\n.lf-progress:focus::-ms-fill-lower {\\n  background: #ccc;\\n}\\n.lf-progress:focus::-ms-fill-upper {\\n  background: #ccc;\\n}\\n.lf-player-container :focus {\\n  outline: 0;\\n}\\n.lf-popover {\\n  position: relative;\\n}\\n\\n.lf-popover-content {\\n  display: inline-block;\\n  position: absolute;\\n  opacity: 1;\\n  visibility: visible;\\n  transform: translate(0, -10px);\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n  transition: all 0.3s cubic-bezier(0.75, -0.02, 0.2, 0.97);\\n}\\n\\n.lf-popover-content.hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transform: translate(0, 0px);\\n}\\n\\n.lf-player-btn-container {\\n  display: flex;\\n  align-items: center;\\n}\\n.lf-player-btn {\\n  cursor: pointer;\\n  fill: #999;\\n  width: 14px;\\n}\\n\\n.lf-player-btn.active {\\n  fill: #555;\\n}\\n\\n.lf-popover {\\n  position: relative;\\n}\\n\\n.lf-popover-content {\\n  display: inline-block;\\n  position: absolute;\\n  background-color: #ffffff;\\n  opacity: 1;\\n\\n  transform: translate(0, -10px);\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n  transition: all 0.3s cubic-bezier(0.75, -0.02, 0.2, 0.97);\\n  padding: 10px;\\n}\\n\\n.lf-popover-content.hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transform: translate(0, 0px);\\n}\\n\\n.lf-arrow {\\n  position: absolute;\\n  z-index: -1;\\n  content: '';\\n  bottom: -9px;\\n  border-style: solid;\\n  border-width: 10px 10px 0px 10px;\\n}\\n\\n.lf-left-align,\\n.lf-left-align .lfarrow {\\n  left: 0;\\n  right: unset;\\n}\\n\\n.lf-right-align,\\n.lf-right-align .lf-arrow {\\n  right: 0;\\n  left: unset;\\n}\\n\\n.lf-text-input {\\n  border: 1px #ccc solid;\\n  border-radius: 5px;\\n  padding: 3px;\\n  width: 60px;\\n  margin: 0;\\n}\\n\\n.lf-color-picker {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  height: 90px;\\n}\\n\\n.lf-color-selectors {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n\\n.lf-color-component {\\n  display: flex;\\n  flex-direction: row;\\n  font-size: 12px;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.lf-color-component strong {\\n  width: 40px;\\n}\\n\\n.lf-color-component input[type='range'] {\\n  margin: 0 0 0 10px;\\n}\\n\\n.lf-color-component input[type='number'] {\\n  width: 50px;\\n  margin: 0 0 0 10px;\\n}\\n\\n.lf-color-preview {\\n  font-size: 12px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding-left: 5px;\\n}\\n\\n.lf-preview {\\n  height: 60px;\\n  width: 60px;\\n}\\n\\n.lf-popover-snapshot {\\n  width: 150px;\\n}\\n.lf-popover-snapshot h5 {\\n  margin: 5px 0 10px 0;\\n  font-size: 0.75rem;\\n}\\n.lf-popover-snapshot a {\\n  display: block;\\n  text-decoration: none;\\n}\\n.lf-popover-snapshot a:before {\\n  content: '⥼';\\n  margin-right: 5px;\\n}\\n.lf-popover-snapshot .lf-note {\\n  display: block;\\n  margin-top: 10px;\\n  color: #999;\\n}\\n.lf-player-controls > div {\\n  margin-right: 5px;\\n  margin-left: 5px;\\n}\\n.lf-player-controls > div:first-child {\\n  margin-left: 0px;\\n}\\n.lf-player-controls > div:last-child {\\n  margin-right: 0px;\\n}\\n\";\nstyleInject(css_248z);\nvar ColorPicker = function(t) {\n    function e() {\n        var e = null !== t && t.apply(this, arguments) || this;\n        return e.state = {\n            red: 0,\n            green: 0,\n            blue: 0,\n            rgba: null,\n            hex: \"#000000\",\n            colorComponents: []\n        }, e.handleChange = function(t, r) {\n            if (\"r\" === t) {\n                var i = \"#\" + (256 | r).toString(16).slice(1) + (256 | e.state.green).toString(16).slice(1) + (256 | e.state.blue).toString(16).slice(1);\n                e.setState({\n                    hex: i\n                });\n            } else if (\"g\" === t) {\n                i = \"#\" + (256 | e.state.red).toString(16).slice(1) + (256 | r).toString(16).slice(1) + (256 | e.state.blue).toString(16).slice(1);\n                e.setState({\n                    hex: i\n                });\n            } else if (\"b\" === t) {\n                i = \"#\" + (256 | e.state.red).toString(16).slice(1) + (256 | e.state.green).toString(16).slice(1) + (256 | r).toString(16).slice(1);\n                e.setState({\n                    hex: i\n                });\n            }\n        }, e.parseColor = function(t) {\n            var r;\n            if (\"string\" == typeof t) {\n                if (\"#\" === t[0]) {\n                    var i = 4 === t.length ? [\n                        t.slice(1, 2),\n                        t.slice(2, 3),\n                        t.slice(3, 4)\n                    ].map(function(t) {\n                        return parseInt(\"\" + t + t, 16);\n                    }) : [\n                        t.slice(1, 3),\n                        t.slice(3, 5),\n                        t.slice(5, 7)\n                    ].map(function(t) {\n                        return parseInt(t, 16);\n                    });\n                    e.setState({\n                        colorComponents: i\n                    });\n                } else if (t.startsWith(\"rgb\")) {\n                    void 0 !== (i = null === (r = t.match(/\\d+/g)) || void 0 === r ? void 0 : r.map(function(t) {\n                        return parseInt(t);\n                    })) && e.setState({\n                        colorComponents: i\n                    });\n                }\n                e.state.colorComponents.length && (e.setState({\n                    red: e.state.colorComponents[0]\n                }), e.setState({\n                    green: e.state.colorComponents[1]\n                }), e.setState({\n                    blue: e.state.colorComponents[2]\n                }));\n            }\n        }, e;\n    }\n    return __extends(e, t), e.prototype.componentDidUpdate = function(t, e) {\n        return this.props.colorChangedEvent && this.state.hex !== e.hex && this.props.colorChangedEvent(this.state.hex), !0;\n    }, e.prototype.render = function() {\n        var t = this;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-color-picker\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-color-selectors\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-color-component\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", null, \"Red\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"255\",\n            value: this.state.red,\n            onChange: function(e) {\n                t.setState({\n                    red: e.target.value\n                }), t.handleChange(\"r\", e.target.value);\n            }\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            className: \"lf-text-input\",\n            type: \"number\",\n            min: \"0\",\n            max: \"255\",\n            value: this.state.red,\n            onChange: function(e) {\n                t.setState({\n                    red: e.target.value\n                }), t.handleChange(\"r\", e.target.value);\n            }\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-color-component\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", null, \"Green\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"255\",\n            value: this.state.green,\n            onChange: function(e) {\n                t.setState({\n                    green: e.target.value\n                }), t.handleChange(\"g\", e.target.value);\n            }\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            className: \"lf-text-input\",\n            type: \"number\",\n            min: \"0\",\n            max: \"255\",\n            value: this.state.green,\n            onChange: function(e) {\n                t.setState({\n                    green: e.target.value\n                }), t.handleChange(\"g\", e.target.value);\n            }\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-color-component\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", null, \"Blue\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"255\",\n            value: this.state.blue,\n            onChange: function(e) {\n                t.setState({\n                    blue: e.target.value\n                }), t.handleChange(\"b\", e.target.value);\n            }\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            className: \"lf-text-input\",\n            type: \"number\",\n            min: \"0\",\n            max: \"255\",\n            value: this.state.blue,\n            onChange: function(e) {\n                t.setState({\n                    blue: e.target.value\n                }), t.handleChange(\"b\", e.target.value);\n            }\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-color-preview\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-preview\",\n            style: {\n                background: \"rgb(\" + this.state.red + \", \" + this.state.green + \", \" + this.state.blue + \")\"\n            }\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            className: \"lf-text-input\",\n            type: \"text\",\n            value: this.state.hex,\n            onChange: function(e) {\n                t.setState({\n                    hex: e.target.value\n                }), t.parseColor(e.target.value);\n            }\n        }))));\n    }, e;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component), Popover = function(t) {\n    _s();\n    var e = t.children, r = t.icon, i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), a = i[0], s = i[1], n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), o = n[0], h = n[1], l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), p = l[0], f = l[1], c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), m = c[0], d = c[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (a && o) {\n            var t = a.getBoundingClientRect(), e = o.getBoundingClientRect(), r = t.left + e.width > window.innerWidth ? -1 : 0;\n            f(r);\n        }\n    }, [\n        p,\n        o,\n        a\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lf-popover\",\n        onMouseOver: function() {\n            d(!0);\n        },\n        onMouseLeave: function() {\n            d(!1);\n        },\n        ref: function(t) {\n            s(t);\n        }\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \" lf-player-btn\"\n    }, r), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lf-popover-content\",\n        ref: function(t) {\n            h(t);\n        },\n        style: {\n            bottom: \"22px\",\n            right: \"0px\",\n            zIndex: 2,\n            visibility: m ? \"visible\" : \"hidden\"\n        }\n    }, e));\n}, Seeker = function(t) {\n    function e(e) {\n        var r = t.call(this, e) || this;\n        return r.inputRef = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createRef(), r.handleChange = function() {\n            return function(t) {\n                var e = t.target.value, i = Math.floor(e / 100 * r.props.max);\n                r.props.onChange(i);\n            };\n        }, r.state = {\n            value: 0\n        }, r;\n    }\n    return __extends(e, t), e.prototype.render = function() {\n        var t = this.props.value / this.props.max * 100, e = {\n            backgroundImage: \"-webkit-gradient(linear, left top, right top, color-stop(\" + t + \"%, rgba(15, 204, 206, 0.4)), color-stop(\" + t + \"%, #DAE1E7))\"\n        }, r = {\n            position: \"absolute\",\n            left: 0,\n            marginTop: \"8px\",\n            width: \"20px\",\n            display: \"block\",\n            border: \"0px\",\n            backgroundColor: this.props.darkTheme ? \"#505050\" : \"rgb(218, 225, 231)\",\n            color: this.props.darkTheme ? \"#B9B9B9\" : \"#555\",\n            padding: \"2px\",\n            textAlign: \"center\",\n            borderRadius: \"3px\",\n            fontSize: \"8px\",\n            fontWeight: \"bold\"\n        }, i = {\n            position: \"absolute\",\n            right: 0,\n            marginTop: \"8px\",\n            width: \"20px\",\n            display: \"block\",\n            border: \"0px\",\n            backgroundColor: this.props.darkTheme ? \"#505050\" : \"rgb(218, 225, 231)\",\n            color: this.props.darkTheme ? \"#B9B9B9\" : \"#555\",\n            padding: \"2px\",\n            textAlign: \"center\",\n            borderRadius: \"3px\",\n            fontSize: \"8px\",\n            fontWeight: \"bold\"\n        };\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                width: \"100%\",\n                marginRight: \"5px\",\n                marginLeft: \"5px\",\n                position: \"relative\"\n            }\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            ref: this.inputRef,\n            id: \"track\",\n            className: \"lf-progress\",\n            name: \"progress\",\n            \"aria-label\": \"progress\",\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            step: \"0.1\",\n            value: t,\n            onInput: this.handleChange(),\n            onChange: this.handleChange(),\n            style: e\n        }), this.props.showLabels && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n            }\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: r\n        }, this.props.min), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: i\n        }, this.props.max)));\n    }, e;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component), ControlButtonStyle = {\n    display: \"inline-flex\",\n    cursor: \"pointer\"\n}, Controls = function(t) {\n    function e(e) {\n        var r = t.call(this, e) || this;\n        return r.state = {\n            activeFrame: 0,\n            mouseDown: !1\n        }, r;\n    }\n    return __extends(e, t), e.prototype.render = function() {\n        var t = this, e = this.props, r = e.instance, i = e.playerState, a = e.seeker, s = e.setLoop, n = e.setSeeker, o = e.play, h = e.pause, l = e.stop, p = e.visible, f = e.buttons;\n        if (!r) return null;\n        if (!p) return null;\n        var c = !f || f.includes(\"play\"), m = !f || f.includes(\"stop\"), d = !f || f.includes(\"repeat\"), u = !f || f.includes(\"frame\"), y = !f || f.includes(\"background\"), g = !f || f.includes(\"snapshot\"), v = {\n            width: 14,\n            height: 14,\n            viewBox: \"0 0 24 24\"\n        }, b = Math.round(r.currentFrame);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"lf-player-controls\",\n            style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                height: \"60px\",\n                alignItems: \"center\",\n                backgroundColor: this.props.transparentTheme ? \"transparent\" : this.props.darkTheme ? \"#3C3C3C\" : \"#ffffff\",\n                paddingLeft: \"10px\",\n                paddingRight: \"10px\"\n            }\n        }, c && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            role: \"button\",\n            \"aria-label\": i === PlayerState.Playing ? PlayerEvent.Pause : PlayerEvent.Play,\n            tabIndex: 0,\n            onClick: function() {\n                i === PlayerState.Playing ? \"function\" == typeof h && h() : \"function\" == typeof o && o();\n            },\n            onKeyDown: function() {\n                i === PlayerState.Playing ? \"function\" == typeof h && h() : \"function\" == typeof o && o();\n            },\n            className: \"lf-player-btn\",\n            style: ControlButtonStyle\n        }, i === PlayerState.Playing ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __assign({}, v), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            height: \"22.9\",\n            rx: \"1.9\",\n            width: \"7.6\",\n            x: \"14\",\n            y: \".5\"\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            height: \"22.9\",\n            rx: \"1.9\",\n            width: \"7.6\",\n            x: \"2\",\n            y: \".5\"\n        })) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __assign({}, v), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n            d: \"M2 3.4C2 1.9 3.5 1 4.8 1.8l16.5 9.6c1.2.7 1.2 2.5 0 3.2L4.8 24.2C3.5 25 2 24.1 2 22.6V3.4z\"\n        }))), m && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            tabIndex: 0,\n            role: \"button\",\n            \"aria-label\": PlayerEvent.Stop,\n            onClick: function() {\n                return l && l();\n            },\n            onKeyDown: function() {\n                return l && l();\n            },\n            className: i === PlayerState.Stopped ? \"lf-player-btn active\" : \"lf-player-btn\",\n            style: ControlButtonStyle\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __assign({}, v), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n            d: \"M2 3.667A1.67 1.67 0 0 1 3.667 2h16.666A1.67 1.67 0 0 1 22 3.667v16.666A1.67 1.67 0 0 1 20.333\\n            22H3.667A1.67 1.67 0 0 1 2 20.333z\"\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Seeker, {\n            min: 0,\n            step: 1,\n            max: r ? r.totalFrames : 1,\n            value: a || 0,\n            onChange: function(e) {\n                n && t.setState({\n                    activeFrame: e\n                }, function() {\n                    n(e, !1);\n                });\n            },\n            onChangeEnd: function(e) {\n                n && t.setState({\n                    activeFrame: e\n                }, function() {\n                    n(e, !1);\n                });\n            },\n            showLabels: this.props.showLabels,\n            darkTheme: this.props.darkTheme\n        }), u && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            role: \"button\",\n            className: \"lf-player-btn-container\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            style: {\n                outline: \"none\",\n                border: this.props.darkTheme ? \"1px #505050 solid\" : \"1px #ccc solid\",\n                borderRadius: \"3px\",\n                width: \"40px\",\n                textAlign: \"center\",\n                backgroundColor: this.props.darkTheme ? \"#505050\" : \"#ffffff\",\n                color: this.props.darkTheme ? \"#B9B9B9\" : \"#999\",\n                fontSize: \"0.7rem\",\n                padding: \"0\",\n                fontFamily: \"inherit\"\n            },\n            type: \"text\",\n            value: b,\n            readOnly: !0\n        })), d && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            role: \"button\",\n            \"aria-label\": PlayerEvent.Loop,\n            tabIndex: 0,\n            onClick: function() {\n                r && s && s(!r.loop);\n            },\n            onKeyDown: function() {\n                r && s && s(!r.loop);\n            },\n            className: r.loop ? \"lf-player-btn active\" : \"lf-player-btn\",\n            style: ControlButtonStyle\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __assign({}, v), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n            d: \"M12.5 16.8137h-.13v1.8939h4.9696c3.6455 0 6.6113-2.9658 6.6113-6.6116\\n            0-3.64549-2.9658-6.61131-6.6113-6.61131-.5231 0-.947.42391-.947.94696 0 .52304.4239.94696.947.94696 2.6011 0\\n            4.7174 2.11634 4.7174 4.71739 0 2.6014-2.1166 4.7177-4.7174 4.7177H12.5zM13.6025\\n            5.61469v-.13H7.48137C3.83582 5.48469.87 8.45051.87 12.096c0 3.6509 3.17269 6.6117 6.81304 6.6117.52304 0\\n            .94696-.424.94696-.947 0-.5231-.42392-.947-.94696-.947-2.60804 0-4.91907-2.1231-4.91907-4.7176 0-2.60115\\n            2.11634-4.71744 4.7174-4.71744h6.12113V5.61469z\",\n            stroke: \"#8795A1\",\n            strokeWidth: \".26\"\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n            d: \"M11.1482\\n            2.20355h0l-.001-.00116c-.3412-.40061-.9405-.44558-1.33668-.0996h-.00001c-.39526.34519-.43936.94795-.09898\\n            1.34767l2.51487 3.03683-2.51894 3.06468c-.33872.40088-.29282 1.00363.10347\\n            1.34723l.08517-.0982-.08517.0982c.17853.1549.39807.2308.61647.2308.2671 0 .5328-.114.72-.3347h0l.0011-.0014\\n            3.0435-3.68655.0006-.00068c.3035-.35872.3025-.88754-.0019-1.24526l-3.0425-3.65786zM13.9453\\n            21.7965h0l.001.0011c.3413.4006.9407.4456 1.337.0996h0c.3953-.3452.4395-.9479.099-1.3477l-2.5154-3.0368\\n            2.5195-3.0647c.3388-.4008.2929-1.0036-.1035-1.3472l-.0852.0982.0852-.0982c-.1786-.1549-.3981-.2308-.6166-.2308-.2671\\n            0-.5329.114-.7202.3347h0l-.0011.0014-3.0442\\n            3.6865c-.0001.0003-.0003.0005-.0005.0007-.3036.3587-.3027.8876.0019 1.2453l3.0431 3.6579z\",\n            fill: \"#8795A1\",\n            stroke: \"#8795A1\",\n            strokeWidth: \".26\"\n        }))), y && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Popover, {\n            icon: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __assign({}, v), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n                d: \"M12 3.1L6.1 8.6a7.6 7.6 0 00-2.2 4 7.2 7.2 0 00.4 4.4 7.9 7.9 0 003 3.5 8.7 8.7 0 004.7 1.3c1.6 0\\n            3.2-.5 4.6-1.3s2.4-2 3-3.5a7.2 7.2 0 00.5-4.5 7.6 7.6 0 00-2.2-4L12 3.2zM12 0l7.5 7a9.8 9.8 0 013 5.1\\n            9.3 9.3 0 01-.6 5.8c-.9 1.8-2.2 3.3-4 4.4A11.2 11.2 0 0112 24a11.2 11.2 0\\n            01-6-1.7c-1.7-1-3-2.6-3.9-4.4a9.3 9.3 0 01-.6-5.8c.4-2 1.5-3.7 3-5L12 0zM6 14h12c0 1.5-.7 3-1.8 4s-2.6\\n            1.6-4.2 1.6S9 19 7.8 18s-1.7-2.5-1.7-4z\"\n            }))\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            slot: \"content\",\n            className: \"lf-popover popover-background\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ColorPicker, {\n            colorChangedEvent: this.props.colorChangedEvent\n        }))), g && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Popover, {\n            icon: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __assign({}, v), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n                clipRule: \"evenodd\",\n                d: \"M0 3.01A2.983 2.983 0 012.983.027H16.99a2.983 2.983 0 012.983 2.983v14.008a2.982 2.982 0 01-2.983\\n              2.983H2.983A2.983 2.983 0 010 17.018zm2.983-.941a.941.941 0 00-.942.94v14.01c0\\n              .52.422.94.942.94H16.99a.94.94 0 00.941-.94V3.008a.941.941 0 00-.94-.94H2.981z\",\n                fillRule: \"evenodd\"\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n                d: \"M12.229 7.945l-2.07 4.598-2.586-2.605-2.414 2.758v2.146h9.656V11.93z\"\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", {\n                cx: \"7.444\",\n                cy: \"6.513\",\n                r: \"2.032\"\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n                d: \"M9.561 23.916h11.25a2.929 2.929 0 002.926-2.927V9.954a1.06 1.06 0 10-2.122 0v11.035a.805.805 0\\n              01-.803.804H9.562a1.061 1.061 0 100 2.123z\",\n                stroke: \"#8795a1\",\n                strokeWidth: \".215\"\n            }))\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            slot: \"content\",\n            className: \"lf-popover lf-popover-snapshot\",\n            onWheel: function(t) {\n                n && n(b + (t.deltaY > 0 ? -1 : 1), !1);\n            }\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h5\", null, \"Frame \", b), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: {\n                cursor: \"pointer\",\n                color: \"#0FCCCE\"\n            },\n            onClick: this.props.snapshot\n        }, \"Download SVG\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: {\n                cursor: \"pointer\",\n                color: \"#0FCCCE\"\n            },\n            onClick: this.props.snapshot\n        }, \"Download PNG\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"i\", {\n            className: \"lf-note\"\n        }, \"Scroll with mousewheel to find exact frame\"))));\n    }, e;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n_s(Popover, \"qBega1nWOeU4YXr0IIbmRcE2ENw=\");\n //# sourceMappingURL=lottie-react.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@lottiefiles/react-lottie-player/dist/lottie-react.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/image.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/api/image.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/lib/image-external */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js\");\n/* harmony import */ var _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n //# sourceMappingURL=image.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2ltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUNWLENBRTdDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9pbWFnZS5qcz9kMTAxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLi4vc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbFwiO1xuZXhwb3J0ICogZnJvbSBcIi4uL3NoYXJlZC9saWIvaW1hZ2UtZXh0ZXJuYWxcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UuanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/image.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/link.js":
/*!********************************************!*\
  !*** ./node_modules/next/dist/api/link.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _client_link__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _client_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/link */ \"(app-pages-browser)/./node_modules/next/dist/client/link.js\");\n/* harmony import */ var _client_link__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_link__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_link__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_link__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2xpbmsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlDO0FBQ1YsQ0FFL0IsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2xpbmsuanM/MTMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4uL2NsaWVudC9saW5rXCI7XG5leHBvcnQgKiBmcm9tIFwiLi4vY2xpZW50L2xpbmtcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdELENBRWhELHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzPzFkMjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\"); //# sourceMappingURL=process.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxpQkFBaUJDO0FBQ3JCQyxPQUFPQyxPQUFPLEdBQUcsQ0FBQyxDQUFDSCxrQkFBa0JJLHFCQUFNQSxDQUFDQyxPQUFPLEtBQUssT0FBTyxLQUFLLElBQUlMLGdCQUFnQk0sR0FBRyxLQUFLLE9BQVEsRUFBQ0wsbUJBQW1CRyxxQkFBTUEsQ0FBQ0MsT0FBTyxLQUFLLE9BQU8sS0FBSyxJQUFJSixpQkFBaUJLLEdBQUcsTUFBTSxXQUFXRixxQkFBTUEsQ0FBQ0MsT0FBTyxHQUFHRSxtQkFBT0EsQ0FBQyw0R0FBNEIsR0FFelAsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/Y2E2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOlsiX2dsb2JhbF9wcm9jZXNzIiwiX2dsb2JhbF9wcm9jZXNzMSIsIm1vZHVsZSIsImV4cG9ydHMiLCJnbG9iYWwiLCJwcm9jZXNzIiwiZW52IiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n\n(function() {\n    var e = {\n        675: function(e, r) {\n            \"use strict\";\n            r.byteLength = byteLength;\n            r.toByteArray = toByteArray;\n            r.fromByteArray = fromByteArray;\n            var t = [];\n            var f = [];\n            var n = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n            var i = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            for(var o = 0, u = i.length; o < u; ++o){\n                t[o] = i[o];\n                f[i.charCodeAt(o)] = o;\n            }\n            f[\"-\".charCodeAt(0)] = 62;\n            f[\"_\".charCodeAt(0)] = 63;\n            function getLens(e) {\n                var r = e.length;\n                if (r % 4 > 0) {\n                    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n                }\n                var t = e.indexOf(\"=\");\n                if (t === -1) t = r;\n                var f = t === r ? 0 : 4 - t % 4;\n                return [\n                    t,\n                    f\n                ];\n            }\n            function byteLength(e) {\n                var r = getLens(e);\n                var t = r[0];\n                var f = r[1];\n                return (t + f) * 3 / 4 - f;\n            }\n            function _byteLength(e, r, t) {\n                return (r + t) * 3 / 4 - t;\n            }\n            function toByteArray(e) {\n                var r;\n                var t = getLens(e);\n                var i = t[0];\n                var o = t[1];\n                var u = new n(_byteLength(e, i, o));\n                var a = 0;\n                var s = o > 0 ? i - 4 : i;\n                var h;\n                for(h = 0; h < s; h += 4){\n                    r = f[e.charCodeAt(h)] << 18 | f[e.charCodeAt(h + 1)] << 12 | f[e.charCodeAt(h + 2)] << 6 | f[e.charCodeAt(h + 3)];\n                    u[a++] = r >> 16 & 255;\n                    u[a++] = r >> 8 & 255;\n                    u[a++] = r & 255;\n                }\n                if (o === 2) {\n                    r = f[e.charCodeAt(h)] << 2 | f[e.charCodeAt(h + 1)] >> 4;\n                    u[a++] = r & 255;\n                }\n                if (o === 1) {\n                    r = f[e.charCodeAt(h)] << 10 | f[e.charCodeAt(h + 1)] << 4 | f[e.charCodeAt(h + 2)] >> 2;\n                    u[a++] = r >> 8 & 255;\n                    u[a++] = r & 255;\n                }\n                return u;\n            }\n            function tripletToBase64(e) {\n                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];\n            }\n            function encodeChunk(e, r, t) {\n                var f;\n                var n = [];\n                for(var i = r; i < t; i += 3){\n                    f = (e[i] << 16 & 16711680) + (e[i + 1] << 8 & 65280) + (e[i + 2] & 255);\n                    n.push(tripletToBase64(f));\n                }\n                return n.join(\"\");\n            }\n            function fromByteArray(e) {\n                var r;\n                var f = e.length;\n                var n = f % 3;\n                var i = [];\n                var o = 16383;\n                for(var u = 0, a = f - n; u < a; u += o){\n                    i.push(encodeChunk(e, u, u + o > a ? a : u + o));\n                }\n                if (n === 1) {\n                    r = e[f - 1];\n                    i.push(t[r >> 2] + t[r << 4 & 63] + \"==\");\n                } else if (n === 2) {\n                    r = (e[f - 2] << 8) + e[f - 1];\n                    i.push(t[r >> 10] + t[r >> 4 & 63] + t[r << 2 & 63] + \"=\");\n                }\n                return i.join(\"\");\n            }\n        },\n        72: function(e, r, t) {\n            \"use strict\";\n            /*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ var f = t(675);\n            var n = t(783);\n            var i = typeof Symbol === \"function\" && typeof Symbol.for === \"function\" ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\n            r.Buffer = Buffer;\n            r.SlowBuffer = SlowBuffer;\n            r.INSPECT_MAX_BYTES = 50;\n            var o = 2147483647;\n            r.kMaxLength = o;\n            Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n            if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n                console.error(\"This browser lacks typed array (Uint8Array) support which is required by \" + \"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\n            }\n            function typedArraySupport() {\n                try {\n                    var e = new Uint8Array(1);\n                    var r = {\n                        foo: function() {\n                            return 42;\n                        }\n                    };\n                    Object.setPrototypeOf(r, Uint8Array.prototype);\n                    Object.setPrototypeOf(e, r);\n                    return e.foo() === 42;\n                } catch (e) {\n                    return false;\n                }\n            }\n            Object.defineProperty(Buffer.prototype, \"parent\", {\n                enumerable: true,\n                get: function() {\n                    if (!Buffer.isBuffer(this)) return undefined;\n                    return this.buffer;\n                }\n            });\n            Object.defineProperty(Buffer.prototype, \"offset\", {\n                enumerable: true,\n                get: function() {\n                    if (!Buffer.isBuffer(this)) return undefined;\n                    return this.byteOffset;\n                }\n            });\n            function createBuffer(e) {\n                if (e > o) {\n                    throw new RangeError('The value \"' + e + '\" is invalid for option \"size\"');\n                }\n                var r = new Uint8Array(e);\n                Object.setPrototypeOf(r, Buffer.prototype);\n                return r;\n            }\n            function Buffer(e, r, t) {\n                if (typeof e === \"number\") {\n                    if (typeof r === \"string\") {\n                        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n                    }\n                    return allocUnsafe(e);\n                }\n                return from(e, r, t);\n            }\n            Buffer.poolSize = 8192;\n            function from(e, r, t) {\n                if (typeof e === \"string\") {\n                    return fromString(e, r);\n                }\n                if (ArrayBuffer.isView(e)) {\n                    return fromArrayLike(e);\n                }\n                if (e == null) {\n                    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof e);\n                }\n                if (isInstance(e, ArrayBuffer) || e && isInstance(e.buffer, ArrayBuffer)) {\n                    return fromArrayBuffer(e, r, t);\n                }\n                if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(e, SharedArrayBuffer) || e && isInstance(e.buffer, SharedArrayBuffer))) {\n                    return fromArrayBuffer(e, r, t);\n                }\n                if (typeof e === \"number\") {\n                    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n                }\n                var f = e.valueOf && e.valueOf();\n                if (f != null && f !== e) {\n                    return Buffer.from(f, r, t);\n                }\n                var n = fromObject(e);\n                if (n) return n;\n                if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] === \"function\") {\n                    return Buffer.from(e[Symbol.toPrimitive](\"string\"), r, t);\n                }\n                throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof e);\n            }\n            Buffer.from = function(e, r, t) {\n                return from(e, r, t);\n            };\n            Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n            Object.setPrototypeOf(Buffer, Uint8Array);\n            function assertSize(e) {\n                if (typeof e !== \"number\") {\n                    throw new TypeError('\"size\" argument must be of type number');\n                } else if (e < 0) {\n                    throw new RangeError('The value \"' + e + '\" is invalid for option \"size\"');\n                }\n            }\n            function alloc(e, r, t) {\n                assertSize(e);\n                if (e <= 0) {\n                    return createBuffer(e);\n                }\n                if (r !== undefined) {\n                    return typeof t === \"string\" ? createBuffer(e).fill(r, t) : createBuffer(e).fill(r);\n                }\n                return createBuffer(e);\n            }\n            Buffer.alloc = function(e, r, t) {\n                return alloc(e, r, t);\n            };\n            function allocUnsafe(e) {\n                assertSize(e);\n                return createBuffer(e < 0 ? 0 : checked(e) | 0);\n            }\n            Buffer.allocUnsafe = function(e) {\n                return allocUnsafe(e);\n            };\n            Buffer.allocUnsafeSlow = function(e) {\n                return allocUnsafe(e);\n            };\n            function fromString(e, r) {\n                if (typeof r !== \"string\" || r === \"\") {\n                    r = \"utf8\";\n                }\n                if (!Buffer.isEncoding(r)) {\n                    throw new TypeError(\"Unknown encoding: \" + r);\n                }\n                var t = byteLength(e, r) | 0;\n                var f = createBuffer(t);\n                var n = f.write(e, r);\n                if (n !== t) {\n                    f = f.slice(0, n);\n                }\n                return f;\n            }\n            function fromArrayLike(e) {\n                var r = e.length < 0 ? 0 : checked(e.length) | 0;\n                var t = createBuffer(r);\n                for(var f = 0; f < r; f += 1){\n                    t[f] = e[f] & 255;\n                }\n                return t;\n            }\n            function fromArrayBuffer(e, r, t) {\n                if (r < 0 || e.byteLength < r) {\n                    throw new RangeError('\"offset\" is outside of buffer bounds');\n                }\n                if (e.byteLength < r + (t || 0)) {\n                    throw new RangeError('\"length\" is outside of buffer bounds');\n                }\n                var f;\n                if (r === undefined && t === undefined) {\n                    f = new Uint8Array(e);\n                } else if (t === undefined) {\n                    f = new Uint8Array(e, r);\n                } else {\n                    f = new Uint8Array(e, r, t);\n                }\n                Object.setPrototypeOf(f, Buffer.prototype);\n                return f;\n            }\n            function fromObject(e) {\n                if (Buffer.isBuffer(e)) {\n                    var r = checked(e.length) | 0;\n                    var t = createBuffer(r);\n                    if (t.length === 0) {\n                        return t;\n                    }\n                    e.copy(t, 0, 0, r);\n                    return t;\n                }\n                if (e.length !== undefined) {\n                    if (typeof e.length !== \"number\" || numberIsNaN(e.length)) {\n                        return createBuffer(0);\n                    }\n                    return fromArrayLike(e);\n                }\n                if (e.type === \"Buffer\" && Array.isArray(e.data)) {\n                    return fromArrayLike(e.data);\n                }\n            }\n            function checked(e) {\n                if (e >= o) {\n                    throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + o.toString(16) + \" bytes\");\n                }\n                return e | 0;\n            }\n            function SlowBuffer(e) {\n                if (+e != e) {\n                    e = 0;\n                }\n                return Buffer.alloc(+e);\n            }\n            Buffer.isBuffer = function isBuffer(e) {\n                return e != null && e._isBuffer === true && e !== Buffer.prototype;\n            };\n            Buffer.compare = function compare(e, r) {\n                if (isInstance(e, Uint8Array)) e = Buffer.from(e, e.offset, e.byteLength);\n                if (isInstance(r, Uint8Array)) r = Buffer.from(r, r.offset, r.byteLength);\n                if (!Buffer.isBuffer(e) || !Buffer.isBuffer(r)) {\n                    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n                }\n                if (e === r) return 0;\n                var t = e.length;\n                var f = r.length;\n                for(var n = 0, i = Math.min(t, f); n < i; ++n){\n                    if (e[n] !== r[n]) {\n                        t = e[n];\n                        f = r[n];\n                        break;\n                    }\n                }\n                if (t < f) return -1;\n                if (f < t) return 1;\n                return 0;\n            };\n            Buffer.isEncoding = function isEncoding(e) {\n                switch(String(e).toLowerCase()){\n                    case \"hex\":\n                    case \"utf8\":\n                    case \"utf-8\":\n                    case \"ascii\":\n                    case \"latin1\":\n                    case \"binary\":\n                    case \"base64\":\n                    case \"ucs2\":\n                    case \"ucs-2\":\n                    case \"utf16le\":\n                    case \"utf-16le\":\n                        return true;\n                    default:\n                        return false;\n                }\n            };\n            Buffer.concat = function concat(e, r) {\n                if (!Array.isArray(e)) {\n                    throw new TypeError('\"list\" argument must be an Array of Buffers');\n                }\n                if (e.length === 0) {\n                    return Buffer.alloc(0);\n                }\n                var t;\n                if (r === undefined) {\n                    r = 0;\n                    for(t = 0; t < e.length; ++t){\n                        r += e[t].length;\n                    }\n                }\n                var f = Buffer.allocUnsafe(r);\n                var n = 0;\n                for(t = 0; t < e.length; ++t){\n                    var i = e[t];\n                    if (isInstance(i, Uint8Array)) {\n                        i = Buffer.from(i);\n                    }\n                    if (!Buffer.isBuffer(i)) {\n                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n                    }\n                    i.copy(f, n);\n                    n += i.length;\n                }\n                return f;\n            };\n            function byteLength(e, r) {\n                if (Buffer.isBuffer(e)) {\n                    return e.length;\n                }\n                if (ArrayBuffer.isView(e) || isInstance(e, ArrayBuffer)) {\n                    return e.byteLength;\n                }\n                if (typeof e !== \"string\") {\n                    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + \"Received type \" + typeof e);\n                }\n                var t = e.length;\n                var f = arguments.length > 2 && arguments[2] === true;\n                if (!f && t === 0) return 0;\n                var n = false;\n                for(;;){\n                    switch(r){\n                        case \"ascii\":\n                        case \"latin1\":\n                        case \"binary\":\n                            return t;\n                        case \"utf8\":\n                        case \"utf-8\":\n                            return utf8ToBytes(e).length;\n                        case \"ucs2\":\n                        case \"ucs-2\":\n                        case \"utf16le\":\n                        case \"utf-16le\":\n                            return t * 2;\n                        case \"hex\":\n                            return t >>> 1;\n                        case \"base64\":\n                            return base64ToBytes(e).length;\n                        default:\n                            if (n) {\n                                return f ? -1 : utf8ToBytes(e).length;\n                            }\n                            r = (\"\" + r).toLowerCase();\n                            n = true;\n                    }\n                }\n            }\n            Buffer.byteLength = byteLength;\n            function slowToString(e, r, t) {\n                var f = false;\n                if (r === undefined || r < 0) {\n                    r = 0;\n                }\n                if (r > this.length) {\n                    return \"\";\n                }\n                if (t === undefined || t > this.length) {\n                    t = this.length;\n                }\n                if (t <= 0) {\n                    return \"\";\n                }\n                t >>>= 0;\n                r >>>= 0;\n                if (t <= r) {\n                    return \"\";\n                }\n                if (!e) e = \"utf8\";\n                while(true){\n                    switch(e){\n                        case \"hex\":\n                            return hexSlice(this, r, t);\n                        case \"utf8\":\n                        case \"utf-8\":\n                            return utf8Slice(this, r, t);\n                        case \"ascii\":\n                            return asciiSlice(this, r, t);\n                        case \"latin1\":\n                        case \"binary\":\n                            return latin1Slice(this, r, t);\n                        case \"base64\":\n                            return base64Slice(this, r, t);\n                        case \"ucs2\":\n                        case \"ucs-2\":\n                        case \"utf16le\":\n                        case \"utf-16le\":\n                            return utf16leSlice(this, r, t);\n                        default:\n                            if (f) throw new TypeError(\"Unknown encoding: \" + e);\n                            e = (e + \"\").toLowerCase();\n                            f = true;\n                    }\n                }\n            }\n            Buffer.prototype._isBuffer = true;\n            function swap(e, r, t) {\n                var f = e[r];\n                e[r] = e[t];\n                e[t] = f;\n            }\n            Buffer.prototype.swap16 = function swap16() {\n                var e = this.length;\n                if (e % 2 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n                }\n                for(var r = 0; r < e; r += 2){\n                    swap(this, r, r + 1);\n                }\n                return this;\n            };\n            Buffer.prototype.swap32 = function swap32() {\n                var e = this.length;\n                if (e % 4 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n                }\n                for(var r = 0; r < e; r += 4){\n                    swap(this, r, r + 3);\n                    swap(this, r + 1, r + 2);\n                }\n                return this;\n            };\n            Buffer.prototype.swap64 = function swap64() {\n                var e = this.length;\n                if (e % 8 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n                }\n                for(var r = 0; r < e; r += 8){\n                    swap(this, r, r + 7);\n                    swap(this, r + 1, r + 6);\n                    swap(this, r + 2, r + 5);\n                    swap(this, r + 3, r + 4);\n                }\n                return this;\n            };\n            Buffer.prototype.toString = function toString() {\n                var e = this.length;\n                if (e === 0) return \"\";\n                if (arguments.length === 0) return utf8Slice(this, 0, e);\n                return slowToString.apply(this, arguments);\n            };\n            Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n            Buffer.prototype.equals = function equals(e) {\n                if (!Buffer.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n                if (this === e) return true;\n                return Buffer.compare(this, e) === 0;\n            };\n            Buffer.prototype.inspect = function inspect() {\n                var e = \"\";\n                var t = r.INSPECT_MAX_BYTES;\n                e = this.toString(\"hex\", 0, t).replace(/(.{2})/g, \"$1 \").trim();\n                if (this.length > t) e += \" ... \";\n                return \"<Buffer \" + e + \">\";\n            };\n            if (i) {\n                Buffer.prototype[i] = Buffer.prototype.inspect;\n            }\n            Buffer.prototype.compare = function compare(e, r, t, f, n) {\n                if (isInstance(e, Uint8Array)) {\n                    e = Buffer.from(e, e.offset, e.byteLength);\n                }\n                if (!Buffer.isBuffer(e)) {\n                    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + \"Received type \" + typeof e);\n                }\n                if (r === undefined) {\n                    r = 0;\n                }\n                if (t === undefined) {\n                    t = e ? e.length : 0;\n                }\n                if (f === undefined) {\n                    f = 0;\n                }\n                if (n === undefined) {\n                    n = this.length;\n                }\n                if (r < 0 || t > e.length || f < 0 || n > this.length) {\n                    throw new RangeError(\"out of range index\");\n                }\n                if (f >= n && r >= t) {\n                    return 0;\n                }\n                if (f >= n) {\n                    return -1;\n                }\n                if (r >= t) {\n                    return 1;\n                }\n                r >>>= 0;\n                t >>>= 0;\n                f >>>= 0;\n                n >>>= 0;\n                if (this === e) return 0;\n                var i = n - f;\n                var o = t - r;\n                var u = Math.min(i, o);\n                var a = this.slice(f, n);\n                var s = e.slice(r, t);\n                for(var h = 0; h < u; ++h){\n                    if (a[h] !== s[h]) {\n                        i = a[h];\n                        o = s[h];\n                        break;\n                    }\n                }\n                if (i < o) return -1;\n                if (o < i) return 1;\n                return 0;\n            };\n            function bidirectionalIndexOf(e, r, t, f, n) {\n                if (e.length === 0) return -1;\n                if (typeof t === \"string\") {\n                    f = t;\n                    t = 0;\n                } else if (t > 2147483647) {\n                    t = 2147483647;\n                } else if (t < -2147483648) {\n                    t = -2147483648;\n                }\n                t = +t;\n                if (numberIsNaN(t)) {\n                    t = n ? 0 : e.length - 1;\n                }\n                if (t < 0) t = e.length + t;\n                if (t >= e.length) {\n                    if (n) return -1;\n                    else t = e.length - 1;\n                } else if (t < 0) {\n                    if (n) t = 0;\n                    else return -1;\n                }\n                if (typeof r === \"string\") {\n                    r = Buffer.from(r, f);\n                }\n                if (Buffer.isBuffer(r)) {\n                    if (r.length === 0) {\n                        return -1;\n                    }\n                    return arrayIndexOf(e, r, t, f, n);\n                } else if (typeof r === \"number\") {\n                    r = r & 255;\n                    if (typeof Uint8Array.prototype.indexOf === \"function\") {\n                        if (n) {\n                            return Uint8Array.prototype.indexOf.call(e, r, t);\n                        } else {\n                            return Uint8Array.prototype.lastIndexOf.call(e, r, t);\n                        }\n                    }\n                    return arrayIndexOf(e, [\n                        r\n                    ], t, f, n);\n                }\n                throw new TypeError(\"val must be string, number or Buffer\");\n            }\n            function arrayIndexOf(e, r, t, f, n) {\n                var i = 1;\n                var o = e.length;\n                var u = r.length;\n                if (f !== undefined) {\n                    f = String(f).toLowerCase();\n                    if (f === \"ucs2\" || f === \"ucs-2\" || f === \"utf16le\" || f === \"utf-16le\") {\n                        if (e.length < 2 || r.length < 2) {\n                            return -1;\n                        }\n                        i = 2;\n                        o /= 2;\n                        u /= 2;\n                        t /= 2;\n                    }\n                }\n                function read(e, r) {\n                    if (i === 1) {\n                        return e[r];\n                    } else {\n                        return e.readUInt16BE(r * i);\n                    }\n                }\n                var a;\n                if (n) {\n                    var s = -1;\n                    for(a = t; a < o; a++){\n                        if (read(e, a) === read(r, s === -1 ? 0 : a - s)) {\n                            if (s === -1) s = a;\n                            if (a - s + 1 === u) return s * i;\n                        } else {\n                            if (s !== -1) a -= a - s;\n                            s = -1;\n                        }\n                    }\n                } else {\n                    if (t + u > o) t = o - u;\n                    for(a = t; a >= 0; a--){\n                        var h = true;\n                        for(var c = 0; c < u; c++){\n                            if (read(e, a + c) !== read(r, c)) {\n                                h = false;\n                                break;\n                            }\n                        }\n                        if (h) return a;\n                    }\n                }\n                return -1;\n            }\n            Buffer.prototype.includes = function includes(e, r, t) {\n                return this.indexOf(e, r, t) !== -1;\n            };\n            Buffer.prototype.indexOf = function indexOf(e, r, t) {\n                return bidirectionalIndexOf(this, e, r, t, true);\n            };\n            Buffer.prototype.lastIndexOf = function lastIndexOf(e, r, t) {\n                return bidirectionalIndexOf(this, e, r, t, false);\n            };\n            function hexWrite(e, r, t, f) {\n                t = Number(t) || 0;\n                var n = e.length - t;\n                if (!f) {\n                    f = n;\n                } else {\n                    f = Number(f);\n                    if (f > n) {\n                        f = n;\n                    }\n                }\n                var i = r.length;\n                if (f > i / 2) {\n                    f = i / 2;\n                }\n                for(var o = 0; o < f; ++o){\n                    var u = parseInt(r.substr(o * 2, 2), 16);\n                    if (numberIsNaN(u)) return o;\n                    e[t + o] = u;\n                }\n                return o;\n            }\n            function utf8Write(e, r, t, f) {\n                return blitBuffer(utf8ToBytes(r, e.length - t), e, t, f);\n            }\n            function asciiWrite(e, r, t, f) {\n                return blitBuffer(asciiToBytes(r), e, t, f);\n            }\n            function latin1Write(e, r, t, f) {\n                return asciiWrite(e, r, t, f);\n            }\n            function base64Write(e, r, t, f) {\n                return blitBuffer(base64ToBytes(r), e, t, f);\n            }\n            function ucs2Write(e, r, t, f) {\n                return blitBuffer(utf16leToBytes(r, e.length - t), e, t, f);\n            }\n            Buffer.prototype.write = function write(e, r, t, f) {\n                if (r === undefined) {\n                    f = \"utf8\";\n                    t = this.length;\n                    r = 0;\n                } else if (t === undefined && typeof r === \"string\") {\n                    f = r;\n                    t = this.length;\n                    r = 0;\n                } else if (isFinite(r)) {\n                    r = r >>> 0;\n                    if (isFinite(t)) {\n                        t = t >>> 0;\n                        if (f === undefined) f = \"utf8\";\n                    } else {\n                        f = t;\n                        t = undefined;\n                    }\n                } else {\n                    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n                }\n                var n = this.length - r;\n                if (t === undefined || t > n) t = n;\n                if (e.length > 0 && (t < 0 || r < 0) || r > this.length) {\n                    throw new RangeError(\"Attempt to write outside buffer bounds\");\n                }\n                if (!f) f = \"utf8\";\n                var i = false;\n                for(;;){\n                    switch(f){\n                        case \"hex\":\n                            return hexWrite(this, e, r, t);\n                        case \"utf8\":\n                        case \"utf-8\":\n                            return utf8Write(this, e, r, t);\n                        case \"ascii\":\n                            return asciiWrite(this, e, r, t);\n                        case \"latin1\":\n                        case \"binary\":\n                            return latin1Write(this, e, r, t);\n                        case \"base64\":\n                            return base64Write(this, e, r, t);\n                        case \"ucs2\":\n                        case \"ucs-2\":\n                        case \"utf16le\":\n                        case \"utf-16le\":\n                            return ucs2Write(this, e, r, t);\n                        default:\n                            if (i) throw new TypeError(\"Unknown encoding: \" + f);\n                            f = (\"\" + f).toLowerCase();\n                            i = true;\n                    }\n                }\n            };\n            Buffer.prototype.toJSON = function toJSON() {\n                return {\n                    type: \"Buffer\",\n                    data: Array.prototype.slice.call(this._arr || this, 0)\n                };\n            };\n            function base64Slice(e, r, t) {\n                if (r === 0 && t === e.length) {\n                    return f.fromByteArray(e);\n                } else {\n                    return f.fromByteArray(e.slice(r, t));\n                }\n            }\n            function utf8Slice(e, r, t) {\n                t = Math.min(e.length, t);\n                var f = [];\n                var n = r;\n                while(n < t){\n                    var i = e[n];\n                    var o = null;\n                    var u = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;\n                    if (n + u <= t) {\n                        var a, s, h, c;\n                        switch(u){\n                            case 1:\n                                if (i < 128) {\n                                    o = i;\n                                }\n                                break;\n                            case 2:\n                                a = e[n + 1];\n                                if ((a & 192) === 128) {\n                                    c = (i & 31) << 6 | a & 63;\n                                    if (c > 127) {\n                                        o = c;\n                                    }\n                                }\n                                break;\n                            case 3:\n                                a = e[n + 1];\n                                s = e[n + 2];\n                                if ((a & 192) === 128 && (s & 192) === 128) {\n                                    c = (i & 15) << 12 | (a & 63) << 6 | s & 63;\n                                    if (c > 2047 && (c < 55296 || c > 57343)) {\n                                        o = c;\n                                    }\n                                }\n                                break;\n                            case 4:\n                                a = e[n + 1];\n                                s = e[n + 2];\n                                h = e[n + 3];\n                                if ((a & 192) === 128 && (s & 192) === 128 && (h & 192) === 128) {\n                                    c = (i & 15) << 18 | (a & 63) << 12 | (s & 63) << 6 | h & 63;\n                                    if (c > 65535 && c < 1114112) {\n                                        o = c;\n                                    }\n                                }\n                        }\n                    }\n                    if (o === null) {\n                        o = 65533;\n                        u = 1;\n                    } else if (o > 65535) {\n                        o -= 65536;\n                        f.push(o >>> 10 & 1023 | 55296);\n                        o = 56320 | o & 1023;\n                    }\n                    f.push(o);\n                    n += u;\n                }\n                return decodeCodePointsArray(f);\n            }\n            var u = 4096;\n            function decodeCodePointsArray(e) {\n                var r = e.length;\n                if (r <= u) {\n                    return String.fromCharCode.apply(String, e);\n                }\n                var t = \"\";\n                var f = 0;\n                while(f < r){\n                    t += String.fromCharCode.apply(String, e.slice(f, f += u));\n                }\n                return t;\n            }\n            function asciiSlice(e, r, t) {\n                var f = \"\";\n                t = Math.min(e.length, t);\n                for(var n = r; n < t; ++n){\n                    f += String.fromCharCode(e[n] & 127);\n                }\n                return f;\n            }\n            function latin1Slice(e, r, t) {\n                var f = \"\";\n                t = Math.min(e.length, t);\n                for(var n = r; n < t; ++n){\n                    f += String.fromCharCode(e[n]);\n                }\n                return f;\n            }\n            function hexSlice(e, r, t) {\n                var f = e.length;\n                if (!r || r < 0) r = 0;\n                if (!t || t < 0 || t > f) t = f;\n                var n = \"\";\n                for(var i = r; i < t; ++i){\n                    n += s[e[i]];\n                }\n                return n;\n            }\n            function utf16leSlice(e, r, t) {\n                var f = e.slice(r, t);\n                var n = \"\";\n                for(var i = 0; i < f.length; i += 2){\n                    n += String.fromCharCode(f[i] + f[i + 1] * 256);\n                }\n                return n;\n            }\n            Buffer.prototype.slice = function slice(e, r) {\n                var t = this.length;\n                e = ~~e;\n                r = r === undefined ? t : ~~r;\n                if (e < 0) {\n                    e += t;\n                    if (e < 0) e = 0;\n                } else if (e > t) {\n                    e = t;\n                }\n                if (r < 0) {\n                    r += t;\n                    if (r < 0) r = 0;\n                } else if (r > t) {\n                    r = t;\n                }\n                if (r < e) r = e;\n                var f = this.subarray(e, r);\n                Object.setPrototypeOf(f, Buffer.prototype);\n                return f;\n            };\n            function checkOffset(e, r, t) {\n                if (e % 1 !== 0 || e < 0) throw new RangeError(\"offset is not uint\");\n                if (e + r > t) throw new RangeError(\"Trying to access beyond buffer length\");\n            }\n            Buffer.prototype.readUIntLE = function readUIntLE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) checkOffset(e, r, this.length);\n                var f = this[e];\n                var n = 1;\n                var i = 0;\n                while(++i < r && (n *= 256)){\n                    f += this[e + i] * n;\n                }\n                return f;\n            };\n            Buffer.prototype.readUIntBE = function readUIntBE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) {\n                    checkOffset(e, r, this.length);\n                }\n                var f = this[e + --r];\n                var n = 1;\n                while(r > 0 && (n *= 256)){\n                    f += this[e + --r] * n;\n                }\n                return f;\n            };\n            Buffer.prototype.readUInt8 = function readUInt8(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 1, this.length);\n                return this[e];\n            };\n            Buffer.prototype.readUInt16LE = function readUInt16LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                return this[e] | this[e + 1] << 8;\n            };\n            Buffer.prototype.readUInt16BE = function readUInt16BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                return this[e] << 8 | this[e + 1];\n            };\n            Buffer.prototype.readUInt32LE = function readUInt32LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;\n            };\n            Buffer.prototype.readUInt32BE = function readUInt32BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);\n            };\n            Buffer.prototype.readIntLE = function readIntLE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) checkOffset(e, r, this.length);\n                var f = this[e];\n                var n = 1;\n                var i = 0;\n                while(++i < r && (n *= 256)){\n                    f += this[e + i] * n;\n                }\n                n *= 128;\n                if (f >= n) f -= Math.pow(2, 8 * r);\n                return f;\n            };\n            Buffer.prototype.readIntBE = function readIntBE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) checkOffset(e, r, this.length);\n                var f = r;\n                var n = 1;\n                var i = this[e + --f];\n                while(f > 0 && (n *= 256)){\n                    i += this[e + --f] * n;\n                }\n                n *= 128;\n                if (i >= n) i -= Math.pow(2, 8 * r);\n                return i;\n            };\n            Buffer.prototype.readInt8 = function readInt8(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 1, this.length);\n                if (!(this[e] & 128)) return this[e];\n                return (255 - this[e] + 1) * -1;\n            };\n            Buffer.prototype.readInt16LE = function readInt16LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                var t = this[e] | this[e + 1] << 8;\n                return t & 32768 ? t | 4294901760 : t;\n            };\n            Buffer.prototype.readInt16BE = function readInt16BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                var t = this[e + 1] | this[e] << 8;\n                return t & 32768 ? t | 4294901760 : t;\n            };\n            Buffer.prototype.readInt32LE = function readInt32LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;\n            };\n            Buffer.prototype.readInt32BE = function readInt32BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];\n            };\n            Buffer.prototype.readFloatLE = function readFloatLE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return n.read(this, e, true, 23, 4);\n            };\n            Buffer.prototype.readFloatBE = function readFloatBE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return n.read(this, e, false, 23, 4);\n            };\n            Buffer.prototype.readDoubleLE = function readDoubleLE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 8, this.length);\n                return n.read(this, e, true, 52, 8);\n            };\n            Buffer.prototype.readDoubleBE = function readDoubleBE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 8, this.length);\n                return n.read(this, e, false, 52, 8);\n            };\n            function checkInt(e, r, t, f, n, i) {\n                if (!Buffer.isBuffer(e)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n                if (r > n || r < i) throw new RangeError('\"value\" argument is out of bounds');\n                if (t + f > e.length) throw new RangeError(\"Index out of range\");\n            }\n            Buffer.prototype.writeUIntLE = function writeUIntLE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                t = t >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t) - 1;\n                    checkInt(this, e, r, t, n, 0);\n                }\n                var i = 1;\n                var o = 0;\n                this[r] = e & 255;\n                while(++o < t && (i *= 256)){\n                    this[r + o] = e / i & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeUIntBE = function writeUIntBE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                t = t >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t) - 1;\n                    checkInt(this, e, r, t, n, 0);\n                }\n                var i = t - 1;\n                var o = 1;\n                this[r + i] = e & 255;\n                while(--i >= 0 && (o *= 256)){\n                    this[r + i] = e / o & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeUInt8 = function writeUInt8(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 1, 255, 0);\n                this[r] = e & 255;\n                return r + 1;\n            };\n            Buffer.prototype.writeUInt16LE = function writeUInt16LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 65535, 0);\n                this[r] = e & 255;\n                this[r + 1] = e >>> 8;\n                return r + 2;\n            };\n            Buffer.prototype.writeUInt16BE = function writeUInt16BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 65535, 0);\n                this[r] = e >>> 8;\n                this[r + 1] = e & 255;\n                return r + 2;\n            };\n            Buffer.prototype.writeUInt32LE = function writeUInt32LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 4294967295, 0);\n                this[r + 3] = e >>> 24;\n                this[r + 2] = e >>> 16;\n                this[r + 1] = e >>> 8;\n                this[r] = e & 255;\n                return r + 4;\n            };\n            Buffer.prototype.writeUInt32BE = function writeUInt32BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 4294967295, 0);\n                this[r] = e >>> 24;\n                this[r + 1] = e >>> 16;\n                this[r + 2] = e >>> 8;\n                this[r + 3] = e & 255;\n                return r + 4;\n            };\n            Buffer.prototype.writeIntLE = function writeIntLE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t - 1);\n                    checkInt(this, e, r, t, n - 1, -n);\n                }\n                var i = 0;\n                var o = 1;\n                var u = 0;\n                this[r] = e & 255;\n                while(++i < t && (o *= 256)){\n                    if (e < 0 && u === 0 && this[r + i - 1] !== 0) {\n                        u = 1;\n                    }\n                    this[r + i] = (e / o >> 0) - u & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeIntBE = function writeIntBE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t - 1);\n                    checkInt(this, e, r, t, n - 1, -n);\n                }\n                var i = t - 1;\n                var o = 1;\n                var u = 0;\n                this[r + i] = e & 255;\n                while(--i >= 0 && (o *= 256)){\n                    if (e < 0 && u === 0 && this[r + i + 1] !== 0) {\n                        u = 1;\n                    }\n                    this[r + i] = (e / o >> 0) - u & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeInt8 = function writeInt8(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 1, 127, -128);\n                if (e < 0) e = 255 + e + 1;\n                this[r] = e & 255;\n                return r + 1;\n            };\n            Buffer.prototype.writeInt16LE = function writeInt16LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 32767, -32768);\n                this[r] = e & 255;\n                this[r + 1] = e >>> 8;\n                return r + 2;\n            };\n            Buffer.prototype.writeInt16BE = function writeInt16BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 32767, -32768);\n                this[r] = e >>> 8;\n                this[r + 1] = e & 255;\n                return r + 2;\n            };\n            Buffer.prototype.writeInt32LE = function writeInt32LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);\n                this[r] = e & 255;\n                this[r + 1] = e >>> 8;\n                this[r + 2] = e >>> 16;\n                this[r + 3] = e >>> 24;\n                return r + 4;\n            };\n            Buffer.prototype.writeInt32BE = function writeInt32BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);\n                if (e < 0) e = 4294967295 + e + 1;\n                this[r] = e >>> 24;\n                this[r + 1] = e >>> 16;\n                this[r + 2] = e >>> 8;\n                this[r + 3] = e & 255;\n                return r + 4;\n            };\n            function checkIEEE754(e, r, t, f, n, i) {\n                if (t + f > e.length) throw new RangeError(\"Index out of range\");\n                if (t < 0) throw new RangeError(\"Index out of range\");\n            }\n            function writeFloat(e, r, t, f, i) {\n                r = +r;\n                t = t >>> 0;\n                if (!i) {\n                    checkIEEE754(e, r, t, 4, 34028234663852886e22, -34028234663852886e22);\n                }\n                n.write(e, r, t, f, 23, 4);\n                return t + 4;\n            }\n            Buffer.prototype.writeFloatLE = function writeFloatLE(e, r, t) {\n                return writeFloat(this, e, r, true, t);\n            };\n            Buffer.prototype.writeFloatBE = function writeFloatBE(e, r, t) {\n                return writeFloat(this, e, r, false, t);\n            };\n            function writeDouble(e, r, t, f, i) {\n                r = +r;\n                t = t >>> 0;\n                if (!i) {\n                    checkIEEE754(e, r, t, 8, 17976931348623157e292, -17976931348623157e292);\n                }\n                n.write(e, r, t, f, 52, 8);\n                return t + 8;\n            }\n            Buffer.prototype.writeDoubleLE = function writeDoubleLE(e, r, t) {\n                return writeDouble(this, e, r, true, t);\n            };\n            Buffer.prototype.writeDoubleBE = function writeDoubleBE(e, r, t) {\n                return writeDouble(this, e, r, false, t);\n            };\n            Buffer.prototype.copy = function copy(e, r, t, f) {\n                if (!Buffer.isBuffer(e)) throw new TypeError(\"argument should be a Buffer\");\n                if (!t) t = 0;\n                if (!f && f !== 0) f = this.length;\n                if (r >= e.length) r = e.length;\n                if (!r) r = 0;\n                if (f > 0 && f < t) f = t;\n                if (f === t) return 0;\n                if (e.length === 0 || this.length === 0) return 0;\n                if (r < 0) {\n                    throw new RangeError(\"targetStart out of bounds\");\n                }\n                if (t < 0 || t >= this.length) throw new RangeError(\"Index out of range\");\n                if (f < 0) throw new RangeError(\"sourceEnd out of bounds\");\n                if (f > this.length) f = this.length;\n                if (e.length - r < f - t) {\n                    f = e.length - r + t;\n                }\n                var n = f - t;\n                if (this === e && typeof Uint8Array.prototype.copyWithin === \"function\") {\n                    this.copyWithin(r, t, f);\n                } else if (this === e && t < r && r < f) {\n                    for(var i = n - 1; i >= 0; --i){\n                        e[i + r] = this[i + t];\n                    }\n                } else {\n                    Uint8Array.prototype.set.call(e, this.subarray(t, f), r);\n                }\n                return n;\n            };\n            Buffer.prototype.fill = function fill(e, r, t, f) {\n                if (typeof e === \"string\") {\n                    if (typeof r === \"string\") {\n                        f = r;\n                        r = 0;\n                        t = this.length;\n                    } else if (typeof t === \"string\") {\n                        f = t;\n                        t = this.length;\n                    }\n                    if (f !== undefined && typeof f !== \"string\") {\n                        throw new TypeError(\"encoding must be a string\");\n                    }\n                    if (typeof f === \"string\" && !Buffer.isEncoding(f)) {\n                        throw new TypeError(\"Unknown encoding: \" + f);\n                    }\n                    if (e.length === 1) {\n                        var n = e.charCodeAt(0);\n                        if (f === \"utf8\" && n < 128 || f === \"latin1\") {\n                            e = n;\n                        }\n                    }\n                } else if (typeof e === \"number\") {\n                    e = e & 255;\n                } else if (typeof e === \"boolean\") {\n                    e = Number(e);\n                }\n                if (r < 0 || this.length < r || this.length < t) {\n                    throw new RangeError(\"Out of range index\");\n                }\n                if (t <= r) {\n                    return this;\n                }\n                r = r >>> 0;\n                t = t === undefined ? this.length : t >>> 0;\n                if (!e) e = 0;\n                var i;\n                if (typeof e === \"number\") {\n                    for(i = r; i < t; ++i){\n                        this[i] = e;\n                    }\n                } else {\n                    var o = Buffer.isBuffer(e) ? e : Buffer.from(e, f);\n                    var u = o.length;\n                    if (u === 0) {\n                        throw new TypeError('The value \"' + e + '\" is invalid for argument \"value\"');\n                    }\n                    for(i = 0; i < t - r; ++i){\n                        this[i + r] = o[i % u];\n                    }\n                }\n                return this;\n            };\n            var a = /[^+/0-9A-Za-z-_]/g;\n            function base64clean(e) {\n                e = e.split(\"=\")[0];\n                e = e.trim().replace(a, \"\");\n                if (e.length < 2) return \"\";\n                while(e.length % 4 !== 0){\n                    e = e + \"=\";\n                }\n                return e;\n            }\n            function utf8ToBytes(e, r) {\n                r = r || Infinity;\n                var t;\n                var f = e.length;\n                var n = null;\n                var i = [];\n                for(var o = 0; o < f; ++o){\n                    t = e.charCodeAt(o);\n                    if (t > 55295 && t < 57344) {\n                        if (!n) {\n                            if (t > 56319) {\n                                if ((r -= 3) > -1) i.push(239, 191, 189);\n                                continue;\n                            } else if (o + 1 === f) {\n                                if ((r -= 3) > -1) i.push(239, 191, 189);\n                                continue;\n                            }\n                            n = t;\n                            continue;\n                        }\n                        if (t < 56320) {\n                            if ((r -= 3) > -1) i.push(239, 191, 189);\n                            n = t;\n                            continue;\n                        }\n                        t = (n - 55296 << 10 | t - 56320) + 65536;\n                    } else if (n) {\n                        if ((r -= 3) > -1) i.push(239, 191, 189);\n                    }\n                    n = null;\n                    if (t < 128) {\n                        if ((r -= 1) < 0) break;\n                        i.push(t);\n                    } else if (t < 2048) {\n                        if ((r -= 2) < 0) break;\n                        i.push(t >> 6 | 192, t & 63 | 128);\n                    } else if (t < 65536) {\n                        if ((r -= 3) < 0) break;\n                        i.push(t >> 12 | 224, t >> 6 & 63 | 128, t & 63 | 128);\n                    } else if (t < 1114112) {\n                        if ((r -= 4) < 0) break;\n                        i.push(t >> 18 | 240, t >> 12 & 63 | 128, t >> 6 & 63 | 128, t & 63 | 128);\n                    } else {\n                        throw new Error(\"Invalid code point\");\n                    }\n                }\n                return i;\n            }\n            function asciiToBytes(e) {\n                var r = [];\n                for(var t = 0; t < e.length; ++t){\n                    r.push(e.charCodeAt(t) & 255);\n                }\n                return r;\n            }\n            function utf16leToBytes(e, r) {\n                var t, f, n;\n                var i = [];\n                for(var o = 0; o < e.length; ++o){\n                    if ((r -= 2) < 0) break;\n                    t = e.charCodeAt(o);\n                    f = t >> 8;\n                    n = t % 256;\n                    i.push(n);\n                    i.push(f);\n                }\n                return i;\n            }\n            function base64ToBytes(e) {\n                return f.toByteArray(base64clean(e));\n            }\n            function blitBuffer(e, r, t, f) {\n                for(var n = 0; n < f; ++n){\n                    if (n + t >= r.length || n >= e.length) break;\n                    r[n + t] = e[n];\n                }\n                return n;\n            }\n            function isInstance(e, r) {\n                return e instanceof r || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === r.name;\n            }\n            function numberIsNaN(e) {\n                return e !== e;\n            }\n            var s = function() {\n                var e = \"0123456789abcdef\";\n                var r = new Array(256);\n                for(var t = 0; t < 16; ++t){\n                    var f = t * 16;\n                    for(var n = 0; n < 16; ++n){\n                        r[f + n] = e[t] + e[n];\n                    }\n                }\n                return r;\n            }();\n        },\n        783: function(e, r) {\n            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ r.read = function(e, r, t, f, n) {\n                var i, o;\n                var u = n * 8 - f - 1;\n                var a = (1 << u) - 1;\n                var s = a >> 1;\n                var h = -7;\n                var c = t ? n - 1 : 0;\n                var l = t ? -1 : 1;\n                var p = e[r + c];\n                c += l;\n                i = p & (1 << -h) - 1;\n                p >>= -h;\n                h += u;\n                for(; h > 0; i = i * 256 + e[r + c], c += l, h -= 8){}\n                o = i & (1 << -h) - 1;\n                i >>= -h;\n                h += f;\n                for(; h > 0; o = o * 256 + e[r + c], c += l, h -= 8){}\n                if (i === 0) {\n                    i = 1 - s;\n                } else if (i === a) {\n                    return o ? NaN : (p ? -1 : 1) * Infinity;\n                } else {\n                    o = o + Math.pow(2, f);\n                    i = i - s;\n                }\n                return (p ? -1 : 1) * o * Math.pow(2, i - f);\n            };\n            r.write = function(e, r, t, f, n, i) {\n                var o, u, a;\n                var s = i * 8 - n - 1;\n                var h = (1 << s) - 1;\n                var c = h >> 1;\n                var l = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n                var p = f ? 0 : i - 1;\n                var y = f ? 1 : -1;\n                var g = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;\n                r = Math.abs(r);\n                if (isNaN(r) || r === Infinity) {\n                    u = isNaN(r) ? 1 : 0;\n                    o = h;\n                } else {\n                    o = Math.floor(Math.log(r) / Math.LN2);\n                    if (r * (a = Math.pow(2, -o)) < 1) {\n                        o--;\n                        a *= 2;\n                    }\n                    if (o + c >= 1) {\n                        r += l / a;\n                    } else {\n                        r += l * Math.pow(2, 1 - c);\n                    }\n                    if (r * a >= 2) {\n                        o++;\n                        a /= 2;\n                    }\n                    if (o + c >= h) {\n                        u = 0;\n                        o = h;\n                    } else if (o + c >= 1) {\n                        u = (r * a - 1) * Math.pow(2, n);\n                        o = o + c;\n                    } else {\n                        u = r * Math.pow(2, c - 1) * Math.pow(2, n);\n                        o = 0;\n                    }\n                }\n                for(; n >= 8; e[t + p] = u & 255, p += y, u /= 256, n -= 8){}\n                o = o << n | u;\n                s += n;\n                for(; s > 0; e[t + p] = o & 255, p += y, o /= 256, s -= 8){}\n                e[t + p - y] |= g * 128;\n            };\n        }\n    };\n    var r = {};\n    function __nccwpck_require__(t) {\n        var f = r[t];\n        if (f !== undefined) {\n            return f.exports;\n        }\n        var n = r[t] = {\n            exports: {}\n        };\n        var i = true;\n        try {\n            e[t](n, n.exports, __nccwpck_require__);\n            i = false;\n        } finally{\n            if (i) delete r[t];\n        }\n        return n.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var t = __nccwpck_require__(72);\n    module.exports = t;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/micromatch/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/micromatch/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n(()=>{\n    \"use strict\";\n    var e = {\n        333: (e, t, r)=>{\n            const n = r(137);\n            const u = r(179);\n            const s = r(13);\n            const o = r(719);\n            const braces = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                let r = [];\n                if (Array.isArray(e)) {\n                    for (let n of e){\n                        let e = braces.create(n, t);\n                        if (Array.isArray(e)) {\n                            r.push(...e);\n                        } else {\n                            r.push(e);\n                        }\n                    }\n                } else {\n                    r = [].concat(braces.create(e, t));\n                }\n                if (t && t.expand === true && t.nodupes === true) {\n                    r = [\n                        ...new Set(r)\n                    ];\n                }\n                return r;\n            };\n            braces.parse = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                return o(e, t);\n            };\n            braces.stringify = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                if (typeof e === \"string\") {\n                    return n(braces.parse(e, t), t);\n                }\n                return n(e, t);\n            };\n            braces.compile = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                if (typeof e === \"string\") {\n                    e = braces.parse(e, t);\n                }\n                return u(e, t);\n            };\n            braces.expand = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                if (typeof e === \"string\") {\n                    e = braces.parse(e, t);\n                }\n                let r = s(e, t);\n                if (t.noempty === true) {\n                    r = r.filter(Boolean);\n                }\n                if (t.nodupes === true) {\n                    r = [\n                        ...new Set(r)\n                    ];\n                }\n                return r;\n            };\n            braces.create = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                if (e === \"\" || e.length < 3) {\n                    return [\n                        e\n                    ];\n                }\n                return t.expand !== true ? braces.compile(e, t) : braces.expand(e, t);\n            };\n            e.exports = braces;\n        },\n        179: (e, t, r)=>{\n            const n = r(783);\n            const u = r(617);\n            const compile = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                let walk = function(e) {\n                    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                    let s = u.isInvalidBrace(r);\n                    let o = e.invalid === true && t.escapeInvalid === true;\n                    let i = s === true || o === true;\n                    let a = t.escapeInvalid === true ? \"\\\\\" : \"\";\n                    let l = \"\";\n                    if (e.isOpen === true) {\n                        return a + e.value;\n                    }\n                    if (e.isClose === true) {\n                        return a + e.value;\n                    }\n                    if (e.type === \"open\") {\n                        return i ? a + e.value : \"(\";\n                    }\n                    if (e.type === \"close\") {\n                        return i ? a + e.value : \")\";\n                    }\n                    if (e.type === \"comma\") {\n                        return e.prev.type === \"comma\" ? \"\" : i ? e.value : \"|\";\n                    }\n                    if (e.value) {\n                        return e.value;\n                    }\n                    if (e.nodes && e.ranges > 0) {\n                        let r = u.reduce(e.nodes);\n                        let s = n(...r, {\n                            ...t,\n                            wrap: false,\n                            toRegex: true\n                        });\n                        if (s.length !== 0) {\n                            return r.length > 1 && s.length > 1 ? \"(\".concat(s, \")\") : s;\n                        }\n                    }\n                    if (e.nodes) {\n                        for (let t of e.nodes){\n                            l += walk(t, e);\n                        }\n                    }\n                    return l;\n                };\n                return walk(e);\n            };\n            e.exports = compile;\n        },\n        457: (e)=>{\n            e.exports = {\n                MAX_LENGTH: 1024 * 64,\n                CHAR_0: \"0\",\n                CHAR_9: \"9\",\n                CHAR_UPPERCASE_A: \"A\",\n                CHAR_LOWERCASE_A: \"a\",\n                CHAR_UPPERCASE_Z: \"Z\",\n                CHAR_LOWERCASE_Z: \"z\",\n                CHAR_LEFT_PARENTHESES: \"(\",\n                CHAR_RIGHT_PARENTHESES: \")\",\n                CHAR_ASTERISK: \"*\",\n                CHAR_AMPERSAND: \"&\",\n                CHAR_AT: \"@\",\n                CHAR_BACKSLASH: \"\\\\\",\n                CHAR_BACKTICK: \"`\",\n                CHAR_CARRIAGE_RETURN: \"\\r\",\n                CHAR_CIRCUMFLEX_ACCENT: \"^\",\n                CHAR_COLON: \":\",\n                CHAR_COMMA: \",\",\n                CHAR_DOLLAR: \"$\",\n                CHAR_DOT: \".\",\n                CHAR_DOUBLE_QUOTE: '\"',\n                CHAR_EQUAL: \"=\",\n                CHAR_EXCLAMATION_MARK: \"!\",\n                CHAR_FORM_FEED: \"\\f\",\n                CHAR_FORWARD_SLASH: \"/\",\n                CHAR_HASH: \"#\",\n                CHAR_HYPHEN_MINUS: \"-\",\n                CHAR_LEFT_ANGLE_BRACKET: \"<\",\n                CHAR_LEFT_CURLY_BRACE: \"{\",\n                CHAR_LEFT_SQUARE_BRACKET: \"[\",\n                CHAR_LINE_FEED: \"\\n\",\n                CHAR_NO_BREAK_SPACE: \"\\xa0\",\n                CHAR_PERCENT: \"%\",\n                CHAR_PLUS: \"+\",\n                CHAR_QUESTION_MARK: \"?\",\n                CHAR_RIGHT_ANGLE_BRACKET: \">\",\n                CHAR_RIGHT_CURLY_BRACE: \"}\",\n                CHAR_RIGHT_SQUARE_BRACKET: \"]\",\n                CHAR_SEMICOLON: \";\",\n                CHAR_SINGLE_QUOTE: \"'\",\n                CHAR_SPACE: \" \",\n                CHAR_TAB: \"\t\",\n                CHAR_UNDERSCORE: \"_\",\n                CHAR_VERTICAL_LINE: \"|\",\n                CHAR_ZERO_WIDTH_NOBREAK_SPACE: \"\\uFEFF\"\n            };\n        },\n        13: (e, t, r)=>{\n            const n = r(783);\n            const u = r(137);\n            const s = r(617);\n            const append = function() {\n                let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\", t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n                let n = [];\n                e = [].concat(e);\n                t = [].concat(t);\n                if (!t.length) return e;\n                if (!e.length) {\n                    return r ? s.flatten(t).map((e)=>\"{\".concat(e, \"}\")) : t;\n                }\n                for (let u of e){\n                    if (Array.isArray(u)) {\n                        for (let e of u){\n                            n.push(append(e, t, r));\n                        }\n                    } else {\n                        for (let e of t){\n                            if (r === true && typeof e === \"string\") e = \"{\".concat(e, \"}\");\n                            n.push(Array.isArray(e) ? append(u, e, r) : u + e);\n                        }\n                    }\n                }\n                return s.flatten(n);\n            };\n            const expand = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                let r = t.rangeLimit === void 0 ? 1e3 : t.rangeLimit;\n                let walk = function(e) {\n                    let o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                    e.queue = [];\n                    let i = o;\n                    let a = o.queue;\n                    while(i.type !== \"brace\" && i.type !== \"root\" && i.parent){\n                        i = i.parent;\n                        a = i.queue;\n                    }\n                    if (e.invalid || e.dollar) {\n                        a.push(append(a.pop(), u(e, t)));\n                        return;\n                    }\n                    if (e.type === \"brace\" && e.invalid !== true && e.nodes.length === 2) {\n                        a.push(append(a.pop(), [\n                            \"{}\"\n                        ]));\n                        return;\n                    }\n                    if (e.nodes && e.ranges > 0) {\n                        let o = s.reduce(e.nodes);\n                        if (s.exceedsLimit(...o, t.step, r)) {\n                            throw new RangeError(\"expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.\");\n                        }\n                        let i = n(...o, t);\n                        if (i.length === 0) {\n                            i = u(e, t);\n                        }\n                        a.push(append(a.pop(), i));\n                        e.nodes = [];\n                        return;\n                    }\n                    let l = s.encloseBrace(e);\n                    let c = e.queue;\n                    let p = e;\n                    while(p.type !== \"brace\" && p.type !== \"root\" && p.parent){\n                        p = p.parent;\n                        c = p.queue;\n                    }\n                    for(let t = 0; t < e.nodes.length; t++){\n                        let r = e.nodes[t];\n                        if (r.type === \"comma\" && e.type === \"brace\") {\n                            if (t === 1) c.push(\"\");\n                            c.push(\"\");\n                            continue;\n                        }\n                        if (r.type === \"close\") {\n                            a.push(append(a.pop(), c, l));\n                            continue;\n                        }\n                        if (r.value && r.type !== \"open\") {\n                            c.push(append(c.pop(), r.value));\n                            continue;\n                        }\n                        if (r.nodes) {\n                            walk(r, e);\n                        }\n                    }\n                    return c;\n                };\n                return s.flatten(walk(e));\n            };\n            e.exports = expand;\n        },\n        719: (e, t, r)=>{\n            const n = r(137);\n            const { MAX_LENGTH: u, CHAR_BACKSLASH: s, CHAR_BACKTICK: o, CHAR_COMMA: i, CHAR_DOT: a, CHAR_LEFT_PARENTHESES: l, CHAR_RIGHT_PARENTHESES: c, CHAR_LEFT_CURLY_BRACE: p, CHAR_RIGHT_CURLY_BRACE: f, CHAR_LEFT_SQUARE_BRACKET: A, CHAR_RIGHT_SQUARE_BRACKET: R, CHAR_DOUBLE_QUOTE: _, CHAR_SINGLE_QUOTE: h, CHAR_NO_BREAK_SPACE: g, CHAR_ZERO_WIDTH_NOBREAK_SPACE: E } = r(457);\n            const parse = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                if (typeof e !== \"string\") {\n                    throw new TypeError(\"Expected a string\");\n                }\n                let r = t || {};\n                let C = typeof r.maxLength === \"number\" ? Math.min(u, r.maxLength) : u;\n                if (e.length > C) {\n                    throw new SyntaxError(\"Input length (\".concat(e.length, \"), exceeds max characters (\").concat(C, \")\"));\n                }\n                let y = {\n                    type: \"root\",\n                    input: e,\n                    nodes: []\n                };\n                let d = [\n                    y\n                ];\n                let x = y;\n                let b = y;\n                let S = 0;\n                let H = e.length;\n                let v = 0;\n                let $ = 0;\n                let m;\n                let T = {};\n                const advance = ()=>e[v++];\n                const push = (e)=>{\n                    if (e.type === \"text\" && b.type === \"dot\") {\n                        b.type = \"text\";\n                    }\n                    if (b && b.type === \"text\" && e.type === \"text\") {\n                        b.value += e.value;\n                        return;\n                    }\n                    x.nodes.push(e);\n                    e.parent = x;\n                    e.prev = b;\n                    b = e;\n                    return e;\n                };\n                push({\n                    type: \"bos\"\n                });\n                while(v < H){\n                    x = d[d.length - 1];\n                    m = advance();\n                    if (m === E || m === g) {\n                        continue;\n                    }\n                    if (m === s) {\n                        push({\n                            type: \"text\",\n                            value: (t.keepEscaping ? m : \"\") + advance()\n                        });\n                        continue;\n                    }\n                    if (m === R) {\n                        push({\n                            type: \"text\",\n                            value: \"\\\\\" + m\n                        });\n                        continue;\n                    }\n                    if (m === A) {\n                        S++;\n                        let e = true;\n                        let t;\n                        while(v < H && (t = advance())){\n                            m += t;\n                            if (t === A) {\n                                S++;\n                                continue;\n                            }\n                            if (t === s) {\n                                m += advance();\n                                continue;\n                            }\n                            if (t === R) {\n                                S--;\n                                if (S === 0) {\n                                    break;\n                                }\n                            }\n                        }\n                        push({\n                            type: \"text\",\n                            value: m\n                        });\n                        continue;\n                    }\n                    if (m === l) {\n                        x = push({\n                            type: \"paren\",\n                            nodes: []\n                        });\n                        d.push(x);\n                        push({\n                            type: \"text\",\n                            value: m\n                        });\n                        continue;\n                    }\n                    if (m === c) {\n                        if (x.type !== \"paren\") {\n                            push({\n                                type: \"text\",\n                                value: m\n                            });\n                            continue;\n                        }\n                        x = d.pop();\n                        push({\n                            type: \"text\",\n                            value: m\n                        });\n                        x = d[d.length - 1];\n                        continue;\n                    }\n                    if (m === _ || m === h || m === o) {\n                        let e = m;\n                        let r;\n                        if (t.keepQuotes !== true) {\n                            m = \"\";\n                        }\n                        while(v < H && (r = advance())){\n                            if (r === s) {\n                                m += r + advance();\n                                continue;\n                            }\n                            if (r === e) {\n                                if (t.keepQuotes === true) m += r;\n                                break;\n                            }\n                            m += r;\n                        }\n                        push({\n                            type: \"text\",\n                            value: m\n                        });\n                        continue;\n                    }\n                    if (m === p) {\n                        $++;\n                        let e = b.value && b.value.slice(-1) === \"$\" || x.dollar === true;\n                        let t = {\n                            type: \"brace\",\n                            open: true,\n                            close: false,\n                            dollar: e,\n                            depth: $,\n                            commas: 0,\n                            ranges: 0,\n                            nodes: []\n                        };\n                        x = push(t);\n                        d.push(x);\n                        push({\n                            type: \"open\",\n                            value: m\n                        });\n                        continue;\n                    }\n                    if (m === f) {\n                        if (x.type !== \"brace\") {\n                            push({\n                                type: \"text\",\n                                value: m\n                            });\n                            continue;\n                        }\n                        let e = \"close\";\n                        x = d.pop();\n                        x.close = true;\n                        push({\n                            type: e,\n                            value: m\n                        });\n                        $--;\n                        x = d[d.length - 1];\n                        continue;\n                    }\n                    if (m === i && $ > 0) {\n                        if (x.ranges > 0) {\n                            x.ranges = 0;\n                            let e = x.nodes.shift();\n                            x.nodes = [\n                                e,\n                                {\n                                    type: \"text\",\n                                    value: n(x)\n                                }\n                            ];\n                        }\n                        push({\n                            type: \"comma\",\n                            value: m\n                        });\n                        x.commas++;\n                        continue;\n                    }\n                    if (m === a && $ > 0 && x.commas === 0) {\n                        let e = x.nodes;\n                        if ($ === 0 || e.length === 0) {\n                            push({\n                                type: \"text\",\n                                value: m\n                            });\n                            continue;\n                        }\n                        if (b.type === \"dot\") {\n                            x.range = [];\n                            b.value += m;\n                            b.type = \"range\";\n                            if (x.nodes.length !== 3 && x.nodes.length !== 5) {\n                                x.invalid = true;\n                                x.ranges = 0;\n                                b.type = \"text\";\n                                continue;\n                            }\n                            x.ranges++;\n                            x.args = [];\n                            continue;\n                        }\n                        if (b.type === \"range\") {\n                            e.pop();\n                            let t = e[e.length - 1];\n                            t.value += b.value + m;\n                            b = t;\n                            x.ranges--;\n                            continue;\n                        }\n                        push({\n                            type: \"dot\",\n                            value: m\n                        });\n                        continue;\n                    }\n                    push({\n                        type: \"text\",\n                        value: m\n                    });\n                }\n                do {\n                    x = d.pop();\n                    if (x.type !== \"root\") {\n                        x.nodes.forEach((e)=>{\n                            if (!e.nodes) {\n                                if (e.type === \"open\") e.isOpen = true;\n                                if (e.type === \"close\") e.isClose = true;\n                                if (!e.nodes) e.type = \"text\";\n                                e.invalid = true;\n                            }\n                        });\n                        let e = d[d.length - 1];\n                        let t = e.nodes.indexOf(x);\n                        e.nodes.splice(t, 1, ...x.nodes);\n                    }\n                }while (d.length > 0);\n                push({\n                    type: \"eos\"\n                });\n                return y;\n            };\n            e.exports = parse;\n        },\n        137: (e, t, r)=>{\n            const n = r(617);\n            e.exports = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                let stringify = function(e) {\n                    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                    let u = t.escapeInvalid && n.isInvalidBrace(r);\n                    let s = e.invalid === true && t.escapeInvalid === true;\n                    let o = \"\";\n                    if (e.value) {\n                        if ((u || s) && n.isOpenOrClose(e)) {\n                            return \"\\\\\" + e.value;\n                        }\n                        return e.value;\n                    }\n                    if (e.value) {\n                        return e.value;\n                    }\n                    if (e.nodes) {\n                        for (let t of e.nodes){\n                            o += stringify(t);\n                        }\n                    }\n                    return o;\n                };\n                return stringify(e);\n            };\n        },\n        617: (e, t)=>{\n            t.isInteger = (e)=>{\n                if (typeof e === \"number\") {\n                    return Number.isInteger(e);\n                }\n                if (typeof e === \"string\" && e.trim() !== \"\") {\n                    return Number.isInteger(Number(e));\n                }\n                return false;\n            };\n            t.find = (e, t)=>e.nodes.find((e)=>e.type === t);\n            t.exceedsLimit = function(e, r) {\n                let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, u = arguments.length > 3 ? arguments[3] : void 0;\n                if (u === false) return false;\n                if (!t.isInteger(e) || !t.isInteger(r)) return false;\n                return (Number(r) - Number(e)) / Number(n) >= u;\n            };\n            t.escapeNode = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, r = arguments.length > 2 ? arguments[2] : void 0;\n                let n = e.nodes[t];\n                if (!n) return;\n                if (r && n.type === r || n.type === \"open\" || n.type === \"close\") {\n                    if (n.escaped !== true) {\n                        n.value = \"\\\\\" + n.value;\n                        n.escaped = true;\n                    }\n                }\n            };\n            t.encloseBrace = (e)=>{\n                if (e.type !== \"brace\") return false;\n                if (e.commas >> 0 + e.ranges >> 0 === 0) {\n                    e.invalid = true;\n                    return true;\n                }\n                return false;\n            };\n            t.isInvalidBrace = (e)=>{\n                if (e.type !== \"brace\") return false;\n                if (e.invalid === true || e.dollar) return true;\n                if (e.commas >> 0 + e.ranges >> 0 === 0) {\n                    e.invalid = true;\n                    return true;\n                }\n                if (e.open !== true || e.close !== true) {\n                    e.invalid = true;\n                    return true;\n                }\n                return false;\n            };\n            t.isOpenOrClose = (e)=>{\n                if (e.type === \"open\" || e.type === \"close\") {\n                    return true;\n                }\n                return e.open === true || e.close === true;\n            };\n            t.reduce = (e)=>e.reduce((e, t)=>{\n                    if (t.type === \"text\") e.push(t.value);\n                    if (t.type === \"range\") t.type = \"text\";\n                    return e;\n                }, []);\n            t.flatten = function() {\n                for(var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++){\n                    e[_key] = arguments[_key];\n                }\n                const t = [];\n                const flat = (e)=>{\n                    for(let r = 0; r < e.length; r++){\n                        let n = e[r];\n                        Array.isArray(n) ? flat(n, t) : n !== void 0 && t.push(n);\n                    }\n                    return t;\n                };\n                flat(e);\n                return t;\n            };\n        },\n        783: (e, t, r)=>{\n            /*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */ const n = r(837);\n            const u = r(492);\n            const isObject = (e)=>e !== null && typeof e === \"object\" && !Array.isArray(e);\n            const transform = (e)=>(t)=>e === true ? Number(t) : String(t);\n            const isValidValue = (e)=>typeof e === \"number\" || typeof e === \"string\" && e !== \"\";\n            const isNumber = (e)=>Number.isInteger(+e);\n            const zeros = (e)=>{\n                let t = \"\".concat(e);\n                let r = -1;\n                if (t[0] === \"-\") t = t.slice(1);\n                if (t === \"0\") return false;\n                while(t[++r] === \"0\");\n                return r > 0;\n            };\n            const stringify = (e, t, r)=>{\n                if (typeof e === \"string\" || typeof t === \"string\") {\n                    return true;\n                }\n                return r.stringify === true;\n            };\n            const pad = (e, t, r)=>{\n                if (t > 0) {\n                    let r = e[0] === \"-\" ? \"-\" : \"\";\n                    if (r) e = e.slice(1);\n                    e = r + e.padStart(r ? t - 1 : t, \"0\");\n                }\n                if (r === false) {\n                    return String(e);\n                }\n                return e;\n            };\n            const toMaxLen = (e, t)=>{\n                let r = e[0] === \"-\" ? \"-\" : \"\";\n                if (r) {\n                    e = e.slice(1);\n                    t--;\n                }\n                while(e.length < t)e = \"0\" + e;\n                return r ? \"-\" + e : e;\n            };\n            const toSequence = (e, t)=>{\n                e.negatives.sort((e, t)=>e < t ? -1 : e > t ? 1 : 0);\n                e.positives.sort((e, t)=>e < t ? -1 : e > t ? 1 : 0);\n                let r = t.capture ? \"\" : \"?:\";\n                let n = \"\";\n                let u = \"\";\n                let s;\n                if (e.positives.length) {\n                    n = e.positives.join(\"|\");\n                }\n                if (e.negatives.length) {\n                    u = \"-(\".concat(r).concat(e.negatives.join(\"|\"), \")\");\n                }\n                if (n && u) {\n                    s = \"\".concat(n, \"|\").concat(u);\n                } else {\n                    s = n || u;\n                }\n                if (t.wrap) {\n                    return \"(\".concat(r).concat(s, \")\");\n                }\n                return s;\n            };\n            const toRange = (e, t, r, n)=>{\n                if (r) {\n                    return u(e, t, {\n                        wrap: false,\n                        ...n\n                    });\n                }\n                let s = String.fromCharCode(e);\n                if (e === t) return s;\n                let o = String.fromCharCode(t);\n                return \"[\".concat(s, \"-\").concat(o, \"]\");\n            };\n            const toRegex = (e, t, r)=>{\n                if (Array.isArray(e)) {\n                    let t = r.wrap === true;\n                    let n = r.capture ? \"\" : \"?:\";\n                    return t ? \"(\".concat(n).concat(e.join(\"|\"), \")\") : e.join(\"|\");\n                }\n                return u(e, t, r);\n            };\n            const rangeError = function() {\n                for(var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++){\n                    e[_key] = arguments[_key];\n                }\n                return new RangeError(\"Invalid range arguments: \" + n.inspect(...e));\n            };\n            const invalidRange = (e, t, r)=>{\n                if (r.strictRanges === true) throw rangeError([\n                    e,\n                    t\n                ]);\n                return [];\n            };\n            const invalidStep = (e, t)=>{\n                if (t.strictRanges === true) {\n                    throw new TypeError('Expected step \"'.concat(e, '\" to be a number'));\n                }\n                return [];\n            };\n            const fillNumbers = function(e, t) {\n                let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n                let u = Number(e);\n                let s = Number(t);\n                if (!Number.isInteger(u) || !Number.isInteger(s)) {\n                    if (n.strictRanges === true) throw rangeError([\n                        e,\n                        t\n                    ]);\n                    return [];\n                }\n                if (u === 0) u = 0;\n                if (s === 0) s = 0;\n                let o = u > s;\n                let i = String(e);\n                let a = String(t);\n                let l = String(r);\n                r = Math.max(Math.abs(r), 1);\n                let c = zeros(i) || zeros(a) || zeros(l);\n                let p = c ? Math.max(i.length, a.length, l.length) : 0;\n                let f = c === false && stringify(e, t, n) === false;\n                let A = n.transform || transform(f);\n                if (n.toRegex && r === 1) {\n                    return toRange(toMaxLen(e, p), toMaxLen(t, p), true, n);\n                }\n                let R = {\n                    negatives: [],\n                    positives: []\n                };\n                let push = (e)=>R[e < 0 ? \"negatives\" : \"positives\"].push(Math.abs(e));\n                let _ = [];\n                let h = 0;\n                while(o ? u >= s : u <= s){\n                    if (n.toRegex === true && r > 1) {\n                        push(u);\n                    } else {\n                        _.push(pad(A(u, h), p, f));\n                    }\n                    u = o ? u - r : u + r;\n                    h++;\n                }\n                if (n.toRegex === true) {\n                    return r > 1 ? toSequence(R, n) : toRegex(_, null, {\n                        wrap: false,\n                        ...n\n                    });\n                }\n                return _;\n            };\n            const fillLetters = function(e, t) {\n                let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n                if (!isNumber(e) && e.length > 1 || !isNumber(t) && t.length > 1) {\n                    return invalidRange(e, t, n);\n                }\n                let u = n.transform || ((e)=>String.fromCharCode(e));\n                let s = \"\".concat(e).charCodeAt(0);\n                let o = \"\".concat(t).charCodeAt(0);\n                let i = s > o;\n                let a = Math.min(s, o);\n                let l = Math.max(s, o);\n                if (n.toRegex && r === 1) {\n                    return toRange(a, l, false, n);\n                }\n                let c = [];\n                let p = 0;\n                while(i ? s >= o : s <= o){\n                    c.push(u(s, p));\n                    s = i ? s - r : s + r;\n                    p++;\n                }\n                if (n.toRegex === true) {\n                    return toRegex(c, null, {\n                        wrap: false,\n                        options: n\n                    });\n                }\n                return c;\n            };\n            const fill = function(e, t, r) {\n                let n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n                if (t == null && isValidValue(e)) {\n                    return [\n                        e\n                    ];\n                }\n                if (!isValidValue(e) || !isValidValue(t)) {\n                    return invalidRange(e, t, n);\n                }\n                if (typeof r === \"function\") {\n                    return fill(e, t, 1, {\n                        transform: r\n                    });\n                }\n                if (isObject(r)) {\n                    return fill(e, t, 0, r);\n                }\n                let u = {\n                    ...n\n                };\n                if (u.capture === true) u.wrap = true;\n                r = r || u.step || 1;\n                if (!isNumber(r)) {\n                    if (r != null && !isObject(r)) return invalidStep(r, u);\n                    return fill(e, t, 1, r);\n                }\n                if (isNumber(e) && isNumber(t)) {\n                    return fillNumbers(e, t, r, u);\n                }\n                return fillLetters(e, t, Math.max(Math.abs(r), 1), u);\n            };\n            e.exports = fill;\n        },\n        357: (e)=>{\n            /*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */ e.exports = function(e) {\n                if (typeof e === \"number\") {\n                    return e - e === 0;\n                }\n                if (typeof e === \"string\" && e.trim() !== \"\") {\n                    return Number.isFinite ? Number.isFinite(+e) : isFinite(+e);\n                }\n                return false;\n            };\n        },\n        971: (e, t, r)=>{\n            const n = r(837);\n            const u = r(333);\n            const s = r(251);\n            const o = r(513);\n            const isEmptyString = (e)=>e === \"\" || e === \"./\";\n            const micromatch = (e, t, r)=>{\n                t = [].concat(t);\n                e = [].concat(e);\n                let n = new Set;\n                let u = new Set;\n                let o = new Set;\n                let i = 0;\n                let onResult = (e)=>{\n                    o.add(e.output);\n                    if (r && r.onResult) {\n                        r.onResult(e);\n                    }\n                };\n                for(let o = 0; o < t.length; o++){\n                    let a = s(String(t[o]), {\n                        ...r,\n                        onResult: onResult\n                    }, true);\n                    let l = a.state.negated || a.state.negatedExtglob;\n                    if (l) i++;\n                    for (let t of e){\n                        let e = a(t, true);\n                        let r = l ? !e.isMatch : e.isMatch;\n                        if (!r) continue;\n                        if (l) {\n                            n.add(e.output);\n                        } else {\n                            n.delete(e.output);\n                            u.add(e.output);\n                        }\n                    }\n                }\n                let a = i === t.length ? [\n                    ...o\n                ] : [\n                    ...u\n                ];\n                let l = a.filter((e)=>!n.has(e));\n                if (r && l.length === 0) {\n                    if (r.failglob === true) {\n                        throw new Error('No matches found for \"'.concat(t.join(\", \"), '\"'));\n                    }\n                    if (r.nonull === true || r.nullglob === true) {\n                        return r.unescape ? t.map((e)=>e.replace(/\\\\/g, \"\")) : t;\n                    }\n                }\n                return l;\n            };\n            micromatch.match = micromatch;\n            micromatch.matcher = (e, t)=>s(e, t);\n            micromatch.isMatch = (e, t, r)=>s(t, r)(e);\n            micromatch.any = micromatch.isMatch;\n            micromatch.not = function(e, t) {\n                let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n                t = [].concat(t).map(String);\n                let n = new Set;\n                let u = [];\n                let onResult = (e)=>{\n                    if (r.onResult) r.onResult(e);\n                    u.push(e.output);\n                };\n                let s = micromatch(e, t, {\n                    ...r,\n                    onResult: onResult\n                });\n                for (let e of u){\n                    if (!s.includes(e)) {\n                        n.add(e);\n                    }\n                }\n                return [\n                    ...n\n                ];\n            };\n            micromatch.contains = (e, t, r)=>{\n                if (typeof e !== \"string\") {\n                    throw new TypeError('Expected a string: \"'.concat(n.inspect(e), '\"'));\n                }\n                if (Array.isArray(t)) {\n                    return t.some((t)=>micromatch.contains(e, t, r));\n                }\n                if (typeof t === \"string\") {\n                    if (isEmptyString(e) || isEmptyString(t)) {\n                        return false;\n                    }\n                    if (e.includes(t) || e.startsWith(\"./\") && e.slice(2).includes(t)) {\n                        return true;\n                    }\n                }\n                return micromatch.isMatch(e, t, {\n                    ...r,\n                    contains: true\n                });\n            };\n            micromatch.matchKeys = (e, t, r)=>{\n                if (!o.isObject(e)) {\n                    throw new TypeError(\"Expected the first argument to be an object\");\n                }\n                let n = micromatch(Object.keys(e), t, r);\n                let u = {};\n                for (let t of n)u[t] = e[t];\n                return u;\n            };\n            micromatch.some = (e, t, r)=>{\n                let n = [].concat(e);\n                for (let e of [].concat(t)){\n                    let t = s(String(e), r);\n                    if (n.some((e)=>t(e))) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n            micromatch.every = (e, t, r)=>{\n                let n = [].concat(e);\n                for (let e of [].concat(t)){\n                    let t = s(String(e), r);\n                    if (!n.every((e)=>t(e))) {\n                        return false;\n                    }\n                }\n                return true;\n            };\n            micromatch.all = (e, t, r)=>{\n                if (typeof e !== \"string\") {\n                    throw new TypeError('Expected a string: \"'.concat(n.inspect(e), '\"'));\n                }\n                return [].concat(t).every((t)=>s(t, r)(e));\n            };\n            micromatch.capture = (e, t, r)=>{\n                let n = o.isWindows(r);\n                let u = s.makeRe(String(e), {\n                    ...r,\n                    capture: true\n                });\n                let i = u.exec(n ? o.toPosixSlashes(t) : t);\n                if (i) {\n                    return i.slice(1).map((e)=>e === void 0 ? \"\" : e);\n                }\n            };\n            micromatch.makeRe = function() {\n                for(var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++){\n                    e[_key] = arguments[_key];\n                }\n                return s.makeRe(...e);\n            };\n            micromatch.scan = function() {\n                for(var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++){\n                    e[_key] = arguments[_key];\n                }\n                return s.scan(...e);\n            };\n            micromatch.parse = (e, t)=>{\n                let r = [];\n                for (let n of [].concat(e || [])){\n                    for (let e of u(String(n), t)){\n                        r.push(s.parse(e, t));\n                    }\n                }\n                return r;\n            };\n            micromatch.braces = (e, t)=>{\n                if (typeof e !== \"string\") throw new TypeError(\"Expected a string\");\n                if (t && t.nobrace === true || !/\\{.*\\}/.test(e)) {\n                    return [\n                        e\n                    ];\n                }\n                return u(e, t);\n            };\n            micromatch.braceExpand = (e, t)=>{\n                if (typeof e !== \"string\") throw new TypeError(\"Expected a string\");\n                return micromatch.braces(e, {\n                    ...t,\n                    expand: true\n                });\n            };\n            e.exports = micromatch;\n        },\n        251: (e, t, r)=>{\n            e.exports = r(683);\n        },\n        356: (e, t, r)=>{\n            const n = r(17);\n            const u = \"\\\\\\\\/\";\n            const s = \"[^\".concat(u, \"]\");\n            const o = \"\\\\.\";\n            const i = \"\\\\+\";\n            const a = \"\\\\?\";\n            const l = \"\\\\/\";\n            const c = \"(?=.)\";\n            const p = \"[^/]\";\n            const f = \"(?:\".concat(l, \"|$)\");\n            const A = \"(?:^|\".concat(l, \")\");\n            const R = \"\".concat(o, \"{1,2}\").concat(f);\n            const _ = \"(?!\".concat(o, \")\");\n            const h = \"(?!\".concat(A).concat(R, \")\");\n            const g = \"(?!\".concat(o, \"{0,1}\").concat(f, \")\");\n            const E = \"(?!\".concat(R, \")\");\n            const C = \"[^.\".concat(l, \"]\");\n            const y = \"\".concat(p, \"*?\");\n            const d = {\n                DOT_LITERAL: o,\n                PLUS_LITERAL: i,\n                QMARK_LITERAL: a,\n                SLASH_LITERAL: l,\n                ONE_CHAR: c,\n                QMARK: p,\n                END_ANCHOR: f,\n                DOTS_SLASH: R,\n                NO_DOT: _,\n                NO_DOTS: h,\n                NO_DOT_SLASH: g,\n                NO_DOTS_SLASH: E,\n                QMARK_NO_DOT: C,\n                STAR: y,\n                START_ANCHOR: A\n            };\n            const x = {\n                ...d,\n                SLASH_LITERAL: \"[\".concat(u, \"]\"),\n                QMARK: s,\n                STAR: \"\".concat(s, \"*?\"),\n                DOTS_SLASH: \"\".concat(o, \"{1,2}(?:[\").concat(u, \"]|$)\"),\n                NO_DOT: \"(?!\".concat(o, \")\"),\n                NO_DOTS: \"(?!(?:^|[\".concat(u, \"])\").concat(o, \"{1,2}(?:[\").concat(u, \"]|$))\"),\n                NO_DOT_SLASH: \"(?!\".concat(o, \"{0,1}(?:[\").concat(u, \"]|$))\"),\n                NO_DOTS_SLASH: \"(?!\".concat(o, \"{1,2}(?:[\").concat(u, \"]|$))\"),\n                QMARK_NO_DOT: \"[^.\".concat(u, \"]\"),\n                START_ANCHOR: \"(?:^|[\".concat(u, \"])\"),\n                END_ANCHOR: \"(?:[\".concat(u, \"]|$)\")\n            };\n            const b = {\n                alnum: \"a-zA-Z0-9\",\n                alpha: \"a-zA-Z\",\n                ascii: \"\\\\x00-\\\\x7F\",\n                blank: \" \\\\t\",\n                cntrl: \"\\\\x00-\\\\x1F\\\\x7F\",\n                digit: \"0-9\",\n                graph: \"\\\\x21-\\\\x7E\",\n                lower: \"a-z\",\n                print: \"\\\\x20-\\\\x7E \",\n                punct: \"\\\\-!\\\"#$%&'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~\",\n                space: \" \\\\t\\\\r\\\\n\\\\v\\\\f\",\n                upper: \"A-Z\",\n                word: \"A-Za-z0-9_\",\n                xdigit: \"A-Fa-f0-9\"\n            };\n            e.exports = {\n                MAX_LENGTH: 1024 * 64,\n                POSIX_REGEX_SOURCE: b,\n                REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n                REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n                REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n                REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n                REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n                REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n                REPLACEMENTS: {\n                    \"***\": \"*\",\n                    \"**/**\": \"**\",\n                    \"**/**/**\": \"**\"\n                },\n                CHAR_0: 48,\n                CHAR_9: 57,\n                CHAR_UPPERCASE_A: 65,\n                CHAR_LOWERCASE_A: 97,\n                CHAR_UPPERCASE_Z: 90,\n                CHAR_LOWERCASE_Z: 122,\n                CHAR_LEFT_PARENTHESES: 40,\n                CHAR_RIGHT_PARENTHESES: 41,\n                CHAR_ASTERISK: 42,\n                CHAR_AMPERSAND: 38,\n                CHAR_AT: 64,\n                CHAR_BACKWARD_SLASH: 92,\n                CHAR_CARRIAGE_RETURN: 13,\n                CHAR_CIRCUMFLEX_ACCENT: 94,\n                CHAR_COLON: 58,\n                CHAR_COMMA: 44,\n                CHAR_DOT: 46,\n                CHAR_DOUBLE_QUOTE: 34,\n                CHAR_EQUAL: 61,\n                CHAR_EXCLAMATION_MARK: 33,\n                CHAR_FORM_FEED: 12,\n                CHAR_FORWARD_SLASH: 47,\n                CHAR_GRAVE_ACCENT: 96,\n                CHAR_HASH: 35,\n                CHAR_HYPHEN_MINUS: 45,\n                CHAR_LEFT_ANGLE_BRACKET: 60,\n                CHAR_LEFT_CURLY_BRACE: 123,\n                CHAR_LEFT_SQUARE_BRACKET: 91,\n                CHAR_LINE_FEED: 10,\n                CHAR_NO_BREAK_SPACE: 160,\n                CHAR_PERCENT: 37,\n                CHAR_PLUS: 43,\n                CHAR_QUESTION_MARK: 63,\n                CHAR_RIGHT_ANGLE_BRACKET: 62,\n                CHAR_RIGHT_CURLY_BRACE: 125,\n                CHAR_RIGHT_SQUARE_BRACKET: 93,\n                CHAR_SEMICOLON: 59,\n                CHAR_SINGLE_QUOTE: 39,\n                CHAR_SPACE: 32,\n                CHAR_TAB: 9,\n                CHAR_UNDERSCORE: 95,\n                CHAR_VERTICAL_LINE: 124,\n                CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,\n                SEP: n.sep,\n                extglobChars (e) {\n                    return {\n                        \"!\": {\n                            type: \"negate\",\n                            open: \"(?:(?!(?:\",\n                            close: \"))\".concat(e.STAR, \")\")\n                        },\n                        \"?\": {\n                            type: \"qmark\",\n                            open: \"(?:\",\n                            close: \")?\"\n                        },\n                        \"+\": {\n                            type: \"plus\",\n                            open: \"(?:\",\n                            close: \")+\"\n                        },\n                        \"*\": {\n                            type: \"star\",\n                            open: \"(?:\",\n                            close: \")*\"\n                        },\n                        \"@\": {\n                            type: \"at\",\n                            open: \"(?:\",\n                            close: \")\"\n                        }\n                    };\n                },\n                globChars (e) {\n                    return e === true ? x : d;\n                }\n            };\n        },\n        754: (e, t, r)=>{\n            const n = r(356);\n            const u = r(513);\n            const { MAX_LENGTH: s, POSIX_REGEX_SOURCE: o, REGEX_NON_SPECIAL_CHARS: i, REGEX_SPECIAL_CHARS_BACKREF: a, REPLACEMENTS: l } = n;\n            const expandRange = (e, t)=>{\n                if (typeof t.expandRange === \"function\") {\n                    return t.expandRange(...e, t);\n                }\n                e.sort();\n                const r = \"[\".concat(e.join(\"-\"), \"]\");\n                try {\n                    new RegExp(r);\n                } catch (t) {\n                    return e.map((e)=>u.escapeRegex(e)).join(\"..\");\n                }\n                return r;\n            };\n            const syntaxError = (e, t)=>\"Missing \".concat(e, ': \"').concat(t, '\" - use \"\\\\\\\\').concat(t, '\" to match literal characters');\n            const parse = (e, t)=>{\n                if (typeof e !== \"string\") {\n                    throw new TypeError(\"Expected a string\");\n                }\n                e = l[e] || e;\n                const r = {\n                    ...t\n                };\n                const c = typeof r.maxLength === \"number\" ? Math.min(s, r.maxLength) : s;\n                let p = e.length;\n                if (p > c) {\n                    throw new SyntaxError(\"Input length: \".concat(p, \", exceeds maximum allowed length: \").concat(c));\n                }\n                const f = {\n                    type: \"bos\",\n                    value: \"\",\n                    output: r.prepend || \"\"\n                };\n                const A = [\n                    f\n                ];\n                const R = r.capture ? \"\" : \"?:\";\n                const _ = u.isWindows(t);\n                const h = n.globChars(_);\n                const g = n.extglobChars(h);\n                const { DOT_LITERAL: E, PLUS_LITERAL: C, SLASH_LITERAL: y, ONE_CHAR: d, DOTS_SLASH: x, NO_DOT: b, NO_DOT_SLASH: S, NO_DOTS_SLASH: H, QMARK: v, QMARK_NO_DOT: $, STAR: m, START_ANCHOR: T } = h;\n                const globstar = (e)=>\"(\".concat(R, \"(?:(?!\").concat(T).concat(e.dot ? x : E, \").)*?)\");\n                const L = r.dot ? \"\" : b;\n                const O = r.dot ? v : $;\n                let w = r.bash === true ? globstar(r) : m;\n                if (r.capture) {\n                    w = \"(\".concat(w, \")\");\n                }\n                if (typeof r.noext === \"boolean\") {\n                    r.noextglob = r.noext;\n                }\n                const N = {\n                    input: e,\n                    index: -1,\n                    start: 0,\n                    dot: r.dot === true,\n                    consumed: \"\",\n                    output: \"\",\n                    prefix: \"\",\n                    backtrack: false,\n                    negated: false,\n                    brackets: 0,\n                    braces: 0,\n                    parens: 0,\n                    quotes: 0,\n                    globstar: false,\n                    tokens: A\n                };\n                e = u.removePrefix(e, N);\n                p = e.length;\n                const k = [];\n                const I = [];\n                const M = [];\n                let P = f;\n                let B;\n                const eos = ()=>N.index === p - 1;\n                const G = N.peek = function() {\n                    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n                    return e[N.index + t];\n                };\n                const D = N.advance = ()=>e[++N.index];\n                const remaining = ()=>e.slice(N.index + 1);\n                const consume = function() {\n                    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\", t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n                    N.consumed += e;\n                    N.index += t;\n                };\n                const append = (e)=>{\n                    N.output += e.output != null ? e.output : e.value;\n                    consume(e.value);\n                };\n                const negate = ()=>{\n                    let e = 1;\n                    while(G() === \"!\" && (G(2) !== \"(\" || G(3) === \"?\")){\n                        D();\n                        N.start++;\n                        e++;\n                    }\n                    if (e % 2 === 0) {\n                        return false;\n                    }\n                    N.negated = true;\n                    N.start++;\n                    return true;\n                };\n                const increment = (e)=>{\n                    N[e]++;\n                    M.push(e);\n                };\n                const decrement = (e)=>{\n                    N[e]--;\n                    M.pop();\n                };\n                const push = (e)=>{\n                    if (P.type === \"globstar\") {\n                        const t = N.braces > 0 && (e.type === \"comma\" || e.type === \"brace\");\n                        const r = e.extglob === true || k.length && (e.type === \"pipe\" || e.type === \"paren\");\n                        if (e.type !== \"slash\" && e.type !== \"paren\" && !t && !r) {\n                            N.output = N.output.slice(0, -P.output.length);\n                            P.type = \"star\";\n                            P.value = \"*\";\n                            P.output = w;\n                            N.output += P.output;\n                        }\n                    }\n                    if (k.length && e.type !== \"paren\" && !g[e.value]) {\n                        k[k.length - 1].inner += e.value;\n                    }\n                    if (e.value || e.output) append(e);\n                    if (P && P.type === \"text\" && e.type === \"text\") {\n                        P.value += e.value;\n                        P.output = (P.output || \"\") + e.value;\n                        return;\n                    }\n                    e.prev = P;\n                    A.push(e);\n                    P = e;\n                };\n                const extglobOpen = (e, t)=>{\n                    const n = {\n                        ...g[t],\n                        conditions: 1,\n                        inner: \"\"\n                    };\n                    n.prev = P;\n                    n.parens = N.parens;\n                    n.output = N.output;\n                    const u = (r.capture ? \"(\" : \"\") + n.open;\n                    increment(\"parens\");\n                    push({\n                        type: e,\n                        value: t,\n                        output: N.output ? \"\" : d\n                    });\n                    push({\n                        type: \"paren\",\n                        extglob: true,\n                        value: D(),\n                        output: u\n                    });\n                    k.push(n);\n                };\n                const extglobClose = (e)=>{\n                    let t = e.close + (r.capture ? \")\" : \"\");\n                    if (e.type === \"negate\") {\n                        let n = w;\n                        if (e.inner && e.inner.length > 1 && e.inner.includes(\"/\")) {\n                            n = globstar(r);\n                        }\n                        if (n !== w || eos() || /^\\)+$/.test(remaining())) {\n                            t = e.close = \")$))\".concat(n);\n                        }\n                        if (e.prev.type === \"bos\") {\n                            N.negatedExtglob = true;\n                        }\n                    }\n                    push({\n                        type: \"paren\",\n                        extglob: true,\n                        value: B,\n                        output: t\n                    });\n                    decrement(\"parens\");\n                };\n                if (r.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(e)) {\n                    let n = false;\n                    let s = e.replace(a, (e, t, r, u, s, o)=>{\n                        if (u === \"\\\\\") {\n                            n = true;\n                            return e;\n                        }\n                        if (u === \"?\") {\n                            if (t) {\n                                return t + u + (s ? v.repeat(s.length) : \"\");\n                            }\n                            if (o === 0) {\n                                return O + (s ? v.repeat(s.length) : \"\");\n                            }\n                            return v.repeat(r.length);\n                        }\n                        if (u === \".\") {\n                            return E.repeat(r.length);\n                        }\n                        if (u === \"*\") {\n                            if (t) {\n                                return t + u + (s ? w : \"\");\n                            }\n                            return w;\n                        }\n                        return t ? e : \"\\\\\".concat(e);\n                    });\n                    if (n === true) {\n                        if (r.unescape === true) {\n                            s = s.replace(/\\\\/g, \"\");\n                        } else {\n                            s = s.replace(/\\\\+/g, (e)=>e.length % 2 === 0 ? \"\\\\\\\\\" : e ? \"\\\\\" : \"\");\n                        }\n                    }\n                    if (s === e && r.contains === true) {\n                        N.output = e;\n                        return N;\n                    }\n                    N.output = u.wrapOutput(s, N, t);\n                    return N;\n                }\n                while(!eos()){\n                    B = D();\n                    if (B === \"\\x00\") {\n                        continue;\n                    }\n                    if (B === \"\\\\\") {\n                        const e = G();\n                        if (e === \"/\" && r.bash !== true) {\n                            continue;\n                        }\n                        if (e === \".\" || e === \";\") {\n                            continue;\n                        }\n                        if (!e) {\n                            B += \"\\\\\";\n                            push({\n                                type: \"text\",\n                                value: B\n                            });\n                            continue;\n                        }\n                        const t = /^\\\\+/.exec(remaining());\n                        let n = 0;\n                        if (t && t[0].length > 2) {\n                            n = t[0].length;\n                            N.index += n;\n                            if (n % 2 !== 0) {\n                                B += \"\\\\\";\n                            }\n                        }\n                        if (r.unescape === true) {\n                            B = D() || \"\";\n                        } else {\n                            B += D() || \"\";\n                        }\n                        if (N.brackets === 0) {\n                            push({\n                                type: \"text\",\n                                value: B\n                            });\n                            continue;\n                        }\n                    }\n                    if (N.brackets > 0 && (B !== \"]\" || P.value === \"[\" || P.value === \"[^\")) {\n                        if (r.posix !== false && B === \":\") {\n                            const e = P.value.slice(1);\n                            if (e.includes(\"[\")) {\n                                P.posix = true;\n                                if (e.includes(\":\")) {\n                                    const e = P.value.lastIndexOf(\"[\");\n                                    const t = P.value.slice(0, e);\n                                    const r = P.value.slice(e + 2);\n                                    const n = o[r];\n                                    if (n) {\n                                        P.value = t + n;\n                                        N.backtrack = true;\n                                        D();\n                                        if (!f.output && A.indexOf(P) === 1) {\n                                            f.output = d;\n                                        }\n                                        continue;\n                                    }\n                                }\n                            }\n                        }\n                        if (B === \"[\" && G() !== \":\" || B === \"-\" && G() === \"]\") {\n                            B = \"\\\\\".concat(B);\n                        }\n                        if (B === \"]\" && (P.value === \"[\" || P.value === \"[^\")) {\n                            B = \"\\\\\".concat(B);\n                        }\n                        if (r.posix === true && B === \"!\" && P.value === \"[\") {\n                            B = \"^\";\n                        }\n                        P.value += B;\n                        append({\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (N.quotes === 1 && B !== '\"') {\n                        B = u.escapeRegex(B);\n                        P.value += B;\n                        append({\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (B === '\"') {\n                        N.quotes = N.quotes === 1 ? 0 : 1;\n                        if (r.keepQuotes === true) {\n                            push({\n                                type: \"text\",\n                                value: B\n                            });\n                        }\n                        continue;\n                    }\n                    if (B === \"(\") {\n                        increment(\"parens\");\n                        push({\n                            type: \"paren\",\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (B === \")\") {\n                        if (N.parens === 0 && r.strictBrackets === true) {\n                            throw new SyntaxError(syntaxError(\"opening\", \"(\"));\n                        }\n                        const e = k[k.length - 1];\n                        if (e && N.parens === e.parens + 1) {\n                            extglobClose(k.pop());\n                            continue;\n                        }\n                        push({\n                            type: \"paren\",\n                            value: B,\n                            output: N.parens ? \")\" : \"\\\\)\"\n                        });\n                        decrement(\"parens\");\n                        continue;\n                    }\n                    if (B === \"[\") {\n                        if (r.nobracket === true || !remaining().includes(\"]\")) {\n                            if (r.nobracket !== true && r.strictBrackets === true) {\n                                throw new SyntaxError(syntaxError(\"closing\", \"]\"));\n                            }\n                            B = \"\\\\\".concat(B);\n                        } else {\n                            increment(\"brackets\");\n                        }\n                        push({\n                            type: \"bracket\",\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (B === \"]\") {\n                        if (r.nobracket === true || P && P.type === \"bracket\" && P.value.length === 1) {\n                            push({\n                                type: \"text\",\n                                value: B,\n                                output: \"\\\\\".concat(B)\n                            });\n                            continue;\n                        }\n                        if (N.brackets === 0) {\n                            if (r.strictBrackets === true) {\n                                throw new SyntaxError(syntaxError(\"opening\", \"[\"));\n                            }\n                            push({\n                                type: \"text\",\n                                value: B,\n                                output: \"\\\\\".concat(B)\n                            });\n                            continue;\n                        }\n                        decrement(\"brackets\");\n                        const e = P.value.slice(1);\n                        if (P.posix !== true && e[0] === \"^\" && !e.includes(\"/\")) {\n                            B = \"/\".concat(B);\n                        }\n                        P.value += B;\n                        append({\n                            value: B\n                        });\n                        if (r.literalBrackets === false || u.hasRegexChars(e)) {\n                            continue;\n                        }\n                        const t = u.escapeRegex(P.value);\n                        N.output = N.output.slice(0, -P.value.length);\n                        if (r.literalBrackets === true) {\n                            N.output += t;\n                            P.value = t;\n                            continue;\n                        }\n                        P.value = \"(\".concat(R).concat(t, \"|\").concat(P.value, \")\");\n                        N.output += P.value;\n                        continue;\n                    }\n                    if (B === \"{\" && r.nobrace !== true) {\n                        increment(\"braces\");\n                        const e = {\n                            type: \"brace\",\n                            value: B,\n                            output: \"(\",\n                            outputIndex: N.output.length,\n                            tokensIndex: N.tokens.length\n                        };\n                        I.push(e);\n                        push(e);\n                        continue;\n                    }\n                    if (B === \"}\") {\n                        const e = I[I.length - 1];\n                        if (r.nobrace === true || !e) {\n                            push({\n                                type: \"text\",\n                                value: B,\n                                output: B\n                            });\n                            continue;\n                        }\n                        let t = \")\";\n                        if (e.dots === true) {\n                            const e = A.slice();\n                            const n = [];\n                            for(let t = e.length - 1; t >= 0; t--){\n                                A.pop();\n                                if (e[t].type === \"brace\") {\n                                    break;\n                                }\n                                if (e[t].type !== \"dots\") {\n                                    n.unshift(e[t].value);\n                                }\n                            }\n                            t = expandRange(n, r);\n                            N.backtrack = true;\n                        }\n                        if (e.comma !== true && e.dots !== true) {\n                            const r = N.output.slice(0, e.outputIndex);\n                            const n = N.tokens.slice(e.tokensIndex);\n                            e.value = e.output = \"\\\\{\";\n                            B = t = \"\\\\}\";\n                            N.output = r;\n                            for (const e of n){\n                                N.output += e.output || e.value;\n                            }\n                        }\n                        push({\n                            type: \"brace\",\n                            value: B,\n                            output: t\n                        });\n                        decrement(\"braces\");\n                        I.pop();\n                        continue;\n                    }\n                    if (B === \"|\") {\n                        if (k.length > 0) {\n                            k[k.length - 1].conditions++;\n                        }\n                        push({\n                            type: \"text\",\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (B === \",\") {\n                        let e = B;\n                        const t = I[I.length - 1];\n                        if (t && M[M.length - 1] === \"braces\") {\n                            t.comma = true;\n                            e = \"|\";\n                        }\n                        push({\n                            type: \"comma\",\n                            value: B,\n                            output: e\n                        });\n                        continue;\n                    }\n                    if (B === \"/\") {\n                        if (P.type === \"dot\" && N.index === N.start + 1) {\n                            N.start = N.index + 1;\n                            N.consumed = \"\";\n                            N.output = \"\";\n                            A.pop();\n                            P = f;\n                            continue;\n                        }\n                        push({\n                            type: \"slash\",\n                            value: B,\n                            output: y\n                        });\n                        continue;\n                    }\n                    if (B === \".\") {\n                        if (N.braces > 0 && P.type === \"dot\") {\n                            if (P.value === \".\") P.output = E;\n                            const e = I[I.length - 1];\n                            P.type = \"dots\";\n                            P.output += B;\n                            P.value += B;\n                            e.dots = true;\n                            continue;\n                        }\n                        if (N.braces + N.parens === 0 && P.type !== \"bos\" && P.type !== \"slash\") {\n                            push({\n                                type: \"text\",\n                                value: B,\n                                output: E\n                            });\n                            continue;\n                        }\n                        push({\n                            type: \"dot\",\n                            value: B,\n                            output: E\n                        });\n                        continue;\n                    }\n                    if (B === \"?\") {\n                        const e = P && P.value === \"(\";\n                        if (!e && r.noextglob !== true && G() === \"(\" && G(2) !== \"?\") {\n                            extglobOpen(\"qmark\", B);\n                            continue;\n                        }\n                        if (P && P.type === \"paren\") {\n                            const e = G();\n                            let t = B;\n                            if (e === \"<\" && !u.supportsLookbehinds()) {\n                                throw new Error(\"Node.js v10 or higher is required for regex lookbehinds\");\n                            }\n                            if (P.value === \"(\" && !/[!=<:]/.test(e) || e === \"<\" && !/<([!=]|\\w+>)/.test(remaining())) {\n                                t = \"\\\\\".concat(B);\n                            }\n                            push({\n                                type: \"text\",\n                                value: B,\n                                output: t\n                            });\n                            continue;\n                        }\n                        if (r.dot !== true && (P.type === \"slash\" || P.type === \"bos\")) {\n                            push({\n                                type: \"qmark\",\n                                value: B,\n                                output: $\n                            });\n                            continue;\n                        }\n                        push({\n                            type: \"qmark\",\n                            value: B,\n                            output: v\n                        });\n                        continue;\n                    }\n                    if (B === \"!\") {\n                        if (r.noextglob !== true && G() === \"(\") {\n                            if (G(2) !== \"?\" || !/[!=<:]/.test(G(3))) {\n                                extglobOpen(\"negate\", B);\n                                continue;\n                            }\n                        }\n                        if (r.nonegate !== true && N.index === 0) {\n                            negate();\n                            continue;\n                        }\n                    }\n                    if (B === \"+\") {\n                        if (r.noextglob !== true && G() === \"(\" && G(2) !== \"?\") {\n                            extglobOpen(\"plus\", B);\n                            continue;\n                        }\n                        if (P && P.value === \"(\" || r.regex === false) {\n                            push({\n                                type: \"plus\",\n                                value: B,\n                                output: C\n                            });\n                            continue;\n                        }\n                        if (P && (P.type === \"bracket\" || P.type === \"paren\" || P.type === \"brace\") || N.parens > 0) {\n                            push({\n                                type: \"plus\",\n                                value: B\n                            });\n                            continue;\n                        }\n                        push({\n                            type: \"plus\",\n                            value: C\n                        });\n                        continue;\n                    }\n                    if (B === \"@\") {\n                        if (r.noextglob !== true && G() === \"(\" && G(2) !== \"?\") {\n                            push({\n                                type: \"at\",\n                                extglob: true,\n                                value: B,\n                                output: \"\"\n                            });\n                            continue;\n                        }\n                        push({\n                            type: \"text\",\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (B !== \"*\") {\n                        if (B === \"$\" || B === \"^\") {\n                            B = \"\\\\\".concat(B);\n                        }\n                        const e = i.exec(remaining());\n                        if (e) {\n                            B += e[0];\n                            N.index += e[0].length;\n                        }\n                        push({\n                            type: \"text\",\n                            value: B\n                        });\n                        continue;\n                    }\n                    if (P && (P.type === \"globstar\" || P.star === true)) {\n                        P.type = \"star\";\n                        P.star = true;\n                        P.value += B;\n                        P.output = w;\n                        N.backtrack = true;\n                        N.globstar = true;\n                        consume(B);\n                        continue;\n                    }\n                    let t = remaining();\n                    if (r.noextglob !== true && /^\\([^?]/.test(t)) {\n                        extglobOpen(\"star\", B);\n                        continue;\n                    }\n                    if (P.type === \"star\") {\n                        if (r.noglobstar === true) {\n                            consume(B);\n                            continue;\n                        }\n                        const n = P.prev;\n                        const u = n.prev;\n                        const s = n.type === \"slash\" || n.type === \"bos\";\n                        const o = u && (u.type === \"star\" || u.type === \"globstar\");\n                        if (r.bash === true && (!s || t[0] && t[0] !== \"/\")) {\n                            push({\n                                type: \"star\",\n                                value: B,\n                                output: \"\"\n                            });\n                            continue;\n                        }\n                        const i = N.braces > 0 && (n.type === \"comma\" || n.type === \"brace\");\n                        const a = k.length && (n.type === \"pipe\" || n.type === \"paren\");\n                        if (!s && n.type !== \"paren\" && !i && !a) {\n                            push({\n                                type: \"star\",\n                                value: B,\n                                output: \"\"\n                            });\n                            continue;\n                        }\n                        while(t.slice(0, 3) === \"/**\"){\n                            const r = e[N.index + 4];\n                            if (r && r !== \"/\") {\n                                break;\n                            }\n                            t = t.slice(3);\n                            consume(\"/**\", 3);\n                        }\n                        if (n.type === \"bos\" && eos()) {\n                            P.type = \"globstar\";\n                            P.value += B;\n                            P.output = globstar(r);\n                            N.output = P.output;\n                            N.globstar = true;\n                            consume(B);\n                            continue;\n                        }\n                        if (n.type === \"slash\" && n.prev.type !== \"bos\" && !o && eos()) {\n                            N.output = N.output.slice(0, -(n.output + P.output).length);\n                            n.output = \"(?:\".concat(n.output);\n                            P.type = \"globstar\";\n                            P.output = globstar(r) + (r.strictSlashes ? \")\" : \"|$)\");\n                            P.value += B;\n                            N.globstar = true;\n                            N.output += n.output + P.output;\n                            consume(B);\n                            continue;\n                        }\n                        if (n.type === \"slash\" && n.prev.type !== \"bos\" && t[0] === \"/\") {\n                            const e = t[1] !== void 0 ? \"|$\" : \"\";\n                            N.output = N.output.slice(0, -(n.output + P.output).length);\n                            n.output = \"(?:\".concat(n.output);\n                            P.type = \"globstar\";\n                            P.output = \"\".concat(globstar(r)).concat(y, \"|\").concat(y).concat(e, \")\");\n                            P.value += B;\n                            N.output += n.output + P.output;\n                            N.globstar = true;\n                            consume(B + D());\n                            push({\n                                type: \"slash\",\n                                value: \"/\",\n                                output: \"\"\n                            });\n                            continue;\n                        }\n                        if (n.type === \"bos\" && t[0] === \"/\") {\n                            P.type = \"globstar\";\n                            P.value += B;\n                            P.output = \"(?:^|\".concat(y, \"|\").concat(globstar(r)).concat(y, \")\");\n                            N.output = P.output;\n                            N.globstar = true;\n                            consume(B + D());\n                            push({\n                                type: \"slash\",\n                                value: \"/\",\n                                output: \"\"\n                            });\n                            continue;\n                        }\n                        N.output = N.output.slice(0, -P.output.length);\n                        P.type = \"globstar\";\n                        P.output = globstar(r);\n                        P.value += B;\n                        N.output += P.output;\n                        N.globstar = true;\n                        consume(B);\n                        continue;\n                    }\n                    const n = {\n                        type: \"star\",\n                        value: B,\n                        output: w\n                    };\n                    if (r.bash === true) {\n                        n.output = \".*?\";\n                        if (P.type === \"bos\" || P.type === \"slash\") {\n                            n.output = L + n.output;\n                        }\n                        push(n);\n                        continue;\n                    }\n                    if (P && (P.type === \"bracket\" || P.type === \"paren\") && r.regex === true) {\n                        n.output = B;\n                        push(n);\n                        continue;\n                    }\n                    if (N.index === N.start || P.type === \"slash\" || P.type === \"dot\") {\n                        if (P.type === \"dot\") {\n                            N.output += S;\n                            P.output += S;\n                        } else if (r.dot === true) {\n                            N.output += H;\n                            P.output += H;\n                        } else {\n                            N.output += L;\n                            P.output += L;\n                        }\n                        if (G() !== \"*\") {\n                            N.output += d;\n                            P.output += d;\n                        }\n                    }\n                    push(n);\n                }\n                while(N.brackets > 0){\n                    if (r.strictBrackets === true) throw new SyntaxError(syntaxError(\"closing\", \"]\"));\n                    N.output = u.escapeLast(N.output, \"[\");\n                    decrement(\"brackets\");\n                }\n                while(N.parens > 0){\n                    if (r.strictBrackets === true) throw new SyntaxError(syntaxError(\"closing\", \")\"));\n                    N.output = u.escapeLast(N.output, \"(\");\n                    decrement(\"parens\");\n                }\n                while(N.braces > 0){\n                    if (r.strictBrackets === true) throw new SyntaxError(syntaxError(\"closing\", \"}\"));\n                    N.output = u.escapeLast(N.output, \"{\");\n                    decrement(\"braces\");\n                }\n                if (r.strictSlashes !== true && (P.type === \"star\" || P.type === \"bracket\")) {\n                    push({\n                        type: \"maybe_slash\",\n                        value: \"\",\n                        output: \"\".concat(y, \"?\")\n                    });\n                }\n                if (N.backtrack === true) {\n                    N.output = \"\";\n                    for (const e of N.tokens){\n                        N.output += e.output != null ? e.output : e.value;\n                        if (e.suffix) {\n                            N.output += e.suffix;\n                        }\n                    }\n                }\n                return N;\n            };\n            parse.fastpaths = (e, t)=>{\n                const r = {\n                    ...t\n                };\n                const o = typeof r.maxLength === \"number\" ? Math.min(s, r.maxLength) : s;\n                const i = e.length;\n                if (i > o) {\n                    throw new SyntaxError(\"Input length: \".concat(i, \", exceeds maximum allowed length: \").concat(o));\n                }\n                e = l[e] || e;\n                const a = u.isWindows(t);\n                const { DOT_LITERAL: c, SLASH_LITERAL: p, ONE_CHAR: f, DOTS_SLASH: A, NO_DOT: R, NO_DOTS: _, NO_DOTS_SLASH: h, STAR: g, START_ANCHOR: E } = n.globChars(a);\n                const C = r.dot ? _ : R;\n                const y = r.dot ? h : R;\n                const d = r.capture ? \"\" : \"?:\";\n                const x = {\n                    negated: false,\n                    prefix: \"\"\n                };\n                let b = r.bash === true ? \".*?\" : g;\n                if (r.capture) {\n                    b = \"(\".concat(b, \")\");\n                }\n                const globstar = (e)=>{\n                    if (e.noglobstar === true) return b;\n                    return \"(\".concat(d, \"(?:(?!\").concat(E).concat(e.dot ? A : c, \").)*?)\");\n                };\n                const create = (e)=>{\n                    switch(e){\n                        case \"*\":\n                            return \"\".concat(C).concat(f).concat(b);\n                        case \".*\":\n                            return \"\".concat(c).concat(f).concat(b);\n                        case \"*.*\":\n                            return \"\".concat(C).concat(b).concat(c).concat(f).concat(b);\n                        case \"*/*\":\n                            return \"\".concat(C).concat(b).concat(p).concat(f).concat(y).concat(b);\n                        case \"**\":\n                            return C + globstar(r);\n                        case \"**/*\":\n                            return \"(?:\".concat(C).concat(globstar(r)).concat(p, \")?\").concat(y).concat(f).concat(b);\n                        case \"**/*.*\":\n                            return \"(?:\".concat(C).concat(globstar(r)).concat(p, \")?\").concat(y).concat(b).concat(c).concat(f).concat(b);\n                        case \"**/.*\":\n                            return \"(?:\".concat(C).concat(globstar(r)).concat(p, \")?\").concat(c).concat(f).concat(b);\n                        default:\n                            {\n                                const t = /^(.*?)\\.(\\w+)$/.exec(e);\n                                if (!t) return;\n                                const r = create(t[1]);\n                                if (!r) return;\n                                return r + c + t[2];\n                            }\n                    }\n                };\n                const S = u.removePrefix(e, x);\n                let H = create(S);\n                if (H && r.strictSlashes !== true) {\n                    H += \"\".concat(p, \"?\");\n                }\n                return H;\n            };\n            e.exports = parse;\n        },\n        683: (e, t, r)=>{\n            const n = r(17);\n            const u = r(700);\n            const s = r(754);\n            const o = r(513);\n            const i = r(356);\n            const isObject = (e)=>e && typeof e === \"object\" && !Array.isArray(e);\n            const picomatch = function(e, t) {\n                let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n                if (Array.isArray(e)) {\n                    const n = e.map((e)=>picomatch(e, t, r));\n                    const arrayMatcher = (e)=>{\n                        for (const t of n){\n                            const r = t(e);\n                            if (r) return r;\n                        }\n                        return false;\n                    };\n                    return arrayMatcher;\n                }\n                const n = isObject(e) && e.tokens && e.input;\n                if (e === \"\" || typeof e !== \"string\" && !n) {\n                    throw new TypeError(\"Expected pattern to be a non-empty string\");\n                }\n                const u = t || {};\n                const s = o.isWindows(t);\n                const i = n ? picomatch.compileRe(e, t) : picomatch.makeRe(e, t, false, true);\n                const a = i.state;\n                delete i.state;\n                let isIgnored = ()=>false;\n                if (u.ignore) {\n                    const e = {\n                        ...t,\n                        ignore: null,\n                        onMatch: null,\n                        onResult: null\n                    };\n                    isIgnored = picomatch(u.ignore, e, r);\n                }\n                const matcher = function(r) {\n                    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                    const { isMatch: o, match: l, output: c } = picomatch.test(r, i, t, {\n                        glob: e,\n                        posix: s\n                    });\n                    const p = {\n                        glob: e,\n                        state: a,\n                        regex: i,\n                        posix: s,\n                        input: r,\n                        output: c,\n                        match: l,\n                        isMatch: o\n                    };\n                    if (typeof u.onResult === \"function\") {\n                        u.onResult(p);\n                    }\n                    if (o === false) {\n                        p.isMatch = false;\n                        return n ? p : false;\n                    }\n                    if (isIgnored(r)) {\n                        if (typeof u.onIgnore === \"function\") {\n                            u.onIgnore(p);\n                        }\n                        p.isMatch = false;\n                        return n ? p : false;\n                    }\n                    if (typeof u.onMatch === \"function\") {\n                        u.onMatch(p);\n                    }\n                    return n ? p : true;\n                };\n                if (r) {\n                    matcher.state = a;\n                }\n                return matcher;\n            };\n            picomatch.test = function(e, t, r) {\n                let { glob: n, posix: u } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n                if (typeof e !== \"string\") {\n                    throw new TypeError(\"Expected input to be a string\");\n                }\n                if (e === \"\") {\n                    return {\n                        isMatch: false,\n                        output: \"\"\n                    };\n                }\n                const s = r || {};\n                const i = s.format || (u ? o.toPosixSlashes : null);\n                let a = e === n;\n                let l = a && i ? i(e) : e;\n                if (a === false) {\n                    l = i ? i(e) : e;\n                    a = l === n;\n                }\n                if (a === false || s.capture === true) {\n                    if (s.matchBase === true || s.basename === true) {\n                        a = picomatch.matchBase(e, t, r, u);\n                    } else {\n                        a = t.exec(l);\n                    }\n                }\n                return {\n                    isMatch: Boolean(a),\n                    match: a,\n                    output: l\n                };\n            };\n            picomatch.matchBase = function(e, t, r) {\n                let u = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : o.isWindows(r);\n                const s = t instanceof RegExp ? t : picomatch.makeRe(t, r);\n                return s.test(n.basename(e));\n            };\n            picomatch.isMatch = (e, t, r)=>picomatch(t, r)(e);\n            picomatch.parse = (e, t)=>{\n                if (Array.isArray(e)) return e.map((e)=>picomatch.parse(e, t));\n                return s(e, {\n                    ...t,\n                    fastpaths: false\n                });\n            };\n            picomatch.scan = (e, t)=>u(e, t);\n            picomatch.compileRe = function(e, t) {\n                let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n                if (r === true) {\n                    return e.output;\n                }\n                const u = t || {};\n                const s = u.contains ? \"\" : \"^\";\n                const o = u.contains ? \"\" : \"$\";\n                let i = \"\".concat(s, \"(?:\").concat(e.output, \")\").concat(o);\n                if (e && e.negated === true) {\n                    i = \"^(?!\".concat(i, \").*$\");\n                }\n                const a = picomatch.toRegex(i, t);\n                if (n === true) {\n                    a.state = e;\n                }\n                return a;\n            };\n            picomatch.makeRe = function(e, t) {\n                let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n                if (!e || typeof e !== \"string\") {\n                    throw new TypeError(\"Expected a non-empty string\");\n                }\n                const u = t || {};\n                let o = {\n                    negated: false,\n                    fastpaths: true\n                };\n                let i = \"\";\n                let a;\n                if (e.startsWith(\"./\")) {\n                    e = e.slice(2);\n                    i = o.prefix = \"./\";\n                }\n                if (u.fastpaths !== false && (e[0] === \".\" || e[0] === \"*\")) {\n                    a = s.fastpaths(e, t);\n                }\n                if (a === undefined) {\n                    o = s(e, t);\n                    o.prefix = i + (o.prefix || \"\");\n                } else {\n                    o.output = a;\n                }\n                return picomatch.compileRe(o, t, r, n);\n            };\n            picomatch.toRegex = (e, t)=>{\n                try {\n                    const r = t || {};\n                    return new RegExp(e, r.flags || (r.nocase ? \"i\" : \"\"));\n                } catch (e) {\n                    if (t && t.debug === true) throw e;\n                    return /$^/;\n                }\n            };\n            picomatch.constants = i;\n            e.exports = picomatch;\n        },\n        700: (e, t, r)=>{\n            const n = r(513);\n            const { CHAR_ASTERISK: u, CHAR_AT: s, CHAR_BACKWARD_SLASH: o, CHAR_COMMA: i, CHAR_DOT: a, CHAR_EXCLAMATION_MARK: l, CHAR_FORWARD_SLASH: c, CHAR_LEFT_CURLY_BRACE: p, CHAR_LEFT_PARENTHESES: f, CHAR_LEFT_SQUARE_BRACKET: A, CHAR_PLUS: R, CHAR_QUESTION_MARK: _, CHAR_RIGHT_CURLY_BRACE: h, CHAR_RIGHT_PARENTHESES: g, CHAR_RIGHT_SQUARE_BRACKET: E } = r(356);\n            const isPathSeparator = (e)=>e === c || e === o;\n            const depth = (e)=>{\n                if (e.isPrefix !== true) {\n                    e.depth = e.isGlobstar ? Infinity : 1;\n                }\n            };\n            const scan = (e, t)=>{\n                const r = t || {};\n                const C = e.length - 1;\n                const y = r.parts === true || r.scanToEnd === true;\n                const d = [];\n                const x = [];\n                const b = [];\n                let S = e;\n                let H = -1;\n                let v = 0;\n                let $ = 0;\n                let m = false;\n                let T = false;\n                let L = false;\n                let O = false;\n                let w = false;\n                let N = false;\n                let k = false;\n                let I = false;\n                let M = false;\n                let P = 0;\n                let B;\n                let G;\n                let D = {\n                    value: \"\",\n                    depth: 0,\n                    isGlob: false\n                };\n                const eos = ()=>H >= C;\n                const peek = ()=>S.charCodeAt(H + 1);\n                const advance = ()=>{\n                    B = G;\n                    return S.charCodeAt(++H);\n                };\n                while(H < C){\n                    G = advance();\n                    let e;\n                    if (G === o) {\n                        k = D.backslashes = true;\n                        G = advance();\n                        if (G === p) {\n                            N = true;\n                        }\n                        continue;\n                    }\n                    if (N === true || G === p) {\n                        P++;\n                        while(eos() !== true && (G = advance())){\n                            if (G === o) {\n                                k = D.backslashes = true;\n                                advance();\n                                continue;\n                            }\n                            if (G === p) {\n                                P++;\n                                continue;\n                            }\n                            if (N !== true && G === a && (G = advance()) === a) {\n                                m = D.isBrace = true;\n                                L = D.isGlob = true;\n                                M = true;\n                                if (y === true) {\n                                    continue;\n                                }\n                                break;\n                            }\n                            if (N !== true && G === i) {\n                                m = D.isBrace = true;\n                                L = D.isGlob = true;\n                                M = true;\n                                if (y === true) {\n                                    continue;\n                                }\n                                break;\n                            }\n                            if (G === h) {\n                                P--;\n                                if (P === 0) {\n                                    N = false;\n                                    m = D.isBrace = true;\n                                    M = true;\n                                    break;\n                                }\n                            }\n                        }\n                        if (y === true) {\n                            continue;\n                        }\n                        break;\n                    }\n                    if (G === c) {\n                        d.push(H);\n                        x.push(D);\n                        D = {\n                            value: \"\",\n                            depth: 0,\n                            isGlob: false\n                        };\n                        if (M === true) continue;\n                        if (B === a && H === v + 1) {\n                            v += 2;\n                            continue;\n                        }\n                        $ = H + 1;\n                        continue;\n                    }\n                    if (r.noext !== true) {\n                        const e = G === R || G === s || G === u || G === _ || G === l;\n                        if (e === true && peek() === f) {\n                            L = D.isGlob = true;\n                            O = D.isExtglob = true;\n                            M = true;\n                            if (y === true) {\n                                while(eos() !== true && (G = advance())){\n                                    if (G === o) {\n                                        k = D.backslashes = true;\n                                        G = advance();\n                                        continue;\n                                    }\n                                    if (G === g) {\n                                        L = D.isGlob = true;\n                                        M = true;\n                                        break;\n                                    }\n                                }\n                                continue;\n                            }\n                            break;\n                        }\n                    }\n                    if (G === u) {\n                        if (B === u) w = D.isGlobstar = true;\n                        L = D.isGlob = true;\n                        M = true;\n                        if (y === true) {\n                            continue;\n                        }\n                        break;\n                    }\n                    if (G === _) {\n                        L = D.isGlob = true;\n                        M = true;\n                        if (y === true) {\n                            continue;\n                        }\n                        break;\n                    }\n                    if (G === A) {\n                        while(eos() !== true && (e = advance())){\n                            if (e === o) {\n                                k = D.backslashes = true;\n                                advance();\n                                continue;\n                            }\n                            if (e === E) {\n                                T = D.isBracket = true;\n                                L = D.isGlob = true;\n                                M = true;\n                                break;\n                            }\n                        }\n                        if (y === true) {\n                            continue;\n                        }\n                        break;\n                    }\n                    if (r.nonegate !== true && G === l && H === v) {\n                        I = D.negated = true;\n                        v++;\n                        continue;\n                    }\n                    if (r.noparen !== true && G === f) {\n                        L = D.isGlob = true;\n                        if (y === true) {\n                            while(eos() !== true && (G = advance())){\n                                if (G === f) {\n                                    k = D.backslashes = true;\n                                    G = advance();\n                                    continue;\n                                }\n                                if (G === g) {\n                                    M = true;\n                                    break;\n                                }\n                            }\n                            continue;\n                        }\n                        break;\n                    }\n                    if (L === true) {\n                        M = true;\n                        if (y === true) {\n                            continue;\n                        }\n                        break;\n                    }\n                }\n                if (r.noext === true) {\n                    O = false;\n                    L = false;\n                }\n                let U = S;\n                let K = \"\";\n                let F = \"\";\n                if (v > 0) {\n                    K = S.slice(0, v);\n                    S = S.slice(v);\n                    $ -= v;\n                }\n                if (U && L === true && $ > 0) {\n                    U = S.slice(0, $);\n                    F = S.slice($);\n                } else if (L === true) {\n                    U = \"\";\n                    F = S;\n                } else {\n                    U = S;\n                }\n                if (U && U !== \"\" && U !== \"/\" && U !== S) {\n                    if (isPathSeparator(U.charCodeAt(U.length - 1))) {\n                        U = U.slice(0, -1);\n                    }\n                }\n                if (r.unescape === true) {\n                    if (F) F = n.removeBackslashes(F);\n                    if (U && k === true) {\n                        U = n.removeBackslashes(U);\n                    }\n                }\n                const Q = {\n                    prefix: K,\n                    input: e,\n                    start: v,\n                    base: U,\n                    glob: F,\n                    isBrace: m,\n                    isBracket: T,\n                    isGlob: L,\n                    isExtglob: O,\n                    isGlobstar: w,\n                    negated: I\n                };\n                if (r.tokens === true) {\n                    Q.maxDepth = 0;\n                    if (!isPathSeparator(G)) {\n                        x.push(D);\n                    }\n                    Q.tokens = x;\n                }\n                if (r.parts === true || r.tokens === true) {\n                    let t;\n                    for(let n = 0; n < d.length; n++){\n                        const u = t ? t + 1 : v;\n                        const s = d[n];\n                        const o = e.slice(u, s);\n                        if (r.tokens) {\n                            if (n === 0 && v !== 0) {\n                                x[n].isPrefix = true;\n                                x[n].value = K;\n                            } else {\n                                x[n].value = o;\n                            }\n                            depth(x[n]);\n                            Q.maxDepth += x[n].depth;\n                        }\n                        if (n !== 0 || o !== \"\") {\n                            b.push(o);\n                        }\n                        t = s;\n                    }\n                    if (t && t + 1 < e.length) {\n                        const n = e.slice(t + 1);\n                        b.push(n);\n                        if (r.tokens) {\n                            x[x.length - 1].value = n;\n                            depth(x[x.length - 1]);\n                            Q.maxDepth += x[x.length - 1].depth;\n                        }\n                    }\n                    Q.slashes = d;\n                    Q.parts = b;\n                }\n                return Q;\n            };\n            e.exports = scan;\n        },\n        513: (e, t, r)=>{\n            const n = r(17);\n            const u = process.platform === \"win32\";\n            const { REGEX_BACKSLASH: s, REGEX_REMOVE_BACKSLASH: o, REGEX_SPECIAL_CHARS: i, REGEX_SPECIAL_CHARS_GLOBAL: a } = r(356);\n            t.isObject = (e)=>e !== null && typeof e === \"object\" && !Array.isArray(e);\n            t.hasRegexChars = (e)=>i.test(e);\n            t.isRegexChar = (e)=>e.length === 1 && t.hasRegexChars(e);\n            t.escapeRegex = (e)=>e.replace(a, \"\\\\$1\");\n            t.toPosixSlashes = (e)=>e.replace(s, \"/\");\n            t.removeBackslashes = (e)=>e.replace(o, (e)=>e === \"\\\\\" ? \"\" : e);\n            t.supportsLookbehinds = ()=>{\n                const e = process.version.slice(1).split(\".\").map(Number);\n                if (e.length === 3 && e[0] >= 9 || e[0] === 8 && e[1] >= 10) {\n                    return true;\n                }\n                return false;\n            };\n            t.isWindows = (e)=>{\n                if (e && typeof e.windows === \"boolean\") {\n                    return e.windows;\n                }\n                return u === true || n.sep === \"\\\\\";\n            };\n            t.escapeLast = (e, r, n)=>{\n                const u = e.lastIndexOf(r, n);\n                if (u === -1) return e;\n                if (e[u - 1] === \"\\\\\") return t.escapeLast(e, r, u - 1);\n                return \"\".concat(e.slice(0, u), \"\\\\\").concat(e.slice(u));\n            };\n            t.removePrefix = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                let r = e;\n                if (r.startsWith(\"./\")) {\n                    r = r.slice(2);\n                    t.prefix = \"./\";\n                }\n                return r;\n            };\n            t.wrapOutput = function(e) {\n                let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n                const n = r.contains ? \"\" : \"^\";\n                const u = r.contains ? \"\" : \"$\";\n                let s = \"\".concat(n, \"(?:\").concat(e, \")\").concat(u);\n                if (t.negated === true) {\n                    s = \"(?:^(?!\".concat(s, \").*$)\");\n                }\n                return s;\n            };\n        },\n        492: (e, t, r)=>{\n            /*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */ const n = r(357);\n            const toRegexRange = (e, t, r)=>{\n                if (n(e) === false) {\n                    throw new TypeError(\"toRegexRange: expected the first argument to be a number\");\n                }\n                if (t === void 0 || e === t) {\n                    return String(e);\n                }\n                if (n(t) === false) {\n                    throw new TypeError(\"toRegexRange: expected the second argument to be a number.\");\n                }\n                let u = {\n                    relaxZeros: true,\n                    ...r\n                };\n                if (typeof u.strictZeros === \"boolean\") {\n                    u.relaxZeros = u.strictZeros === false;\n                }\n                let s = String(u.relaxZeros);\n                let o = String(u.shorthand);\n                let i = String(u.capture);\n                let a = String(u.wrap);\n                let l = e + \":\" + t + \"=\" + s + o + i + a;\n                if (toRegexRange.cache.hasOwnProperty(l)) {\n                    return toRegexRange.cache[l].result;\n                }\n                let c = Math.min(e, t);\n                let p = Math.max(e, t);\n                if (Math.abs(c - p) === 1) {\n                    let r = e + \"|\" + t;\n                    if (u.capture) {\n                        return \"(\".concat(r, \")\");\n                    }\n                    if (u.wrap === false) {\n                        return r;\n                    }\n                    return \"(?:\".concat(r, \")\");\n                }\n                let f = hasPadding(e) || hasPadding(t);\n                let A = {\n                    min: e,\n                    max: t,\n                    a: c,\n                    b: p\n                };\n                let R = [];\n                let _ = [];\n                if (f) {\n                    A.isPadded = f;\n                    A.maxLen = String(A.max).length;\n                }\n                if (c < 0) {\n                    let e = p < 0 ? Math.abs(p) : 1;\n                    _ = splitToPatterns(e, Math.abs(c), A, u);\n                    c = A.a = 0;\n                }\n                if (p >= 0) {\n                    R = splitToPatterns(c, p, A, u);\n                }\n                A.negatives = _;\n                A.positives = R;\n                A.result = collatePatterns(_, R, u);\n                if (u.capture === true) {\n                    A.result = \"(\".concat(A.result, \")\");\n                } else if (u.wrap !== false && R.length + _.length > 1) {\n                    A.result = \"(?:\".concat(A.result, \")\");\n                }\n                toRegexRange.cache[l] = A;\n                return A.result;\n            };\n            function collatePatterns(e, t, r) {\n                let n = filterPatterns(e, t, \"-\", false, r) || [];\n                let u = filterPatterns(t, e, \"\", false, r) || [];\n                let s = filterPatterns(e, t, \"-?\", true, r) || [];\n                let o = n.concat(s).concat(u);\n                return o.join(\"|\");\n            }\n            function splitToRanges(e, t) {\n                let r = 1;\n                let n = 1;\n                let u = countNines(e, r);\n                let s = new Set([\n                    t\n                ]);\n                while(e <= u && u <= t){\n                    s.add(u);\n                    r += 1;\n                    u = countNines(e, r);\n                }\n                u = countZeros(t + 1, n) - 1;\n                while(e < u && u <= t){\n                    s.add(u);\n                    n += 1;\n                    u = countZeros(t + 1, n) - 1;\n                }\n                s = [\n                    ...s\n                ];\n                s.sort(compare);\n                return s;\n            }\n            function rangeToPattern(e, t, r) {\n                if (e === t) {\n                    return {\n                        pattern: e,\n                        count: [],\n                        digits: 0\n                    };\n                }\n                let n = zip(e, t);\n                let u = n.length;\n                let s = \"\";\n                let o = 0;\n                for(let e = 0; e < u; e++){\n                    let [t, u] = n[e];\n                    if (t === u) {\n                        s += t;\n                    } else if (t !== \"0\" || u !== \"9\") {\n                        s += toCharacterClass(t, u, r);\n                    } else {\n                        o++;\n                    }\n                }\n                if (o) {\n                    s += r.shorthand === true ? \"\\\\d\" : \"[0-9]\";\n                }\n                return {\n                    pattern: s,\n                    count: [\n                        o\n                    ],\n                    digits: u\n                };\n            }\n            function splitToPatterns(e, t, r, n) {\n                let u = splitToRanges(e, t);\n                let s = [];\n                let o = e;\n                let i;\n                for(let e = 0; e < u.length; e++){\n                    let t = u[e];\n                    let a = rangeToPattern(String(o), String(t), n);\n                    let l = \"\";\n                    if (!r.isPadded && i && i.pattern === a.pattern) {\n                        if (i.count.length > 1) {\n                            i.count.pop();\n                        }\n                        i.count.push(a.count[0]);\n                        i.string = i.pattern + toQuantifier(i.count);\n                        o = t + 1;\n                        continue;\n                    }\n                    if (r.isPadded) {\n                        l = padZeros(t, r, n);\n                    }\n                    a.string = l + a.pattern + toQuantifier(a.count);\n                    s.push(a);\n                    o = t + 1;\n                    i = a;\n                }\n                return s;\n            }\n            function filterPatterns(e, t, r, n, u) {\n                let s = [];\n                for (let u of e){\n                    let { string: e } = u;\n                    if (!n && !contains(t, \"string\", e)) {\n                        s.push(r + e);\n                    }\n                    if (n && contains(t, \"string\", e)) {\n                        s.push(r + e);\n                    }\n                }\n                return s;\n            }\n            function zip(e, t) {\n                let r = [];\n                for(let n = 0; n < e.length; n++)r.push([\n                    e[n],\n                    t[n]\n                ]);\n                return r;\n            }\n            function compare(e, t) {\n                return e > t ? 1 : t > e ? -1 : 0;\n            }\n            function contains(e, t, r) {\n                return e.some((e)=>e[t] === r);\n            }\n            function countNines(e, t) {\n                return Number(String(e).slice(0, -t) + \"9\".repeat(t));\n            }\n            function countZeros(e, t) {\n                return e - e % Math.pow(10, t);\n            }\n            function toQuantifier(e) {\n                let [t = 0, r = \"\"] = e;\n                if (r || t > 1) {\n                    return \"{\".concat(t + (r ? \",\" + r : \"\"), \"}\");\n                }\n                return \"\";\n            }\n            function toCharacterClass(e, t, r) {\n                return \"[\".concat(e).concat(t - e === 1 ? \"\" : \"-\").concat(t, \"]\");\n            }\n            function hasPadding(e) {\n                return /^-?(0+)\\d/.test(e);\n            }\n            function padZeros(e, t, r) {\n                if (!t.isPadded) {\n                    return e;\n                }\n                let n = Math.abs(t.maxLen - String(e).length);\n                let u = r.relaxZeros !== false;\n                switch(n){\n                    case 0:\n                        return \"\";\n                    case 1:\n                        return u ? \"0?\" : \"0\";\n                    case 2:\n                        return u ? \"0{0,2}\" : \"00\";\n                    default:\n                        {\n                            return u ? \"0{0,\".concat(n, \"}\") : \"0{\".concat(n, \"}\");\n                        }\n                }\n            }\n            toRegexRange.cache = {};\n            toRegexRange.clearCache = ()=>toRegexRange.cache = {};\n            e.exports = toRegexRange;\n        },\n        17: (e)=>{\n            e.exports = __webpack_require__(/*! path */ \"(app-pages-browser)/./node_modules/next/dist/compiled/path-browserify/index.js\");\n        },\n        837: (e)=>{\n            e.exports = __webpack_require__(/*! util */ \"(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js\");\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var u = t[r] = {\n            exports: {}\n        };\n        var s = true;\n        try {\n            e[r](u, u.exports, __nccwpck_require__);\n            s = false;\n        } finally{\n            if (s) delete t[r];\n        }\n        return u.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = __nccwpck_require__(971);\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/micromatch/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/path-browserify/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-browserify/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n\n(function() {\n    \"use strict\";\n    var e = {\n        114: function(e) {\n            function assertPath(e) {\n                if (typeof e !== \"string\") {\n                    throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(e));\n                }\n            }\n            function normalizeStringPosix(e, r) {\n                var t = \"\";\n                var i = 0;\n                var n = -1;\n                var a = 0;\n                var f;\n                for(var l = 0; l <= e.length; ++l){\n                    if (l < e.length) f = e.charCodeAt(l);\n                    else if (f === 47) break;\n                    else f = 47;\n                    if (f === 47) {\n                        if (n === l - 1 || a === 1) {} else if (n !== l - 1 && a === 2) {\n                            if (t.length < 2 || i !== 2 || t.charCodeAt(t.length - 1) !== 46 || t.charCodeAt(t.length - 2) !== 46) {\n                                if (t.length > 2) {\n                                    var s = t.lastIndexOf(\"/\");\n                                    if (s !== t.length - 1) {\n                                        if (s === -1) {\n                                            t = \"\";\n                                            i = 0;\n                                        } else {\n                                            t = t.slice(0, s);\n                                            i = t.length - 1 - t.lastIndexOf(\"/\");\n                                        }\n                                        n = l;\n                                        a = 0;\n                                        continue;\n                                    }\n                                } else if (t.length === 2 || t.length === 1) {\n                                    t = \"\";\n                                    i = 0;\n                                    n = l;\n                                    a = 0;\n                                    continue;\n                                }\n                            }\n                            if (r) {\n                                if (t.length > 0) t += \"/..\";\n                                else t = \"..\";\n                                i = 2;\n                            }\n                        } else {\n                            if (t.length > 0) t += \"/\" + e.slice(n + 1, l);\n                            else t = e.slice(n + 1, l);\n                            i = l - n - 1;\n                        }\n                        n = l;\n                        a = 0;\n                    } else if (f === 46 && a !== -1) {\n                        ++a;\n                    } else {\n                        a = -1;\n                    }\n                }\n                return t;\n            }\n            function _format(e, r) {\n                var t = r.dir || r.root;\n                var i = r.base || (r.name || \"\") + (r.ext || \"\");\n                if (!t) {\n                    return i;\n                }\n                if (t === r.root) {\n                    return t + i;\n                }\n                return t + e + i;\n            }\n            var r = {\n                resolve: function resolve() {\n                    var e = \"\";\n                    var r = false;\n                    var t;\n                    for(var i = arguments.length - 1; i >= -1 && !r; i--){\n                        var n;\n                        if (i >= 0) n = arguments[i];\n                        else {\n                            if (t === undefined) t = \"\";\n                            n = t;\n                        }\n                        assertPath(n);\n                        if (n.length === 0) {\n                            continue;\n                        }\n                        e = n + \"/\" + e;\n                        r = n.charCodeAt(0) === 47;\n                    }\n                    e = normalizeStringPosix(e, !r);\n                    if (r) {\n                        if (e.length > 0) return \"/\" + e;\n                        else return \"/\";\n                    } else if (e.length > 0) {\n                        return e;\n                    } else {\n                        return \".\";\n                    }\n                },\n                normalize: function normalize(e) {\n                    assertPath(e);\n                    if (e.length === 0) return \".\";\n                    var r = e.charCodeAt(0) === 47;\n                    var t = e.charCodeAt(e.length - 1) === 47;\n                    e = normalizeStringPosix(e, !r);\n                    if (e.length === 0 && !r) e = \".\";\n                    if (e.length > 0 && t) e += \"/\";\n                    if (r) return \"/\" + e;\n                    return e;\n                },\n                isAbsolute: function isAbsolute(e) {\n                    assertPath(e);\n                    return e.length > 0 && e.charCodeAt(0) === 47;\n                },\n                join: function join() {\n                    if (arguments.length === 0) return \".\";\n                    var e;\n                    for(var t = 0; t < arguments.length; ++t){\n                        var i = arguments[t];\n                        assertPath(i);\n                        if (i.length > 0) {\n                            if (e === undefined) e = i;\n                            else e += \"/\" + i;\n                        }\n                    }\n                    if (e === undefined) return \".\";\n                    return r.normalize(e);\n                },\n                relative: function relative(e, t) {\n                    assertPath(e);\n                    assertPath(t);\n                    if (e === t) return \"\";\n                    e = r.resolve(e);\n                    t = r.resolve(t);\n                    if (e === t) return \"\";\n                    var i = 1;\n                    for(; i < e.length; ++i){\n                        if (e.charCodeAt(i) !== 47) break;\n                    }\n                    var n = e.length;\n                    var a = n - i;\n                    var f = 1;\n                    for(; f < t.length; ++f){\n                        if (t.charCodeAt(f) !== 47) break;\n                    }\n                    var l = t.length;\n                    var s = l - f;\n                    var o = a < s ? a : s;\n                    var u = -1;\n                    var h = 0;\n                    for(; h <= o; ++h){\n                        if (h === o) {\n                            if (s > o) {\n                                if (t.charCodeAt(f + h) === 47) {\n                                    return t.slice(f + h + 1);\n                                } else if (h === 0) {\n                                    return t.slice(f + h);\n                                }\n                            } else if (a > o) {\n                                if (e.charCodeAt(i + h) === 47) {\n                                    u = h;\n                                } else if (h === 0) {\n                                    u = 0;\n                                }\n                            }\n                            break;\n                        }\n                        var c = e.charCodeAt(i + h);\n                        var v = t.charCodeAt(f + h);\n                        if (c !== v) break;\n                        else if (c === 47) u = h;\n                    }\n                    var g = \"\";\n                    for(h = i + u + 1; h <= n; ++h){\n                        if (h === n || e.charCodeAt(h) === 47) {\n                            if (g.length === 0) g += \"..\";\n                            else g += \"/..\";\n                        }\n                    }\n                    if (g.length > 0) return g + t.slice(f + u);\n                    else {\n                        f += u;\n                        if (t.charCodeAt(f) === 47) ++f;\n                        return t.slice(f);\n                    }\n                },\n                _makeLong: function _makeLong(e) {\n                    return e;\n                },\n                dirname: function dirname(e) {\n                    assertPath(e);\n                    if (e.length === 0) return \".\";\n                    var r = e.charCodeAt(0);\n                    var t = r === 47;\n                    var i = -1;\n                    var n = true;\n                    for(var a = e.length - 1; a >= 1; --a){\n                        r = e.charCodeAt(a);\n                        if (r === 47) {\n                            if (!n) {\n                                i = a;\n                                break;\n                            }\n                        } else {\n                            n = false;\n                        }\n                    }\n                    if (i === -1) return t ? \"/\" : \".\";\n                    if (t && i === 1) return \"//\";\n                    return e.slice(0, i);\n                },\n                basename: function basename(e, r) {\n                    if (r !== undefined && typeof r !== \"string\") throw new TypeError('\"ext\" argument must be a string');\n                    assertPath(e);\n                    var t = 0;\n                    var i = -1;\n                    var n = true;\n                    var a;\n                    if (r !== undefined && r.length > 0 && r.length <= e.length) {\n                        if (r.length === e.length && r === e) return \"\";\n                        var f = r.length - 1;\n                        var l = -1;\n                        for(a = e.length - 1; a >= 0; --a){\n                            var s = e.charCodeAt(a);\n                            if (s === 47) {\n                                if (!n) {\n                                    t = a + 1;\n                                    break;\n                                }\n                            } else {\n                                if (l === -1) {\n                                    n = false;\n                                    l = a + 1;\n                                }\n                                if (f >= 0) {\n                                    if (s === r.charCodeAt(f)) {\n                                        if (--f === -1) {\n                                            i = a;\n                                        }\n                                    } else {\n                                        f = -1;\n                                        i = l;\n                                    }\n                                }\n                            }\n                        }\n                        if (t === i) i = l;\n                        else if (i === -1) i = e.length;\n                        return e.slice(t, i);\n                    } else {\n                        for(a = e.length - 1; a >= 0; --a){\n                            if (e.charCodeAt(a) === 47) {\n                                if (!n) {\n                                    t = a + 1;\n                                    break;\n                                }\n                            } else if (i === -1) {\n                                n = false;\n                                i = a + 1;\n                            }\n                        }\n                        if (i === -1) return \"\";\n                        return e.slice(t, i);\n                    }\n                },\n                extname: function extname(e) {\n                    assertPath(e);\n                    var r = -1;\n                    var t = 0;\n                    var i = -1;\n                    var n = true;\n                    var a = 0;\n                    for(var f = e.length - 1; f >= 0; --f){\n                        var l = e.charCodeAt(f);\n                        if (l === 47) {\n                            if (!n) {\n                                t = f + 1;\n                                break;\n                            }\n                            continue;\n                        }\n                        if (i === -1) {\n                            n = false;\n                            i = f + 1;\n                        }\n                        if (l === 46) {\n                            if (r === -1) r = f;\n                            else if (a !== 1) a = 1;\n                        } else if (r !== -1) {\n                            a = -1;\n                        }\n                    }\n                    if (r === -1 || i === -1 || a === 0 || a === 1 && r === i - 1 && r === t + 1) {\n                        return \"\";\n                    }\n                    return e.slice(r, i);\n                },\n                format: function format(e) {\n                    if (e === null || typeof e !== \"object\") {\n                        throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof e);\n                    }\n                    return _format(\"/\", e);\n                },\n                parse: function parse(e) {\n                    assertPath(e);\n                    var r = {\n                        root: \"\",\n                        dir: \"\",\n                        base: \"\",\n                        ext: \"\",\n                        name: \"\"\n                    };\n                    if (e.length === 0) return r;\n                    var t = e.charCodeAt(0);\n                    var i = t === 47;\n                    var n;\n                    if (i) {\n                        r.root = \"/\";\n                        n = 1;\n                    } else {\n                        n = 0;\n                    }\n                    var a = -1;\n                    var f = 0;\n                    var l = -1;\n                    var s = true;\n                    var o = e.length - 1;\n                    var u = 0;\n                    for(; o >= n; --o){\n                        t = e.charCodeAt(o);\n                        if (t === 47) {\n                            if (!s) {\n                                f = o + 1;\n                                break;\n                            }\n                            continue;\n                        }\n                        if (l === -1) {\n                            s = false;\n                            l = o + 1;\n                        }\n                        if (t === 46) {\n                            if (a === -1) a = o;\n                            else if (u !== 1) u = 1;\n                        } else if (a !== -1) {\n                            u = -1;\n                        }\n                    }\n                    if (a === -1 || l === -1 || u === 0 || u === 1 && a === l - 1 && a === f + 1) {\n                        if (l !== -1) {\n                            if (f === 0 && i) r.base = r.name = e.slice(1, l);\n                            else r.base = r.name = e.slice(f, l);\n                        }\n                    } else {\n                        if (f === 0 && i) {\n                            r.name = e.slice(1, a);\n                            r.base = e.slice(1, l);\n                        } else {\n                            r.name = e.slice(f, a);\n                            r.base = e.slice(f, l);\n                        }\n                        r.ext = e.slice(a, l);\n                    }\n                    if (f > 0) r.dir = e.slice(0, f - 1);\n                    else if (i) r.dir = \"/\";\n                    return r;\n                },\n                sep: \"/\",\n                delimiter: \":\",\n                win32: null,\n                posix: null\n            };\n            r.posix = r;\n            e.exports = r;\n        }\n    };\n    var r = {};\n    function __nccwpck_require__(t) {\n        var i = r[t];\n        if (i !== undefined) {\n            return i.exports;\n        }\n        var n = r[t] = {\n            exports: {}\n        };\n        var a = true;\n        try {\n            e[t](n, n.exports, __nccwpck_require__);\n            a = false;\n        } finally{\n            if (a) delete r[t];\n        }\n        return n.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var t = __nccwpck_require__(114);\n    module.exports = t;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/path-browserify/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n\n(function() {\n    var e = {\n        229: function(e) {\n            var t = e.exports = {};\n            var r;\n            var n;\n            function defaultSetTimout() {\n                throw new Error(\"setTimeout has not been defined\");\n            }\n            function defaultClearTimeout() {\n                throw new Error(\"clearTimeout has not been defined\");\n            }\n            (function() {\n                try {\n                    if (typeof setTimeout === \"function\") {\n                        r = setTimeout;\n                    } else {\n                        r = defaultSetTimout;\n                    }\n                } catch (e) {\n                    r = defaultSetTimout;\n                }\n                try {\n                    if (typeof clearTimeout === \"function\") {\n                        n = clearTimeout;\n                    } else {\n                        n = defaultClearTimeout;\n                    }\n                } catch (e) {\n                    n = defaultClearTimeout;\n                }\n            })();\n            function runTimeout(e) {\n                if (r === setTimeout) {\n                    return setTimeout(e, 0);\n                }\n                if ((r === defaultSetTimout || !r) && setTimeout) {\n                    r = setTimeout;\n                    return setTimeout(e, 0);\n                }\n                try {\n                    return r(e, 0);\n                } catch (t) {\n                    try {\n                        return r.call(null, e, 0);\n                    } catch (t) {\n                        return r.call(this, e, 0);\n                    }\n                }\n            }\n            function runClearTimeout(e) {\n                if (n === clearTimeout) {\n                    return clearTimeout(e);\n                }\n                if ((n === defaultClearTimeout || !n) && clearTimeout) {\n                    n = clearTimeout;\n                    return clearTimeout(e);\n                }\n                try {\n                    return n(e);\n                } catch (t) {\n                    try {\n                        return n.call(null, e);\n                    } catch (t) {\n                        return n.call(this, e);\n                    }\n                }\n            }\n            var i = [];\n            var o = false;\n            var u;\n            var a = -1;\n            function cleanUpNextTick() {\n                if (!o || !u) {\n                    return;\n                }\n                o = false;\n                if (u.length) {\n                    i = u.concat(i);\n                } else {\n                    a = -1;\n                }\n                if (i.length) {\n                    drainQueue();\n                }\n            }\n            function drainQueue() {\n                if (o) {\n                    return;\n                }\n                var e = runTimeout(cleanUpNextTick);\n                o = true;\n                var t = i.length;\n                while(t){\n                    u = i;\n                    i = [];\n                    while(++a < t){\n                        if (u) {\n                            u[a].run();\n                        }\n                    }\n                    a = -1;\n                    t = i.length;\n                }\n                u = null;\n                o = false;\n                runClearTimeout(e);\n            }\n            t.nextTick = function(e) {\n                var t = new Array(arguments.length - 1);\n                if (arguments.length > 1) {\n                    for(var r = 1; r < arguments.length; r++){\n                        t[r - 1] = arguments[r];\n                    }\n                }\n                i.push(new Item(e, t));\n                if (i.length === 1 && !o) {\n                    runTimeout(drainQueue);\n                }\n            };\n            function Item(e, t) {\n                this.fun = e;\n                this.array = t;\n            }\n            Item.prototype.run = function() {\n                this.fun.apply(null, this.array);\n            };\n            t.title = \"browser\";\n            t.browser = true;\n            t.env = {};\n            t.argv = [];\n            t.version = \"\";\n            t.versions = {};\n            function noop() {}\n            t.on = noop;\n            t.addListener = noop;\n            t.once = noop;\n            t.off = noop;\n            t.removeListener = noop;\n            t.removeAllListeners = noop;\n            t.emit = noop;\n            t.prependListener = noop;\n            t.prependOnceListener = noop;\n            t.listeners = function(e) {\n                return [];\n            };\n            t.binding = function(e) {\n                throw new Error(\"process.binding is not supported\");\n            };\n            t.cwd = function() {\n                return \"/\";\n            };\n            t.chdir = function(e) {\n                throw new Error(\"process.chdir is not supported\");\n            };\n            t.umask = function() {\n                return 0;\n            };\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var i = t[r] = {\n            exports: {}\n        };\n        var o = true;\n        try {\n            e[r](i, i.exports, __nccwpck_require__);\n            o = false;\n        } finally{\n            if (o) delete t[r];\n        }\n        return i.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = __nccwpck_require__(229);\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/compiled/util/util.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n(function() {\n    var r = {\n        992: function(r) {\n            r.exports = function(r, t, o) {\n                if (r.filter) return r.filter(t, o);\n                if (void 0 === r || null === r) throw new TypeError;\n                if (\"function\" != typeof t) throw new TypeError;\n                var n = [];\n                for(var i = 0; i < r.length; i++){\n                    if (!e.call(r, i)) continue;\n                    var a = r[i];\n                    if (t.call(o, a, i, r)) n.push(a);\n                }\n                return n;\n            };\n            var e = Object.prototype.hasOwnProperty;\n        },\n        256: function(r, e, t) {\n            \"use strict\";\n            var o = t(925);\n            var n = t(139);\n            var i = n(o(\"String.prototype.indexOf\"));\n            r.exports = function callBoundIntrinsic(r, e) {\n                var t = o(r, !!e);\n                if (typeof t === \"function\" && i(r, \".prototype.\") > -1) {\n                    return n(t);\n                }\n                return t;\n            };\n        },\n        139: function(r, e, t) {\n            \"use strict\";\n            var o = t(174);\n            var n = t(925);\n            var i = n(\"%Function.prototype.apply%\");\n            var a = n(\"%Function.prototype.call%\");\n            var y = n(\"%Reflect.apply%\", true) || o.call(a, i);\n            var f = n(\"%Object.getOwnPropertyDescriptor%\", true);\n            var p = n(\"%Object.defineProperty%\", true);\n            var u = n(\"%Math.max%\");\n            if (p) {\n                try {\n                    p({}, \"a\", {\n                        value: 1\n                    });\n                } catch (r) {\n                    p = null;\n                }\n            }\n            r.exports = function callBind(r) {\n                var e = y(o, a, arguments);\n                if (f && p) {\n                    var t = f(e, \"length\");\n                    if (t.configurable) {\n                        p(e, \"length\", {\n                            value: 1 + u(0, r.length - (arguments.length - 1))\n                        });\n                    }\n                }\n                return e;\n            };\n            var s = function applyBind() {\n                return y(o, i, arguments);\n            };\n            if (p) {\n                p(r.exports, \"apply\", {\n                    value: s\n                });\n            } else {\n                r.exports.apply = s;\n            }\n        },\n        144: function(r) {\n            var e = Object.prototype.hasOwnProperty;\n            var t = Object.prototype.toString;\n            r.exports = function forEach(r, o, n) {\n                if (t.call(o) !== \"[object Function]\") {\n                    throw new TypeError(\"iterator must be a function\");\n                }\n                var i = r.length;\n                if (i === +i) {\n                    for(var a = 0; a < i; a++){\n                        o.call(n, r[a], a, r);\n                    }\n                } else {\n                    for(var y in r){\n                        if (e.call(r, y)) {\n                            o.call(n, r[y], y, r);\n                        }\n                    }\n                }\n            };\n        },\n        426: function(r) {\n            \"use strict\";\n            var e = \"Function.prototype.bind called on incompatible \";\n            var t = Array.prototype.slice;\n            var o = Object.prototype.toString;\n            var n = \"[object Function]\";\n            r.exports = function bind(r) {\n                var i = this;\n                if (typeof i !== \"function\" || o.call(i) !== n) {\n                    throw new TypeError(e + i);\n                }\n                var a = t.call(arguments, 1);\n                var y;\n                var binder = function() {\n                    if (this instanceof y) {\n                        var e = i.apply(this, a.concat(t.call(arguments)));\n                        if (Object(e) === e) {\n                            return e;\n                        }\n                        return this;\n                    } else {\n                        return i.apply(r, a.concat(t.call(arguments)));\n                    }\n                };\n                var f = Math.max(0, i.length - a.length);\n                var p = [];\n                for(var u = 0; u < f; u++){\n                    p.push(\"$\" + u);\n                }\n                y = Function(\"binder\", \"return function (\" + p.join(\",\") + \"){ return binder.apply(this,arguments); }\")(binder);\n                if (i.prototype) {\n                    var s = function Empty() {};\n                    s.prototype = i.prototype;\n                    y.prototype = new s;\n                    s.prototype = null;\n                }\n                return y;\n            };\n        },\n        174: function(r, e, t) {\n            \"use strict\";\n            var o = t(426);\n            r.exports = Function.prototype.bind || o;\n        },\n        500: function(r, e, t) {\n            \"use strict\";\n            var o;\n            var n = SyntaxError;\n            var i = Function;\n            var a = TypeError;\n            var getEvalledConstructor = function(r) {\n                try {\n                    return i('\"use strict\"; return (' + r + \").constructor;\")();\n                } catch (r) {}\n            };\n            var y = Object.getOwnPropertyDescriptor;\n            if (y) {\n                try {\n                    y({}, \"\");\n                } catch (r) {\n                    y = null;\n                }\n            }\n            var throwTypeError = function() {\n                throw new a;\n            };\n            var f = y ? function() {\n                try {\n                    arguments.callee;\n                    return throwTypeError;\n                } catch (r) {\n                    try {\n                        return y(arguments, \"callee\").get;\n                    } catch (r) {\n                        return throwTypeError;\n                    }\n                }\n            }() : throwTypeError;\n            var p = t(115)();\n            var u = Object.getPrototypeOf || function(r) {\n                return r.__proto__;\n            };\n            var s = {};\n            var c = typeof Uint8Array === \"undefined\" ? o : u(Uint8Array);\n            var l = {\n                \"%AggregateError%\": typeof AggregateError === \"undefined\" ? o : AggregateError,\n                \"%Array%\": Array,\n                \"%ArrayBuffer%\": typeof ArrayBuffer === \"undefined\" ? o : ArrayBuffer,\n                \"%ArrayIteratorPrototype%\": p ? u([][Symbol.iterator]()) : o,\n                \"%AsyncFromSyncIteratorPrototype%\": o,\n                \"%AsyncFunction%\": s,\n                \"%AsyncGenerator%\": s,\n                \"%AsyncGeneratorFunction%\": s,\n                \"%AsyncIteratorPrototype%\": s,\n                \"%Atomics%\": typeof Atomics === \"undefined\" ? o : Atomics,\n                \"%BigInt%\": typeof BigInt === \"undefined\" ? o : BigInt,\n                \"%Boolean%\": Boolean,\n                \"%DataView%\": typeof DataView === \"undefined\" ? o : DataView,\n                \"%Date%\": Date,\n                \"%decodeURI%\": decodeURI,\n                \"%decodeURIComponent%\": decodeURIComponent,\n                \"%encodeURI%\": encodeURI,\n                \"%encodeURIComponent%\": encodeURIComponent,\n                \"%Error%\": Error,\n                \"%eval%\": eval,\n                \"%EvalError%\": EvalError,\n                \"%Float32Array%\": typeof Float32Array === \"undefined\" ? o : Float32Array,\n                \"%Float64Array%\": typeof Float64Array === \"undefined\" ? o : Float64Array,\n                \"%FinalizationRegistry%\": typeof FinalizationRegistry === \"undefined\" ? o : FinalizationRegistry,\n                \"%Function%\": i,\n                \"%GeneratorFunction%\": s,\n                \"%Int8Array%\": typeof Int8Array === \"undefined\" ? o : Int8Array,\n                \"%Int16Array%\": typeof Int16Array === \"undefined\" ? o : Int16Array,\n                \"%Int32Array%\": typeof Int32Array === \"undefined\" ? o : Int32Array,\n                \"%isFinite%\": isFinite,\n                \"%isNaN%\": isNaN,\n                \"%IteratorPrototype%\": p ? u(u([][Symbol.iterator]())) : o,\n                \"%JSON%\": typeof JSON === \"object\" ? JSON : o,\n                \"%Map%\": typeof Map === \"undefined\" ? o : Map,\n                \"%MapIteratorPrototype%\": typeof Map === \"undefined\" || !p ? o : u((new Map)[Symbol.iterator]()),\n                \"%Math%\": Math,\n                \"%Number%\": Number,\n                \"%Object%\": Object,\n                \"%parseFloat%\": parseFloat,\n                \"%parseInt%\": parseInt,\n                \"%Promise%\": typeof Promise === \"undefined\" ? o : Promise,\n                \"%Proxy%\": typeof Proxy === \"undefined\" ? o : Proxy,\n                \"%RangeError%\": RangeError,\n                \"%ReferenceError%\": ReferenceError,\n                \"%Reflect%\": typeof Reflect === \"undefined\" ? o : Reflect,\n                \"%RegExp%\": RegExp,\n                \"%Set%\": typeof Set === \"undefined\" ? o : Set,\n                \"%SetIteratorPrototype%\": typeof Set === \"undefined\" || !p ? o : u((new Set)[Symbol.iterator]()),\n                \"%SharedArrayBuffer%\": typeof SharedArrayBuffer === \"undefined\" ? o : SharedArrayBuffer,\n                \"%String%\": String,\n                \"%StringIteratorPrototype%\": p ? u(\"\"[Symbol.iterator]()) : o,\n                \"%Symbol%\": p ? Symbol : o,\n                \"%SyntaxError%\": n,\n                \"%ThrowTypeError%\": f,\n                \"%TypedArray%\": c,\n                \"%TypeError%\": a,\n                \"%Uint8Array%\": typeof Uint8Array === \"undefined\" ? o : Uint8Array,\n                \"%Uint8ClampedArray%\": typeof Uint8ClampedArray === \"undefined\" ? o : Uint8ClampedArray,\n                \"%Uint16Array%\": typeof Uint16Array === \"undefined\" ? o : Uint16Array,\n                \"%Uint32Array%\": typeof Uint32Array === \"undefined\" ? o : Uint32Array,\n                \"%URIError%\": URIError,\n                \"%WeakMap%\": typeof WeakMap === \"undefined\" ? o : WeakMap,\n                \"%WeakRef%\": typeof WeakRef === \"undefined\" ? o : WeakRef,\n                \"%WeakSet%\": typeof WeakSet === \"undefined\" ? o : WeakSet\n            };\n            var d = function doEval(r) {\n                var e;\n                if (r === \"%AsyncFunction%\") {\n                    e = getEvalledConstructor(\"async function () {}\");\n                } else if (r === \"%GeneratorFunction%\") {\n                    e = getEvalledConstructor(\"function* () {}\");\n                } else if (r === \"%AsyncGeneratorFunction%\") {\n                    e = getEvalledConstructor(\"async function* () {}\");\n                } else if (r === \"%AsyncGenerator%\") {\n                    var t = doEval(\"%AsyncGeneratorFunction%\");\n                    if (t) {\n                        e = t.prototype;\n                    }\n                } else if (r === \"%AsyncIteratorPrototype%\") {\n                    var o = doEval(\"%AsyncGenerator%\");\n                    if (o) {\n                        e = u(o.prototype);\n                    }\n                }\n                l[r] = e;\n                return e;\n            };\n            var g = {\n                \"%ArrayBufferPrototype%\": [\n                    \"ArrayBuffer\",\n                    \"prototype\"\n                ],\n                \"%ArrayPrototype%\": [\n                    \"Array\",\n                    \"prototype\"\n                ],\n                \"%ArrayProto_entries%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"entries\"\n                ],\n                \"%ArrayProto_forEach%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"forEach\"\n                ],\n                \"%ArrayProto_keys%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"keys\"\n                ],\n                \"%ArrayProto_values%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"values\"\n                ],\n                \"%AsyncFunctionPrototype%\": [\n                    \"AsyncFunction\",\n                    \"prototype\"\n                ],\n                \"%AsyncGenerator%\": [\n                    \"AsyncGeneratorFunction\",\n                    \"prototype\"\n                ],\n                \"%AsyncGeneratorPrototype%\": [\n                    \"AsyncGeneratorFunction\",\n                    \"prototype\",\n                    \"prototype\"\n                ],\n                \"%BooleanPrototype%\": [\n                    \"Boolean\",\n                    \"prototype\"\n                ],\n                \"%DataViewPrototype%\": [\n                    \"DataView\",\n                    \"prototype\"\n                ],\n                \"%DatePrototype%\": [\n                    \"Date\",\n                    \"prototype\"\n                ],\n                \"%ErrorPrototype%\": [\n                    \"Error\",\n                    \"prototype\"\n                ],\n                \"%EvalErrorPrototype%\": [\n                    \"EvalError\",\n                    \"prototype\"\n                ],\n                \"%Float32ArrayPrototype%\": [\n                    \"Float32Array\",\n                    \"prototype\"\n                ],\n                \"%Float64ArrayPrototype%\": [\n                    \"Float64Array\",\n                    \"prototype\"\n                ],\n                \"%FunctionPrototype%\": [\n                    \"Function\",\n                    \"prototype\"\n                ],\n                \"%Generator%\": [\n                    \"GeneratorFunction\",\n                    \"prototype\"\n                ],\n                \"%GeneratorPrototype%\": [\n                    \"GeneratorFunction\",\n                    \"prototype\",\n                    \"prototype\"\n                ],\n                \"%Int8ArrayPrototype%\": [\n                    \"Int8Array\",\n                    \"prototype\"\n                ],\n                \"%Int16ArrayPrototype%\": [\n                    \"Int16Array\",\n                    \"prototype\"\n                ],\n                \"%Int32ArrayPrototype%\": [\n                    \"Int32Array\",\n                    \"prototype\"\n                ],\n                \"%JSONParse%\": [\n                    \"JSON\",\n                    \"parse\"\n                ],\n                \"%JSONStringify%\": [\n                    \"JSON\",\n                    \"stringify\"\n                ],\n                \"%MapPrototype%\": [\n                    \"Map\",\n                    \"prototype\"\n                ],\n                \"%NumberPrototype%\": [\n                    \"Number\",\n                    \"prototype\"\n                ],\n                \"%ObjectPrototype%\": [\n                    \"Object\",\n                    \"prototype\"\n                ],\n                \"%ObjProto_toString%\": [\n                    \"Object\",\n                    \"prototype\",\n                    \"toString\"\n                ],\n                \"%ObjProto_valueOf%\": [\n                    \"Object\",\n                    \"prototype\",\n                    \"valueOf\"\n                ],\n                \"%PromisePrototype%\": [\n                    \"Promise\",\n                    \"prototype\"\n                ],\n                \"%PromiseProto_then%\": [\n                    \"Promise\",\n                    \"prototype\",\n                    \"then\"\n                ],\n                \"%Promise_all%\": [\n                    \"Promise\",\n                    \"all\"\n                ],\n                \"%Promise_reject%\": [\n                    \"Promise\",\n                    \"reject\"\n                ],\n                \"%Promise_resolve%\": [\n                    \"Promise\",\n                    \"resolve\"\n                ],\n                \"%RangeErrorPrototype%\": [\n                    \"RangeError\",\n                    \"prototype\"\n                ],\n                \"%ReferenceErrorPrototype%\": [\n                    \"ReferenceError\",\n                    \"prototype\"\n                ],\n                \"%RegExpPrototype%\": [\n                    \"RegExp\",\n                    \"prototype\"\n                ],\n                \"%SetPrototype%\": [\n                    \"Set\",\n                    \"prototype\"\n                ],\n                \"%SharedArrayBufferPrototype%\": [\n                    \"SharedArrayBuffer\",\n                    \"prototype\"\n                ],\n                \"%StringPrototype%\": [\n                    \"String\",\n                    \"prototype\"\n                ],\n                \"%SymbolPrototype%\": [\n                    \"Symbol\",\n                    \"prototype\"\n                ],\n                \"%SyntaxErrorPrototype%\": [\n                    \"SyntaxError\",\n                    \"prototype\"\n                ],\n                \"%TypedArrayPrototype%\": [\n                    \"TypedArray\",\n                    \"prototype\"\n                ],\n                \"%TypeErrorPrototype%\": [\n                    \"TypeError\",\n                    \"prototype\"\n                ],\n                \"%Uint8ArrayPrototype%\": [\n                    \"Uint8Array\",\n                    \"prototype\"\n                ],\n                \"%Uint8ClampedArrayPrototype%\": [\n                    \"Uint8ClampedArray\",\n                    \"prototype\"\n                ],\n                \"%Uint16ArrayPrototype%\": [\n                    \"Uint16Array\",\n                    \"prototype\"\n                ],\n                \"%Uint32ArrayPrototype%\": [\n                    \"Uint32Array\",\n                    \"prototype\"\n                ],\n                \"%URIErrorPrototype%\": [\n                    \"URIError\",\n                    \"prototype\"\n                ],\n                \"%WeakMapPrototype%\": [\n                    \"WeakMap\",\n                    \"prototype\"\n                ],\n                \"%WeakSetPrototype%\": [\n                    \"WeakSet\",\n                    \"prototype\"\n                ]\n            };\n            var v = t(174);\n            var b = t(101);\n            var A = v.call(Function.call, Array.prototype.concat);\n            var m = v.call(Function.apply, Array.prototype.splice);\n            var S = v.call(Function.call, String.prototype.replace);\n            var h = v.call(Function.call, String.prototype.slice);\n            var P = v.call(Function.call, RegExp.prototype.exec);\n            var O = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\n            var w = /\\\\(\\\\)?/g;\n            var j = function stringToPath(r) {\n                var e = h(r, 0, 1);\n                var t = h(r, -1);\n                if (e === \"%\" && t !== \"%\") {\n                    throw new n(\"invalid intrinsic syntax, expected closing `%`\");\n                } else if (t === \"%\" && e !== \"%\") {\n                    throw new n(\"invalid intrinsic syntax, expected opening `%`\");\n                }\n                var o = [];\n                S(r, O, function(r, e, t, n) {\n                    o[o.length] = t ? S(n, w, \"$1\") : e || r;\n                });\n                return o;\n            };\n            var E = function getBaseIntrinsic(r, e) {\n                var t = r;\n                var o;\n                if (b(g, t)) {\n                    o = g[t];\n                    t = \"%\" + o[0] + \"%\";\n                }\n                if (b(l, t)) {\n                    var i = l[t];\n                    if (i === s) {\n                        i = d(t);\n                    }\n                    if (typeof i === \"undefined\" && !e) {\n                        throw new a(\"intrinsic \" + r + \" exists, but is not available. Please file an issue!\");\n                    }\n                    return {\n                        alias: o,\n                        name: t,\n                        value: i\n                    };\n                }\n                throw new n(\"intrinsic \" + r + \" does not exist!\");\n            };\n            r.exports = function GetIntrinsic(r, e) {\n                if (typeof r !== \"string\" || r.length === 0) {\n                    throw new a(\"intrinsic name must be a non-empty string\");\n                }\n                if (arguments.length > 1 && typeof e !== \"boolean\") {\n                    throw new a('\"allowMissing\" argument must be a boolean');\n                }\n                if (P(/^%?[^%]*%?$/g, r) === null) {\n                    throw new n(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");\n                }\n                var t = j(r);\n                var i = t.length > 0 ? t[0] : \"\";\n                var f = E(\"%\" + i + \"%\", e);\n                var p = f.name;\n                var u = f.value;\n                var s = false;\n                var c = f.alias;\n                if (c) {\n                    i = c[0];\n                    m(t, A([\n                        0,\n                        1\n                    ], c));\n                }\n                for(var d = 1, g = true; d < t.length; d += 1){\n                    var v = t[d];\n                    var S = h(v, 0, 1);\n                    var O = h(v, -1);\n                    if ((S === '\"' || S === \"'\" || S === \"`\" || O === '\"' || O === \"'\" || O === \"`\") && S !== O) {\n                        throw new n(\"property names with quotes must have matching quotes\");\n                    }\n                    if (v === \"constructor\" || !g) {\n                        s = true;\n                    }\n                    i += \".\" + v;\n                    p = \"%\" + i + \"%\";\n                    if (b(l, p)) {\n                        u = l[p];\n                    } else if (u != null) {\n                        if (!(v in u)) {\n                            if (!e) {\n                                throw new a(\"base intrinsic for \" + r + \" exists, but the property is not available.\");\n                            }\n                            return void o;\n                        }\n                        if (y && d + 1 >= t.length) {\n                            var w = y(u, v);\n                            g = !!w;\n                            if (g && \"get\" in w && !(\"originalValue\" in w.get)) {\n                                u = w.get;\n                            } else {\n                                u = u[v];\n                            }\n                        } else {\n                            g = b(u, v);\n                            u = u[v];\n                        }\n                        if (g && !s) {\n                            l[p] = u;\n                        }\n                    }\n                }\n                return u;\n            };\n        },\n        925: function(r, e, t) {\n            \"use strict\";\n            var o;\n            var n = SyntaxError;\n            var i = Function;\n            var a = TypeError;\n            var getEvalledConstructor = function(r) {\n                try {\n                    return i('\"use strict\"; return (' + r + \").constructor;\")();\n                } catch (r) {}\n            };\n            var y = Object.getOwnPropertyDescriptor;\n            if (y) {\n                try {\n                    y({}, \"\");\n                } catch (r) {\n                    y = null;\n                }\n            }\n            var throwTypeError = function() {\n                throw new a;\n            };\n            var f = y ? function() {\n                try {\n                    arguments.callee;\n                    return throwTypeError;\n                } catch (r) {\n                    try {\n                        return y(arguments, \"callee\").get;\n                    } catch (r) {\n                        return throwTypeError;\n                    }\n                }\n            }() : throwTypeError;\n            var p = t(115)();\n            var u = t(504)();\n            var s = Object.getPrototypeOf || (u ? function(r) {\n                return r.__proto__;\n            } : null);\n            var c = {};\n            var l = typeof Uint8Array === \"undefined\" || !s ? o : s(Uint8Array);\n            var d = {\n                \"%AggregateError%\": typeof AggregateError === \"undefined\" ? o : AggregateError,\n                \"%Array%\": Array,\n                \"%ArrayBuffer%\": typeof ArrayBuffer === \"undefined\" ? o : ArrayBuffer,\n                \"%ArrayIteratorPrototype%\": p && s ? s([][Symbol.iterator]()) : o,\n                \"%AsyncFromSyncIteratorPrototype%\": o,\n                \"%AsyncFunction%\": c,\n                \"%AsyncGenerator%\": c,\n                \"%AsyncGeneratorFunction%\": c,\n                \"%AsyncIteratorPrototype%\": c,\n                \"%Atomics%\": typeof Atomics === \"undefined\" ? o : Atomics,\n                \"%BigInt%\": typeof BigInt === \"undefined\" ? o : BigInt,\n                \"%BigInt64Array%\": typeof BigInt64Array === \"undefined\" ? o : BigInt64Array,\n                \"%BigUint64Array%\": typeof BigUint64Array === \"undefined\" ? o : BigUint64Array,\n                \"%Boolean%\": Boolean,\n                \"%DataView%\": typeof DataView === \"undefined\" ? o : DataView,\n                \"%Date%\": Date,\n                \"%decodeURI%\": decodeURI,\n                \"%decodeURIComponent%\": decodeURIComponent,\n                \"%encodeURI%\": encodeURI,\n                \"%encodeURIComponent%\": encodeURIComponent,\n                \"%Error%\": Error,\n                \"%eval%\": eval,\n                \"%EvalError%\": EvalError,\n                \"%Float32Array%\": typeof Float32Array === \"undefined\" ? o : Float32Array,\n                \"%Float64Array%\": typeof Float64Array === \"undefined\" ? o : Float64Array,\n                \"%FinalizationRegistry%\": typeof FinalizationRegistry === \"undefined\" ? o : FinalizationRegistry,\n                \"%Function%\": i,\n                \"%GeneratorFunction%\": c,\n                \"%Int8Array%\": typeof Int8Array === \"undefined\" ? o : Int8Array,\n                \"%Int16Array%\": typeof Int16Array === \"undefined\" ? o : Int16Array,\n                \"%Int32Array%\": typeof Int32Array === \"undefined\" ? o : Int32Array,\n                \"%isFinite%\": isFinite,\n                \"%isNaN%\": isNaN,\n                \"%IteratorPrototype%\": p && s ? s(s([][Symbol.iterator]())) : o,\n                \"%JSON%\": typeof JSON === \"object\" ? JSON : o,\n                \"%Map%\": typeof Map === \"undefined\" ? o : Map,\n                \"%MapIteratorPrototype%\": typeof Map === \"undefined\" || !p || !s ? o : s((new Map)[Symbol.iterator]()),\n                \"%Math%\": Math,\n                \"%Number%\": Number,\n                \"%Object%\": Object,\n                \"%parseFloat%\": parseFloat,\n                \"%parseInt%\": parseInt,\n                \"%Promise%\": typeof Promise === \"undefined\" ? o : Promise,\n                \"%Proxy%\": typeof Proxy === \"undefined\" ? o : Proxy,\n                \"%RangeError%\": RangeError,\n                \"%ReferenceError%\": ReferenceError,\n                \"%Reflect%\": typeof Reflect === \"undefined\" ? o : Reflect,\n                \"%RegExp%\": RegExp,\n                \"%Set%\": typeof Set === \"undefined\" ? o : Set,\n                \"%SetIteratorPrototype%\": typeof Set === \"undefined\" || !p || !s ? o : s((new Set)[Symbol.iterator]()),\n                \"%SharedArrayBuffer%\": typeof SharedArrayBuffer === \"undefined\" ? o : SharedArrayBuffer,\n                \"%String%\": String,\n                \"%StringIteratorPrototype%\": p && s ? s(\"\"[Symbol.iterator]()) : o,\n                \"%Symbol%\": p ? Symbol : o,\n                \"%SyntaxError%\": n,\n                \"%ThrowTypeError%\": f,\n                \"%TypedArray%\": l,\n                \"%TypeError%\": a,\n                \"%Uint8Array%\": typeof Uint8Array === \"undefined\" ? o : Uint8Array,\n                \"%Uint8ClampedArray%\": typeof Uint8ClampedArray === \"undefined\" ? o : Uint8ClampedArray,\n                \"%Uint16Array%\": typeof Uint16Array === \"undefined\" ? o : Uint16Array,\n                \"%Uint32Array%\": typeof Uint32Array === \"undefined\" ? o : Uint32Array,\n                \"%URIError%\": URIError,\n                \"%WeakMap%\": typeof WeakMap === \"undefined\" ? o : WeakMap,\n                \"%WeakRef%\": typeof WeakRef === \"undefined\" ? o : WeakRef,\n                \"%WeakSet%\": typeof WeakSet === \"undefined\" ? o : WeakSet\n            };\n            if (s) {\n                try {\n                    null.error;\n                } catch (r) {\n                    var g = s(s(r));\n                    d[\"%Error.prototype%\"] = g;\n                }\n            }\n            var v = function doEval(r) {\n                var e;\n                if (r === \"%AsyncFunction%\") {\n                    e = getEvalledConstructor(\"async function () {}\");\n                } else if (r === \"%GeneratorFunction%\") {\n                    e = getEvalledConstructor(\"function* () {}\");\n                } else if (r === \"%AsyncGeneratorFunction%\") {\n                    e = getEvalledConstructor(\"async function* () {}\");\n                } else if (r === \"%AsyncGenerator%\") {\n                    var t = doEval(\"%AsyncGeneratorFunction%\");\n                    if (t) {\n                        e = t.prototype;\n                    }\n                } else if (r === \"%AsyncIteratorPrototype%\") {\n                    var o = doEval(\"%AsyncGenerator%\");\n                    if (o && s) {\n                        e = s(o.prototype);\n                    }\n                }\n                d[r] = e;\n                return e;\n            };\n            var b = {\n                \"%ArrayBufferPrototype%\": [\n                    \"ArrayBuffer\",\n                    \"prototype\"\n                ],\n                \"%ArrayPrototype%\": [\n                    \"Array\",\n                    \"prototype\"\n                ],\n                \"%ArrayProto_entries%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"entries\"\n                ],\n                \"%ArrayProto_forEach%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"forEach\"\n                ],\n                \"%ArrayProto_keys%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"keys\"\n                ],\n                \"%ArrayProto_values%\": [\n                    \"Array\",\n                    \"prototype\",\n                    \"values\"\n                ],\n                \"%AsyncFunctionPrototype%\": [\n                    \"AsyncFunction\",\n                    \"prototype\"\n                ],\n                \"%AsyncGenerator%\": [\n                    \"AsyncGeneratorFunction\",\n                    \"prototype\"\n                ],\n                \"%AsyncGeneratorPrototype%\": [\n                    \"AsyncGeneratorFunction\",\n                    \"prototype\",\n                    \"prototype\"\n                ],\n                \"%BooleanPrototype%\": [\n                    \"Boolean\",\n                    \"prototype\"\n                ],\n                \"%DataViewPrototype%\": [\n                    \"DataView\",\n                    \"prototype\"\n                ],\n                \"%DatePrototype%\": [\n                    \"Date\",\n                    \"prototype\"\n                ],\n                \"%ErrorPrototype%\": [\n                    \"Error\",\n                    \"prototype\"\n                ],\n                \"%EvalErrorPrototype%\": [\n                    \"EvalError\",\n                    \"prototype\"\n                ],\n                \"%Float32ArrayPrototype%\": [\n                    \"Float32Array\",\n                    \"prototype\"\n                ],\n                \"%Float64ArrayPrototype%\": [\n                    \"Float64Array\",\n                    \"prototype\"\n                ],\n                \"%FunctionPrototype%\": [\n                    \"Function\",\n                    \"prototype\"\n                ],\n                \"%Generator%\": [\n                    \"GeneratorFunction\",\n                    \"prototype\"\n                ],\n                \"%GeneratorPrototype%\": [\n                    \"GeneratorFunction\",\n                    \"prototype\",\n                    \"prototype\"\n                ],\n                \"%Int8ArrayPrototype%\": [\n                    \"Int8Array\",\n                    \"prototype\"\n                ],\n                \"%Int16ArrayPrototype%\": [\n                    \"Int16Array\",\n                    \"prototype\"\n                ],\n                \"%Int32ArrayPrototype%\": [\n                    \"Int32Array\",\n                    \"prototype\"\n                ],\n                \"%JSONParse%\": [\n                    \"JSON\",\n                    \"parse\"\n                ],\n                \"%JSONStringify%\": [\n                    \"JSON\",\n                    \"stringify\"\n                ],\n                \"%MapPrototype%\": [\n                    \"Map\",\n                    \"prototype\"\n                ],\n                \"%NumberPrototype%\": [\n                    \"Number\",\n                    \"prototype\"\n                ],\n                \"%ObjectPrototype%\": [\n                    \"Object\",\n                    \"prototype\"\n                ],\n                \"%ObjProto_toString%\": [\n                    \"Object\",\n                    \"prototype\",\n                    \"toString\"\n                ],\n                \"%ObjProto_valueOf%\": [\n                    \"Object\",\n                    \"prototype\",\n                    \"valueOf\"\n                ],\n                \"%PromisePrototype%\": [\n                    \"Promise\",\n                    \"prototype\"\n                ],\n                \"%PromiseProto_then%\": [\n                    \"Promise\",\n                    \"prototype\",\n                    \"then\"\n                ],\n                \"%Promise_all%\": [\n                    \"Promise\",\n                    \"all\"\n                ],\n                \"%Promise_reject%\": [\n                    \"Promise\",\n                    \"reject\"\n                ],\n                \"%Promise_resolve%\": [\n                    \"Promise\",\n                    \"resolve\"\n                ],\n                \"%RangeErrorPrototype%\": [\n                    \"RangeError\",\n                    \"prototype\"\n                ],\n                \"%ReferenceErrorPrototype%\": [\n                    \"ReferenceError\",\n                    \"prototype\"\n                ],\n                \"%RegExpPrototype%\": [\n                    \"RegExp\",\n                    \"prototype\"\n                ],\n                \"%SetPrototype%\": [\n                    \"Set\",\n                    \"prototype\"\n                ],\n                \"%SharedArrayBufferPrototype%\": [\n                    \"SharedArrayBuffer\",\n                    \"prototype\"\n                ],\n                \"%StringPrototype%\": [\n                    \"String\",\n                    \"prototype\"\n                ],\n                \"%SymbolPrototype%\": [\n                    \"Symbol\",\n                    \"prototype\"\n                ],\n                \"%SyntaxErrorPrototype%\": [\n                    \"SyntaxError\",\n                    \"prototype\"\n                ],\n                \"%TypedArrayPrototype%\": [\n                    \"TypedArray\",\n                    \"prototype\"\n                ],\n                \"%TypeErrorPrototype%\": [\n                    \"TypeError\",\n                    \"prototype\"\n                ],\n                \"%Uint8ArrayPrototype%\": [\n                    \"Uint8Array\",\n                    \"prototype\"\n                ],\n                \"%Uint8ClampedArrayPrototype%\": [\n                    \"Uint8ClampedArray\",\n                    \"prototype\"\n                ],\n                \"%Uint16ArrayPrototype%\": [\n                    \"Uint16Array\",\n                    \"prototype\"\n                ],\n                \"%Uint32ArrayPrototype%\": [\n                    \"Uint32Array\",\n                    \"prototype\"\n                ],\n                \"%URIErrorPrototype%\": [\n                    \"URIError\",\n                    \"prototype\"\n                ],\n                \"%WeakMapPrototype%\": [\n                    \"WeakMap\",\n                    \"prototype\"\n                ],\n                \"%WeakSetPrototype%\": [\n                    \"WeakSet\",\n                    \"prototype\"\n                ]\n            };\n            var A = t(174);\n            var m = t(101);\n            var S = A.call(Function.call, Array.prototype.concat);\n            var h = A.call(Function.apply, Array.prototype.splice);\n            var P = A.call(Function.call, String.prototype.replace);\n            var O = A.call(Function.call, String.prototype.slice);\n            var w = A.call(Function.call, RegExp.prototype.exec);\n            var j = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\n            var E = /\\\\(\\\\)?/g;\n            var I = function stringToPath(r) {\n                var e = O(r, 0, 1);\n                var t = O(r, -1);\n                if (e === \"%\" && t !== \"%\") {\n                    throw new n(\"invalid intrinsic syntax, expected closing `%`\");\n                } else if (t === \"%\" && e !== \"%\") {\n                    throw new n(\"invalid intrinsic syntax, expected opening `%`\");\n                }\n                var o = [];\n                P(r, j, function(r, e, t, n) {\n                    o[o.length] = t ? P(n, E, \"$1\") : e || r;\n                });\n                return o;\n            };\n            var B = function getBaseIntrinsic(r, e) {\n                var t = r;\n                var o;\n                if (m(b, t)) {\n                    o = b[t];\n                    t = \"%\" + o[0] + \"%\";\n                }\n                if (m(d, t)) {\n                    var i = d[t];\n                    if (i === c) {\n                        i = v(t);\n                    }\n                    if (typeof i === \"undefined\" && !e) {\n                        throw new a(\"intrinsic \" + r + \" exists, but is not available. Please file an issue!\");\n                    }\n                    return {\n                        alias: o,\n                        name: t,\n                        value: i\n                    };\n                }\n                throw new n(\"intrinsic \" + r + \" does not exist!\");\n            };\n            r.exports = function GetIntrinsic(r, e) {\n                if (typeof r !== \"string\" || r.length === 0) {\n                    throw new a(\"intrinsic name must be a non-empty string\");\n                }\n                if (arguments.length > 1 && typeof e !== \"boolean\") {\n                    throw new a('\"allowMissing\" argument must be a boolean');\n                }\n                if (w(/^%?[^%]*%?$/, r) === null) {\n                    throw new n(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");\n                }\n                var t = I(r);\n                var i = t.length > 0 ? t[0] : \"\";\n                var f = B(\"%\" + i + \"%\", e);\n                var p = f.name;\n                var u = f.value;\n                var s = false;\n                var c = f.alias;\n                if (c) {\n                    i = c[0];\n                    h(t, S([\n                        0,\n                        1\n                    ], c));\n                }\n                for(var l = 1, g = true; l < t.length; l += 1){\n                    var v = t[l];\n                    var b = O(v, 0, 1);\n                    var A = O(v, -1);\n                    if ((b === '\"' || b === \"'\" || b === \"`\" || A === '\"' || A === \"'\" || A === \"`\") && b !== A) {\n                        throw new n(\"property names with quotes must have matching quotes\");\n                    }\n                    if (v === \"constructor\" || !g) {\n                        s = true;\n                    }\n                    i += \".\" + v;\n                    p = \"%\" + i + \"%\";\n                    if (m(d, p)) {\n                        u = d[p];\n                    } else if (u != null) {\n                        if (!(v in u)) {\n                            if (!e) {\n                                throw new a(\"base intrinsic for \" + r + \" exists, but the property is not available.\");\n                            }\n                            return void o;\n                        }\n                        if (y && l + 1 >= t.length) {\n                            var P = y(u, v);\n                            g = !!P;\n                            if (g && \"get\" in P && !(\"originalValue\" in P.get)) {\n                                u = P.get;\n                            } else {\n                                u = u[v];\n                            }\n                        } else {\n                            g = m(u, v);\n                            u = u[v];\n                        }\n                        if (g && !s) {\n                            d[p] = u;\n                        }\n                    }\n                }\n                return u;\n            };\n        },\n        504: function(r) {\n            \"use strict\";\n            var e = {\n                foo: {}\n            };\n            var t = Object;\n            r.exports = function hasProto() {\n                return ({\n                    __proto__: e\n                }).foo === e.foo && !(({\n                    __proto__: null\n                }) instanceof t);\n            };\n        },\n        942: function(r, e, t) {\n            \"use strict\";\n            var o = typeof Symbol !== \"undefined\" && Symbol;\n            var n = t(773);\n            r.exports = function hasNativeSymbols() {\n                if (typeof o !== \"function\") {\n                    return false;\n                }\n                if (typeof Symbol !== \"function\") {\n                    return false;\n                }\n                if (typeof o(\"foo\") !== \"symbol\") {\n                    return false;\n                }\n                if (typeof Symbol(\"bar\") !== \"symbol\") {\n                    return false;\n                }\n                return n();\n            };\n        },\n        773: function(r) {\n            \"use strict\";\n            r.exports = function hasSymbols() {\n                if (typeof Symbol !== \"function\" || typeof Object.getOwnPropertySymbols !== \"function\") {\n                    return false;\n                }\n                if (typeof Symbol.iterator === \"symbol\") {\n                    return true;\n                }\n                var r = {};\n                var e = Symbol(\"test\");\n                var t = Object(e);\n                if (typeof e === \"string\") {\n                    return false;\n                }\n                if (Object.prototype.toString.call(e) !== \"[object Symbol]\") {\n                    return false;\n                }\n                if (Object.prototype.toString.call(t) !== \"[object Symbol]\") {\n                    return false;\n                }\n                var o = 42;\n                r[e] = o;\n                for(e in r){\n                    return false;\n                }\n                if (typeof Object.keys === \"function\" && Object.keys(r).length !== 0) {\n                    return false;\n                }\n                if (typeof Object.getOwnPropertyNames === \"function\" && Object.getOwnPropertyNames(r).length !== 0) {\n                    return false;\n                }\n                var n = Object.getOwnPropertySymbols(r);\n                if (n.length !== 1 || n[0] !== e) {\n                    return false;\n                }\n                if (!Object.prototype.propertyIsEnumerable.call(r, e)) {\n                    return false;\n                }\n                if (typeof Object.getOwnPropertyDescriptor === \"function\") {\n                    var i = Object.getOwnPropertyDescriptor(r, e);\n                    if (i.value !== o || i.enumerable !== true) {\n                        return false;\n                    }\n                }\n                return true;\n            };\n        },\n        115: function(r, e, t) {\n            \"use strict\";\n            var o = typeof Symbol !== \"undefined\" && Symbol;\n            var n = t(832);\n            r.exports = function hasNativeSymbols() {\n                if (typeof o !== \"function\") {\n                    return false;\n                }\n                if (typeof Symbol !== \"function\") {\n                    return false;\n                }\n                if (typeof o(\"foo\") !== \"symbol\") {\n                    return false;\n                }\n                if (typeof Symbol(\"bar\") !== \"symbol\") {\n                    return false;\n                }\n                return n();\n            };\n        },\n        832: function(r) {\n            \"use strict\";\n            r.exports = function hasSymbols() {\n                if (typeof Symbol !== \"function\" || typeof Object.getOwnPropertySymbols !== \"function\") {\n                    return false;\n                }\n                if (typeof Symbol.iterator === \"symbol\") {\n                    return true;\n                }\n                var r = {};\n                var e = Symbol(\"test\");\n                var t = Object(e);\n                if (typeof e === \"string\") {\n                    return false;\n                }\n                if (Object.prototype.toString.call(e) !== \"[object Symbol]\") {\n                    return false;\n                }\n                if (Object.prototype.toString.call(t) !== \"[object Symbol]\") {\n                    return false;\n                }\n                var o = 42;\n                r[e] = o;\n                for(e in r){\n                    return false;\n                }\n                if (typeof Object.keys === \"function\" && Object.keys(r).length !== 0) {\n                    return false;\n                }\n                if (typeof Object.getOwnPropertyNames === \"function\" && Object.getOwnPropertyNames(r).length !== 0) {\n                    return false;\n                }\n                var n = Object.getOwnPropertySymbols(r);\n                if (n.length !== 1 || n[0] !== e) {\n                    return false;\n                }\n                if (!Object.prototype.propertyIsEnumerable.call(r, e)) {\n                    return false;\n                }\n                if (typeof Object.getOwnPropertyDescriptor === \"function\") {\n                    var i = Object.getOwnPropertyDescriptor(r, e);\n                    if (i.value !== o || i.enumerable !== true) {\n                        return false;\n                    }\n                }\n                return true;\n            };\n        },\n        101: function(r, e, t) {\n            \"use strict\";\n            var o = t(174);\n            r.exports = o.call(Function.call, Object.prototype.hasOwnProperty);\n        },\n        782: function(r) {\n            if (typeof Object.create === \"function\") {\n                r.exports = function inherits(r, e) {\n                    if (e) {\n                        r.super_ = e;\n                        r.prototype = Object.create(e.prototype, {\n                            constructor: {\n                                value: r,\n                                enumerable: false,\n                                writable: true,\n                                configurable: true\n                            }\n                        });\n                    }\n                };\n            } else {\n                r.exports = function inherits(r, e) {\n                    if (e) {\n                        r.super_ = e;\n                        var TempCtor = function() {};\n                        TempCtor.prototype = e.prototype;\n                        r.prototype = new TempCtor;\n                        r.prototype.constructor = r;\n                    }\n                };\n            }\n        },\n        157: function(r) {\n            \"use strict\";\n            var e = typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\";\n            var t = Object.prototype.toString;\n            var o = function isArguments(r) {\n                if (e && r && typeof r === \"object\" && Symbol.toStringTag in r) {\n                    return false;\n                }\n                return t.call(r) === \"[object Arguments]\";\n            };\n            var n = function isArguments(r) {\n                if (o(r)) {\n                    return true;\n                }\n                return r !== null && typeof r === \"object\" && typeof r.length === \"number\" && r.length >= 0 && t.call(r) !== \"[object Array]\" && t.call(r.callee) === \"[object Function]\";\n            };\n            var i = function() {\n                return o(arguments);\n            }();\n            o.isLegacyArguments = n;\n            r.exports = i ? o : n;\n        },\n        391: function(r) {\n            \"use strict\";\n            var e = Object.prototype.toString;\n            var t = Function.prototype.toString;\n            var o = /^\\s*(?:function)?\\*/;\n            var n = typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\";\n            var i = Object.getPrototypeOf;\n            var getGeneratorFunc = function() {\n                if (!n) {\n                    return false;\n                }\n                try {\n                    return Function(\"return function*() {}\")();\n                } catch (r) {}\n            };\n            var a = getGeneratorFunc();\n            var y = a ? i(a) : {};\n            r.exports = function isGeneratorFunction(r) {\n                if (typeof r !== \"function\") {\n                    return false;\n                }\n                if (o.test(t.call(r))) {\n                    return true;\n                }\n                if (!n) {\n                    var a = e.call(r);\n                    return a === \"[object GeneratorFunction]\";\n                }\n                return i(r) === y;\n            };\n        },\n        994: function(r, e, t) {\n            \"use strict\";\n            var o = t(144);\n            var n = t(349);\n            var i = t(256);\n            var a = i(\"Object.prototype.toString\");\n            var y = t(942)();\n            var f = y && typeof Symbol.toStringTag === \"symbol\";\n            var p = n();\n            var u = i(\"Array.prototype.indexOf\", true) || function indexOf(r, e) {\n                for(var t = 0; t < r.length; t += 1){\n                    if (r[t] === e) {\n                        return t;\n                    }\n                }\n                return -1;\n            };\n            var s = i(\"String.prototype.slice\");\n            var c = {};\n            var l = t(24);\n            var d = Object.getPrototypeOf;\n            if (f && l && d) {\n                o(p, function(r) {\n                    var e = new __webpack_require__.g[r];\n                    if (!(Symbol.toStringTag in e)) {\n                        throw new EvalError(\"this engine has support for Symbol.toStringTag, but \" + r + \" does not have the property! Please report this.\");\n                    }\n                    var t = d(e);\n                    var o = l(t, Symbol.toStringTag);\n                    if (!o) {\n                        var n = d(t);\n                        o = l(n, Symbol.toStringTag);\n                    }\n                    c[r] = o.get;\n                });\n            }\n            var g = function tryAllTypedArrays(r) {\n                var e = false;\n                o(c, function(t, o) {\n                    if (!e) {\n                        try {\n                            e = t.call(r) === o;\n                        } catch (r) {}\n                    }\n                });\n                return e;\n            };\n            r.exports = function isTypedArray(r) {\n                if (!r || typeof r !== \"object\") {\n                    return false;\n                }\n                if (!f) {\n                    var e = s(a(r), 8, -1);\n                    return u(p, e) > -1;\n                }\n                if (!l) {\n                    return false;\n                }\n                return g(r);\n            };\n        },\n        369: function(r) {\n            r.exports = function isBuffer(r) {\n                return r instanceof Buffer;\n            };\n        },\n        584: function(r, e, t) {\n            \"use strict\";\n            var o = t(157);\n            var n = t(391);\n            var i = t(490);\n            var a = t(994);\n            function uncurryThis(r) {\n                return r.call.bind(r);\n            }\n            var y = typeof BigInt !== \"undefined\";\n            var f = typeof Symbol !== \"undefined\";\n            var p = uncurryThis(Object.prototype.toString);\n            var u = uncurryThis(Number.prototype.valueOf);\n            var s = uncurryThis(String.prototype.valueOf);\n            var c = uncurryThis(Boolean.prototype.valueOf);\n            if (y) {\n                var l = uncurryThis(BigInt.prototype.valueOf);\n            }\n            if (f) {\n                var d = uncurryThis(Symbol.prototype.valueOf);\n            }\n            function checkBoxedPrimitive(r, e) {\n                if (typeof r !== \"object\") {\n                    return false;\n                }\n                try {\n                    e(r);\n                    return true;\n                } catch (r) {\n                    return false;\n                }\n            }\n            e.isArgumentsObject = o;\n            e.isGeneratorFunction = n;\n            e.isTypedArray = a;\n            function isPromise(r) {\n                return typeof Promise !== \"undefined\" && r instanceof Promise || r !== null && typeof r === \"object\" && typeof r.then === \"function\" && typeof r.catch === \"function\";\n            }\n            e.isPromise = isPromise;\n            function isArrayBufferView(r) {\n                if (typeof ArrayBuffer !== \"undefined\" && ArrayBuffer.isView) {\n                    return ArrayBuffer.isView(r);\n                }\n                return a(r) || isDataView(r);\n            }\n            e.isArrayBufferView = isArrayBufferView;\n            function isUint8Array(r) {\n                return i(r) === \"Uint8Array\";\n            }\n            e.isUint8Array = isUint8Array;\n            function isUint8ClampedArray(r) {\n                return i(r) === \"Uint8ClampedArray\";\n            }\n            e.isUint8ClampedArray = isUint8ClampedArray;\n            function isUint16Array(r) {\n                return i(r) === \"Uint16Array\";\n            }\n            e.isUint16Array = isUint16Array;\n            function isUint32Array(r) {\n                return i(r) === \"Uint32Array\";\n            }\n            e.isUint32Array = isUint32Array;\n            function isInt8Array(r) {\n                return i(r) === \"Int8Array\";\n            }\n            e.isInt8Array = isInt8Array;\n            function isInt16Array(r) {\n                return i(r) === \"Int16Array\";\n            }\n            e.isInt16Array = isInt16Array;\n            function isInt32Array(r) {\n                return i(r) === \"Int32Array\";\n            }\n            e.isInt32Array = isInt32Array;\n            function isFloat32Array(r) {\n                return i(r) === \"Float32Array\";\n            }\n            e.isFloat32Array = isFloat32Array;\n            function isFloat64Array(r) {\n                return i(r) === \"Float64Array\";\n            }\n            e.isFloat64Array = isFloat64Array;\n            function isBigInt64Array(r) {\n                return i(r) === \"BigInt64Array\";\n            }\n            e.isBigInt64Array = isBigInt64Array;\n            function isBigUint64Array(r) {\n                return i(r) === \"BigUint64Array\";\n            }\n            e.isBigUint64Array = isBigUint64Array;\n            function isMapToString(r) {\n                return p(r) === \"[object Map]\";\n            }\n            isMapToString.working = typeof Map !== \"undefined\" && isMapToString(new Map);\n            function isMap(r) {\n                if (typeof Map === \"undefined\") {\n                    return false;\n                }\n                return isMapToString.working ? isMapToString(r) : r instanceof Map;\n            }\n            e.isMap = isMap;\n            function isSetToString(r) {\n                return p(r) === \"[object Set]\";\n            }\n            isSetToString.working = typeof Set !== \"undefined\" && isSetToString(new Set);\n            function isSet(r) {\n                if (typeof Set === \"undefined\") {\n                    return false;\n                }\n                return isSetToString.working ? isSetToString(r) : r instanceof Set;\n            }\n            e.isSet = isSet;\n            function isWeakMapToString(r) {\n                return p(r) === \"[object WeakMap]\";\n            }\n            isWeakMapToString.working = typeof WeakMap !== \"undefined\" && isWeakMapToString(new WeakMap);\n            function isWeakMap(r) {\n                if (typeof WeakMap === \"undefined\") {\n                    return false;\n                }\n                return isWeakMapToString.working ? isWeakMapToString(r) : r instanceof WeakMap;\n            }\n            e.isWeakMap = isWeakMap;\n            function isWeakSetToString(r) {\n                return p(r) === \"[object WeakSet]\";\n            }\n            isWeakSetToString.working = typeof WeakSet !== \"undefined\" && isWeakSetToString(new WeakSet);\n            function isWeakSet(r) {\n                return isWeakSetToString(r);\n            }\n            e.isWeakSet = isWeakSet;\n            function isArrayBufferToString(r) {\n                return p(r) === \"[object ArrayBuffer]\";\n            }\n            isArrayBufferToString.working = typeof ArrayBuffer !== \"undefined\" && isArrayBufferToString(new ArrayBuffer);\n            function isArrayBuffer(r) {\n                if (typeof ArrayBuffer === \"undefined\") {\n                    return false;\n                }\n                return isArrayBufferToString.working ? isArrayBufferToString(r) : r instanceof ArrayBuffer;\n            }\n            e.isArrayBuffer = isArrayBuffer;\n            function isDataViewToString(r) {\n                return p(r) === \"[object DataView]\";\n            }\n            isDataViewToString.working = typeof ArrayBuffer !== \"undefined\" && typeof DataView !== \"undefined\" && isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1));\n            function isDataView(r) {\n                if (typeof DataView === \"undefined\") {\n                    return false;\n                }\n                return isDataViewToString.working ? isDataViewToString(r) : r instanceof DataView;\n            }\n            e.isDataView = isDataView;\n            var g = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : undefined;\n            function isSharedArrayBufferToString(r) {\n                return p(r) === \"[object SharedArrayBuffer]\";\n            }\n            function isSharedArrayBuffer(r) {\n                if (typeof g === \"undefined\") {\n                    return false;\n                }\n                if (typeof isSharedArrayBufferToString.working === \"undefined\") {\n                    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new g);\n                }\n                return isSharedArrayBufferToString.working ? isSharedArrayBufferToString(r) : r instanceof g;\n            }\n            e.isSharedArrayBuffer = isSharedArrayBuffer;\n            function isAsyncFunction(r) {\n                return p(r) === \"[object AsyncFunction]\";\n            }\n            e.isAsyncFunction = isAsyncFunction;\n            function isMapIterator(r) {\n                return p(r) === \"[object Map Iterator]\";\n            }\n            e.isMapIterator = isMapIterator;\n            function isSetIterator(r) {\n                return p(r) === \"[object Set Iterator]\";\n            }\n            e.isSetIterator = isSetIterator;\n            function isGeneratorObject(r) {\n                return p(r) === \"[object Generator]\";\n            }\n            e.isGeneratorObject = isGeneratorObject;\n            function isWebAssemblyCompiledModule(r) {\n                return p(r) === \"[object WebAssembly.Module]\";\n            }\n            e.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n            function isNumberObject(r) {\n                return checkBoxedPrimitive(r, u);\n            }\n            e.isNumberObject = isNumberObject;\n            function isStringObject(r) {\n                return checkBoxedPrimitive(r, s);\n            }\n            e.isStringObject = isStringObject;\n            function isBooleanObject(r) {\n                return checkBoxedPrimitive(r, c);\n            }\n            e.isBooleanObject = isBooleanObject;\n            function isBigIntObject(r) {\n                return y && checkBoxedPrimitive(r, l);\n            }\n            e.isBigIntObject = isBigIntObject;\n            function isSymbolObject(r) {\n                return f && checkBoxedPrimitive(r, d);\n            }\n            e.isSymbolObject = isSymbolObject;\n            function isBoxedPrimitive(r) {\n                return isNumberObject(r) || isStringObject(r) || isBooleanObject(r) || isBigIntObject(r) || isSymbolObject(r);\n            }\n            e.isBoxedPrimitive = isBoxedPrimitive;\n            function isAnyArrayBuffer(r) {\n                return typeof Uint8Array !== \"undefined\" && (isArrayBuffer(r) || isSharedArrayBuffer(r));\n            }\n            e.isAnyArrayBuffer = isAnyArrayBuffer;\n            [\n                \"isProxy\",\n                \"isExternal\",\n                \"isModuleNamespaceObject\"\n            ].forEach(function(r) {\n                Object.defineProperty(e, r, {\n                    enumerable: false,\n                    value: function() {\n                        throw new Error(r + \" is not supported in userland\");\n                    }\n                });\n            });\n        },\n        177: function(r, e, t) {\n            var o = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(r) {\n                var e = Object.keys(r);\n                var t = {};\n                for(var o = 0; o < e.length; o++){\n                    t[e[o]] = Object.getOwnPropertyDescriptor(r, e[o]);\n                }\n                return t;\n            };\n            var n = /%[sdj%]/g;\n            e.format = function(r) {\n                if (!isString(r)) {\n                    var e = [];\n                    for(var t = 0; t < arguments.length; t++){\n                        e.push(inspect(arguments[t]));\n                    }\n                    return e.join(\" \");\n                }\n                var t = 1;\n                var o = arguments;\n                var i = o.length;\n                var a = String(r).replace(n, function(r) {\n                    if (r === \"%%\") return \"%\";\n                    if (t >= i) return r;\n                    switch(r){\n                        case \"%s\":\n                            return String(o[t++]);\n                        case \"%d\":\n                            return Number(o[t++]);\n                        case \"%j\":\n                            try {\n                                return JSON.stringify(o[t++]);\n                            } catch (r) {\n                                return \"[Circular]\";\n                            }\n                        default:\n                            return r;\n                    }\n                });\n                for(var y = o[t]; t < i; y = o[++t]){\n                    if (isNull(y) || !isObject(y)) {\n                        a += \" \" + y;\n                    } else {\n                        a += \" \" + inspect(y);\n                    }\n                }\n                return a;\n            };\n            e.deprecate = function(r, t) {\n                if (typeof process !== \"undefined\" && process.noDeprecation === true) {\n                    return r;\n                }\n                if (typeof process === \"undefined\") {\n                    return function() {\n                        return e.deprecate(r, t).apply(this, arguments);\n                    };\n                }\n                var o = false;\n                function deprecated() {\n                    if (!o) {\n                        if (process.throwDeprecation) {\n                            throw new Error(t);\n                        } else if (process.traceDeprecation) {\n                            console.trace(t);\n                        } else {\n                            console.error(t);\n                        }\n                        o = true;\n                    }\n                    return r.apply(this, arguments);\n                }\n                return deprecated;\n            };\n            var i = {};\n            var a = /^$/;\n            if (process.env.NODE_DEBUG) {\n                var y = process.env.NODE_DEBUG;\n                y = y.replace(/[|\\\\{}()[\\]^$+?.]/g, \"\\\\$&\").replace(/\\*/g, \".*\").replace(/,/g, \"$|^\").toUpperCase();\n                a = new RegExp(\"^\" + y + \"$\", \"i\");\n            }\n            e.debuglog = function(r) {\n                r = r.toUpperCase();\n                if (!i[r]) {\n                    if (a.test(r)) {\n                        var t = process.pid;\n                        i[r] = function() {\n                            var o = e.format.apply(e, arguments);\n                            console.error(\"%s %d: %s\", r, t, o);\n                        };\n                    } else {\n                        i[r] = function() {};\n                    }\n                }\n                return i[r];\n            };\n            function inspect(r, t) {\n                var o = {\n                    seen: [],\n                    stylize: stylizeNoColor\n                };\n                if (arguments.length >= 3) o.depth = arguments[2];\n                if (arguments.length >= 4) o.colors = arguments[3];\n                if (isBoolean(t)) {\n                    o.showHidden = t;\n                } else if (t) {\n                    e._extend(o, t);\n                }\n                if (isUndefined(o.showHidden)) o.showHidden = false;\n                if (isUndefined(o.depth)) o.depth = 2;\n                if (isUndefined(o.colors)) o.colors = false;\n                if (isUndefined(o.customInspect)) o.customInspect = true;\n                if (o.colors) o.stylize = stylizeWithColor;\n                return formatValue(o, r, o.depth);\n            }\n            e.inspect = inspect;\n            inspect.colors = {\n                bold: [\n                    1,\n                    22\n                ],\n                italic: [\n                    3,\n                    23\n                ],\n                underline: [\n                    4,\n                    24\n                ],\n                inverse: [\n                    7,\n                    27\n                ],\n                white: [\n                    37,\n                    39\n                ],\n                grey: [\n                    90,\n                    39\n                ],\n                black: [\n                    30,\n                    39\n                ],\n                blue: [\n                    34,\n                    39\n                ],\n                cyan: [\n                    36,\n                    39\n                ],\n                green: [\n                    32,\n                    39\n                ],\n                magenta: [\n                    35,\n                    39\n                ],\n                red: [\n                    31,\n                    39\n                ],\n                yellow: [\n                    33,\n                    39\n                ]\n            };\n            inspect.styles = {\n                special: \"cyan\",\n                number: \"yellow\",\n                boolean: \"yellow\",\n                undefined: \"grey\",\n                null: \"bold\",\n                string: \"green\",\n                date: \"magenta\",\n                regexp: \"red\"\n            };\n            function stylizeWithColor(r, e) {\n                var t = inspect.styles[e];\n                if (t) {\n                    return \"\\x1b[\" + inspect.colors[t][0] + \"m\" + r + \"\\x1b[\" + inspect.colors[t][1] + \"m\";\n                } else {\n                    return r;\n                }\n            }\n            function stylizeNoColor(r, e) {\n                return r;\n            }\n            function arrayToHash(r) {\n                var e = {};\n                r.forEach(function(r, t) {\n                    e[r] = true;\n                });\n                return e;\n            }\n            function formatValue(r, t, o) {\n                if (r.customInspect && t && isFunction(t.inspect) && t.inspect !== e.inspect && !(t.constructor && t.constructor.prototype === t)) {\n                    var n = t.inspect(o, r);\n                    if (!isString(n)) {\n                        n = formatValue(r, n, o);\n                    }\n                    return n;\n                }\n                var i = formatPrimitive(r, t);\n                if (i) {\n                    return i;\n                }\n                var a = Object.keys(t);\n                var y = arrayToHash(a);\n                if (r.showHidden) {\n                    a = Object.getOwnPropertyNames(t);\n                }\n                if (isError(t) && (a.indexOf(\"message\") >= 0 || a.indexOf(\"description\") >= 0)) {\n                    return formatError(t);\n                }\n                if (a.length === 0) {\n                    if (isFunction(t)) {\n                        var f = t.name ? \": \" + t.name : \"\";\n                        return r.stylize(\"[Function\" + f + \"]\", \"special\");\n                    }\n                    if (isRegExp(t)) {\n                        return r.stylize(RegExp.prototype.toString.call(t), \"regexp\");\n                    }\n                    if (isDate(t)) {\n                        return r.stylize(Date.prototype.toString.call(t), \"date\");\n                    }\n                    if (isError(t)) {\n                        return formatError(t);\n                    }\n                }\n                var p = \"\", u = false, s = [\n                    \"{\",\n                    \"}\"\n                ];\n                if (isArray(t)) {\n                    u = true;\n                    s = [\n                        \"[\",\n                        \"]\"\n                    ];\n                }\n                if (isFunction(t)) {\n                    var c = t.name ? \": \" + t.name : \"\";\n                    p = \" [Function\" + c + \"]\";\n                }\n                if (isRegExp(t)) {\n                    p = \" \" + RegExp.prototype.toString.call(t);\n                }\n                if (isDate(t)) {\n                    p = \" \" + Date.prototype.toUTCString.call(t);\n                }\n                if (isError(t)) {\n                    p = \" \" + formatError(t);\n                }\n                if (a.length === 0 && (!u || t.length == 0)) {\n                    return s[0] + p + s[1];\n                }\n                if (o < 0) {\n                    if (isRegExp(t)) {\n                        return r.stylize(RegExp.prototype.toString.call(t), \"regexp\");\n                    } else {\n                        return r.stylize(\"[Object]\", \"special\");\n                    }\n                }\n                r.seen.push(t);\n                var l;\n                if (u) {\n                    l = formatArray(r, t, o, y, a);\n                } else {\n                    l = a.map(function(e) {\n                        return formatProperty(r, t, o, y, e, u);\n                    });\n                }\n                r.seen.pop();\n                return reduceToSingleString(l, p, s);\n            }\n            function formatPrimitive(r, e) {\n                if (isUndefined(e)) return r.stylize(\"undefined\", \"undefined\");\n                if (isString(e)) {\n                    var t = \"'\" + JSON.stringify(e).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + \"'\";\n                    return r.stylize(t, \"string\");\n                }\n                if (isNumber(e)) return r.stylize(\"\" + e, \"number\");\n                if (isBoolean(e)) return r.stylize(\"\" + e, \"boolean\");\n                if (isNull(e)) return r.stylize(\"null\", \"null\");\n            }\n            function formatError(r) {\n                return \"[\" + Error.prototype.toString.call(r) + \"]\";\n            }\n            function formatArray(r, e, t, o, n) {\n                var i = [];\n                for(var a = 0, y = e.length; a < y; ++a){\n                    if (hasOwnProperty(e, String(a))) {\n                        i.push(formatProperty(r, e, t, o, String(a), true));\n                    } else {\n                        i.push(\"\");\n                    }\n                }\n                n.forEach(function(n) {\n                    if (!n.match(/^\\d+$/)) {\n                        i.push(formatProperty(r, e, t, o, n, true));\n                    }\n                });\n                return i;\n            }\n            function formatProperty(r, e, t, o, n, i) {\n                var a, y, f;\n                f = Object.getOwnPropertyDescriptor(e, n) || {\n                    value: e[n]\n                };\n                if (f.get) {\n                    if (f.set) {\n                        y = r.stylize(\"[Getter/Setter]\", \"special\");\n                    } else {\n                        y = r.stylize(\"[Getter]\", \"special\");\n                    }\n                } else {\n                    if (f.set) {\n                        y = r.stylize(\"[Setter]\", \"special\");\n                    }\n                }\n                if (!hasOwnProperty(o, n)) {\n                    a = \"[\" + n + \"]\";\n                }\n                if (!y) {\n                    if (r.seen.indexOf(f.value) < 0) {\n                        if (isNull(t)) {\n                            y = formatValue(r, f.value, null);\n                        } else {\n                            y = formatValue(r, f.value, t - 1);\n                        }\n                        if (y.indexOf(\"\\n\") > -1) {\n                            if (i) {\n                                y = y.split(\"\\n\").map(function(r) {\n                                    return \"  \" + r;\n                                }).join(\"\\n\").substr(2);\n                            } else {\n                                y = \"\\n\" + y.split(\"\\n\").map(function(r) {\n                                    return \"   \" + r;\n                                }).join(\"\\n\");\n                            }\n                        }\n                    } else {\n                        y = r.stylize(\"[Circular]\", \"special\");\n                    }\n                }\n                if (isUndefined(a)) {\n                    if (i && n.match(/^\\d+$/)) {\n                        return y;\n                    }\n                    a = JSON.stringify(\"\" + n);\n                    if (a.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n                        a = a.substr(1, a.length - 2);\n                        a = r.stylize(a, \"name\");\n                    } else {\n                        a = a.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n                        a = r.stylize(a, \"string\");\n                    }\n                }\n                return a + \": \" + y;\n            }\n            function reduceToSingleString(r, e, t) {\n                var o = 0;\n                var n = r.reduce(function(r, e) {\n                    o++;\n                    if (e.indexOf(\"\\n\") >= 0) o++;\n                    return r + e.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1;\n                }, 0);\n                if (n > 60) {\n                    return t[0] + (e === \"\" ? \"\" : e + \"\\n \") + \" \" + r.join(\",\\n  \") + \" \" + t[1];\n                }\n                return t[0] + e + \" \" + r.join(\", \") + \" \" + t[1];\n            }\n            e.types = t(584);\n            function isArray(r) {\n                return Array.isArray(r);\n            }\n            e.isArray = isArray;\n            function isBoolean(r) {\n                return typeof r === \"boolean\";\n            }\n            e.isBoolean = isBoolean;\n            function isNull(r) {\n                return r === null;\n            }\n            e.isNull = isNull;\n            function isNullOrUndefined(r) {\n                return r == null;\n            }\n            e.isNullOrUndefined = isNullOrUndefined;\n            function isNumber(r) {\n                return typeof r === \"number\";\n            }\n            e.isNumber = isNumber;\n            function isString(r) {\n                return typeof r === \"string\";\n            }\n            e.isString = isString;\n            function isSymbol(r) {\n                return typeof r === \"symbol\";\n            }\n            e.isSymbol = isSymbol;\n            function isUndefined(r) {\n                return r === void 0;\n            }\n            e.isUndefined = isUndefined;\n            function isRegExp(r) {\n                return isObject(r) && objectToString(r) === \"[object RegExp]\";\n            }\n            e.isRegExp = isRegExp;\n            e.types.isRegExp = isRegExp;\n            function isObject(r) {\n                return typeof r === \"object\" && r !== null;\n            }\n            e.isObject = isObject;\n            function isDate(r) {\n                return isObject(r) && objectToString(r) === \"[object Date]\";\n            }\n            e.isDate = isDate;\n            e.types.isDate = isDate;\n            function isError(r) {\n                return isObject(r) && (objectToString(r) === \"[object Error]\" || r instanceof Error);\n            }\n            e.isError = isError;\n            e.types.isNativeError = isError;\n            function isFunction(r) {\n                return typeof r === \"function\";\n            }\n            e.isFunction = isFunction;\n            function isPrimitive(r) {\n                return r === null || typeof r === \"boolean\" || typeof r === \"number\" || typeof r === \"string\" || typeof r === \"symbol\" || typeof r === \"undefined\";\n            }\n            e.isPrimitive = isPrimitive;\n            e.isBuffer = t(369);\n            function objectToString(r) {\n                return Object.prototype.toString.call(r);\n            }\n            function pad(r) {\n                return r < 10 ? \"0\" + r.toString(10) : r.toString(10);\n            }\n            var f = [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n            ];\n            function timestamp() {\n                var r = new Date;\n                var e = [\n                    pad(r.getHours()),\n                    pad(r.getMinutes()),\n                    pad(r.getSeconds())\n                ].join(\":\");\n                return [\n                    r.getDate(),\n                    f[r.getMonth()],\n                    e\n                ].join(\" \");\n            }\n            e.log = function() {\n                console.log(\"%s - %s\", timestamp(), e.format.apply(e, arguments));\n            };\n            e.inherits = t(782);\n            e._extend = function(r, e) {\n                if (!e || !isObject(e)) return r;\n                var t = Object.keys(e);\n                var o = t.length;\n                while(o--){\n                    r[t[o]] = e[t[o]];\n                }\n                return r;\n            };\n            function hasOwnProperty(r, e) {\n                return Object.prototype.hasOwnProperty.call(r, e);\n            }\n            var p = typeof Symbol !== \"undefined\" ? Symbol(\"util.promisify.custom\") : undefined;\n            e.promisify = function promisify(r) {\n                if (typeof r !== \"function\") throw new TypeError('The \"original\" argument must be of type Function');\n                if (p && r[p]) {\n                    var e = r[p];\n                    if (typeof e !== \"function\") {\n                        throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n                    }\n                    Object.defineProperty(e, p, {\n                        value: e,\n                        enumerable: false,\n                        writable: false,\n                        configurable: true\n                    });\n                    return e;\n                }\n                function e() {\n                    var e, t;\n                    var o = new Promise(function(r, o) {\n                        e = r;\n                        t = o;\n                    });\n                    var n = [];\n                    for(var i = 0; i < arguments.length; i++){\n                        n.push(arguments[i]);\n                    }\n                    n.push(function(r, o) {\n                        if (r) {\n                            t(r);\n                        } else {\n                            e(o);\n                        }\n                    });\n                    try {\n                        r.apply(this, n);\n                    } catch (r) {\n                        t(r);\n                    }\n                    return o;\n                }\n                Object.setPrototypeOf(e, Object.getPrototypeOf(r));\n                if (p) Object.defineProperty(e, p, {\n                    value: e,\n                    enumerable: false,\n                    writable: false,\n                    configurable: true\n                });\n                return Object.defineProperties(e, o(r));\n            };\n            e.promisify.custom = p;\n            function callbackifyOnRejected(r, e) {\n                if (!r) {\n                    var t = new Error(\"Promise was rejected with a falsy value\");\n                    t.reason = r;\n                    r = t;\n                }\n                return e(r);\n            }\n            function callbackify(r) {\n                if (typeof r !== \"function\") {\n                    throw new TypeError('The \"original\" argument must be of type Function');\n                }\n                function callbackified() {\n                    var e = [];\n                    for(var t = 0; t < arguments.length; t++){\n                        e.push(arguments[t]);\n                    }\n                    var o = e.pop();\n                    if (typeof o !== \"function\") {\n                        throw new TypeError(\"The last argument must be of type Function\");\n                    }\n                    var n = this;\n                    var cb = function() {\n                        return o.apply(n, arguments);\n                    };\n                    r.apply(this, e).then(function(r) {\n                        process.nextTick(cb.bind(null, null, r));\n                    }, function(r) {\n                        process.nextTick(callbackifyOnRejected.bind(null, r, cb));\n                    });\n                }\n                Object.setPrototypeOf(callbackified, Object.getPrototypeOf(r));\n                Object.defineProperties(callbackified, o(r));\n                return callbackified;\n            }\n            e.callbackify = callbackify;\n        },\n        490: function(r, e, t) {\n            \"use strict\";\n            var o = t(144);\n            var n = t(349);\n            var i = t(256);\n            var a = i(\"Object.prototype.toString\");\n            var y = t(942)();\n            var f = y && typeof Symbol.toStringTag === \"symbol\";\n            var p = n();\n            var u = i(\"String.prototype.slice\");\n            var s = {};\n            var c = t(24);\n            var l = Object.getPrototypeOf;\n            if (f && c && l) {\n                o(p, function(r) {\n                    if (typeof __webpack_require__.g[r] === \"function\") {\n                        var e = new __webpack_require__.g[r];\n                        if (!(Symbol.toStringTag in e)) {\n                            throw new EvalError(\"this engine has support for Symbol.toStringTag, but \" + r + \" does not have the property! Please report this.\");\n                        }\n                        var t = l(e);\n                        var o = c(t, Symbol.toStringTag);\n                        if (!o) {\n                            var n = l(t);\n                            o = c(n, Symbol.toStringTag);\n                        }\n                        s[r] = o.get;\n                    }\n                });\n            }\n            var d = function tryAllTypedArrays(r) {\n                var e = false;\n                o(s, function(t, o) {\n                    if (!e) {\n                        try {\n                            var n = t.call(r);\n                            if (n === o) {\n                                e = n;\n                            }\n                        } catch (r) {}\n                    }\n                });\n                return e;\n            };\n            var g = t(994);\n            r.exports = function whichTypedArray(r) {\n                if (!g(r)) {\n                    return false;\n                }\n                if (!f) {\n                    return u(a(r), 8, -1);\n                }\n                return d(r);\n            };\n        },\n        349: function(r, e, t) {\n            \"use strict\";\n            var o = t(992);\n            r.exports = function availableTypedArrays() {\n                return o([\n                    \"BigInt64Array\",\n                    \"BigUint64Array\",\n                    \"Float32Array\",\n                    \"Float64Array\",\n                    \"Int16Array\",\n                    \"Int32Array\",\n                    \"Int8Array\",\n                    \"Uint16Array\",\n                    \"Uint32Array\",\n                    \"Uint8Array\",\n                    \"Uint8ClampedArray\"\n                ], function(r) {\n                    return typeof __webpack_require__.g[r] === \"function\";\n                });\n            };\n        },\n        24: function(r, e, t) {\n            \"use strict\";\n            var o = t(500);\n            var n = o(\"%Object.getOwnPropertyDescriptor%\", true);\n            if (n) {\n                try {\n                    n([], \"length\");\n                } catch (r) {\n                    n = null;\n                }\n            }\n            r.exports = n;\n        }\n    };\n    var e = {};\n    function __nccwpck_require__(t) {\n        var o = e[t];\n        if (o !== undefined) {\n            return o.exports;\n        }\n        var n = e[t] = {\n            exports: {}\n        };\n        var i = true;\n        try {\n            r[t](n, n.exports, __nccwpck_require__);\n            i = false;\n        } finally{\n            if (i) delete e[t];\n        }\n        return n.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var t = __nccwpck_require__(177);\n    module.exports = t;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/add-locale.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/client/add-locale.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addLocale\", ({\n    enumerable: true,\n    get: function() {\n        return addLocale;\n    }\n}));\nconst _normalizetrailingslash = __webpack_require__(/*! ./normalize-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst addLocale = function(path) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    if (false) {}\n    return path;\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1sb2NhbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLDBCQUEwQkMsbUJBQU9BLENBQUMsbUhBQTRCO0FBQ3BFLE1BQU1GLFlBQVksU0FBU0csSUFBSTtJQUMzQixJQUFJLElBQUlDLE9BQU9DLFVBQVVDLE1BQU0sRUFBRUMsT0FBTyxJQUFJQyxNQUFNSixPQUFPLElBQUlBLE9BQU8sSUFBSSxJQUFJSyxPQUFPLEdBQUdBLE9BQU9MLE1BQU1LLE9BQU87UUFDdEdGLElBQUksQ0FBQ0UsT0FBTyxFQUFFLEdBQUdKLFNBQVMsQ0FBQ0ksS0FBSztJQUNwQztJQUNBLElBQUlDLEtBQStCLEVBQUUsRUFFcEM7SUFDRCxPQUFPUDtBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU9QLFFBQVFrQixPQUFPLEtBQUssY0FBZSxPQUFPbEIsUUFBUWtCLE9BQU8sS0FBSyxZQUFZbEIsUUFBUWtCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2xCLFFBQVFrQixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLckIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRa0IsT0FBTyxFQUFFLGNBQWM7UUFBRWpCLE9BQU87SUFBSztJQUNuRUgsT0FBT3NCLE1BQU0sQ0FBQ3BCLFFBQVFrQixPQUFPLEVBQUVsQjtJQUMvQnFCLE9BQU9yQixPQUFPLEdBQUdBLFFBQVFrQixPQUFPO0FBQ2xDLEVBRUEsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1sb2NhbGUuanM/ZTJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFkZExvY2FsZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWRkTG9jYWxlO1xuICAgIH1cbn0pO1xuY29uc3QgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBhZGRMb2NhbGUgPSBmdW5jdGlvbihwYXRoKSB7XG4gICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKXtcbiAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiAoMCwgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2gubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2gpKHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlXCIpLmFkZExvY2FsZShwYXRoLCAuLi5hcmdzKSk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiYWRkTG9jYWxlIiwiX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2giLCJyZXF1aXJlIiwicGF0aCIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/add-locale.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getDomainLocale\", ({\n    enumerable: true,\n    get: function() {\n        return getDomainLocale;\n    }\n}));\nconst _normalizetrailingslash = __webpack_require__(/*! ./normalize-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2dldC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCxtREFBa0Q7SUFDOUNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQywwQkFBMEJDLG1CQUFPQSxDQUFDLG1IQUE0QjtBQUNwRSxNQUFNQyxXQUFXQyxNQUFrQyxJQUFJO0FBQ3ZELFNBQVNKLGdCQUFnQk8sSUFBSSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsYUFBYTtJQUN6RCxJQUFJTixLQUErQixFQUFFLEVBV3BDLE1BQU07UUFDSCxPQUFPO0lBQ1g7QUFDSjtBQUVBLElBQUksQ0FBQyxPQUFPUixRQUFRMkIsT0FBTyxLQUFLLGNBQWUsT0FBTzNCLFFBQVEyQixPQUFPLEtBQUssWUFBWTNCLFFBQVEyQixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU8zQixRQUFRMkIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNySzlCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUTJCLE9BQU8sRUFBRSxjQUFjO1FBQUUxQixPQUFPO0lBQUs7SUFDbkVILE9BQU8rQixNQUFNLENBQUM3QixRQUFRMkIsT0FBTyxFQUFFM0I7SUFDL0I4QixPQUFPOUIsT0FBTyxHQUFHQSxRQUFRMkIsT0FBTztBQUNsQyxFQUVBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcz81YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0RG9tYWluTG9jYWxlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXREb21haW5Mb2NhbGU7XG4gICAgfVxufSk7XG5jb25zdCBfbm9ybWFsaXpldHJhaWxpbmdzbGFzaCA9IHJlcXVpcmUoXCIuL25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaFwiKTtcbmNvbnN0IGJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCBcIlwiO1xuZnVuY3Rpb24gZ2V0RG9tYWluTG9jYWxlKHBhdGgsIGxvY2FsZSwgbG9jYWxlcywgZG9tYWluTG9jYWxlcykge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZUxvY2FsZVBhdGggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtbG9jYWxlLXBhdGhcIikubm9ybWFsaXplTG9jYWxlUGF0aDtcbiAgICAgICAgY29uc3QgZGV0ZWN0RG9tYWluTG9jYWxlID0gcmVxdWlyZShcIi4vZGV0ZWN0LWRvbWFpbi1sb2NhbGVcIikuZGV0ZWN0RG9tYWluTG9jYWxlO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBsb2NhbGUgfHwgbm9ybWFsaXplTG9jYWxlUGF0aChwYXRoLCBsb2NhbGVzKS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgY29uc3QgZG9tYWluID0gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgdGFyZ2V0KTtcbiAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgY29uc3QgcHJvdG8gPSBcImh0dHBcIiArIChkb21haW4uaHR0cCA/IFwiXCIgOiBcInNcIikgKyBcIjovL1wiO1xuICAgICAgICAgICAgY29uc3QgZmluYWxMb2NhbGUgPSB0YXJnZXQgPT09IGRvbWFpbi5kZWZhdWx0TG9jYWxlID8gXCJcIiA6IFwiL1wiICsgdGFyZ2V0O1xuICAgICAgICAgICAgcmV0dXJuIFwiXCIgKyBwcm90byArIGRvbWFpbi5kb21haW4gKyAoMCwgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2gubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2gpKFwiXCIgKyBiYXNlUGF0aCArIGZpbmFsTG9jYWxlICsgcGF0aCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJnZXREb21haW5Mb2NhbGUiLCJfbm9ybWFsaXpldHJhaWxpbmdzbGFzaCIsInJlcXVpcmUiLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwicGF0aCIsImxvY2FsZSIsImxvY2FsZXMiLCJkb21haW5Mb2NhbGVzIiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJ0YXJnZXQiLCJkZXRlY3RlZExvY2FsZSIsImRvbWFpbiIsInVuZGVmaW5lZCIsInByb3RvIiwiaHR0cCIsImZpbmFsTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/get-domain-locale.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/image-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/client/image-component.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Image\", ({\n    enumerable: true,\n    get: function() {\n        return Image;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _reactdom = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\"));\nconst _head = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../shared/lib/head */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js\"));\nconst _getimgprops = __webpack_require__(/*! ../shared/lib/get-img-props */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\");\nconst _imageconfig = __webpack_require__(/*! ../shared/lib/image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst _imageconfigcontextsharedruntime = __webpack_require__(/*! ../shared/lib/image-config-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js\");\nconst _warnonce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\"));\n// This is replaced by webpack define plugin\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]};\nif (false) {}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    const src = img == null ? void 0 : img.src;\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder !== \"empty\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current({\n                ...event,\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            });\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            const origSrc = new URL(src, \"http://n\").searchParams.get(\"url\") || src;\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                    }\n                }\n                if (img.parentElement) {\n                    const { position } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(\",\") + \".\");\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n            }\n        }\n    });\n}\nfunction getDynamicProps(fetchPriority) {\n    const [majorStr, minorStr] = _react.version.split(\".\", 2);\n    const major = parseInt(majorStr, 10);\n    const minor = parseInt(minorStr, 10);\n    if (major > 18 || major === 18 && minor >= 3) {\n        // In React 18.3.0 or newer, we must use camelCase\n        // prop to avoid \"Warning: Invalid DOM property\".\n        // See https://github.com/facebook/react/pull/25927\n        return {\n            fetchPriority\n        };\n    }\n    // In React 18.2.0 or older, we must use lowercase prop\n    // to avoid \"Warning: Invalid DOM property\".\n    return {\n        fetchpriority: fetchPriority\n    };\n}\nconst ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{\n    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, onLoad, onError, ...rest } = param;\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"img\", {\n        ...rest,\n        ...getDynamicProps(fetchPriority),\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading: loading,\n        width: width,\n        height: height,\n        decoding: decoding,\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        style: style,\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes: sizes,\n        srcSet: srcSet,\n        src: src,\n        ref: (0, _react.useCallback)((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!src) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            src,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder !== \"empty\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    });\n});\nfunction ImagePreload(param) {\n    let { isAppRouter, imgAttributes } = param;\n    const opts = {\n        as: \"image\",\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: imgAttributes.crossOrigin,\n        referrerPolicy: imgAttributes.referrerPolicy,\n        ...getDynamicProps(imgAttributes.fetchPriority)\n    };\n    if (isAppRouter && _reactdom.default.preload) {\n        // See https://github.com/facebook/react/pull/26940\n        _reactdom.default.preload(imgAttributes.src, opts);\n        return null;\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_head.default, {\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"link\", {\n            rel: \"preload\",\n            // Note how we omit the `href` attribute, as it would only be relevant\n            // for browsers that do not support `imagesrcset`, and in those cases\n            // it would cause the incorrect image to be preloaded.\n            //\n            // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n            href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n            ...opts\n        }, \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes)\n    });\n}\n_c = ImagePreload;\nconst Image = /*#__PURE__*/ (0, _react.forwardRef)((props, forwardedRef)=>{\n    const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);\n    const config = (0, _react.useMemo)(()=>{\n        const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }, [\n        configContext\n    ]);\n    const { onLoad, onLoadingComplete } = props;\n    const onLoadRef = (0, _react.useRef)(onLoad);\n    (0, _react.useEffect)(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n    (0, _react.useEffect)(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n    const [showAltText, setShowAltText] = (0, _react.useState)(false);\n    const { props: imgAttributes, meta: imgMeta } = (0, _getimgprops.getImgProps)(props, {\n        defaultLoader: _imageloader.default,\n        imgConf: config,\n        blurComplete,\n        showAltText\n    });\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(ImageElement, {\n                ...imgAttributes,\n                unoptimized: imgMeta.unoptimized,\n                placeholder: imgMeta.placeholder,\n                fill: imgMeta.fill,\n                onLoadRef: onLoadRef,\n                onLoadingCompleteRef: onLoadingCompleteRef,\n                setBlurComplete: setBlurComplete,\n                setShowAltText: setShowAltText,\n                ref: forwardedRef\n            }),\n            imgMeta.priority ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ImagePreload, {\n                isAppRouter: isAppRouter,\n                imgAttributes: imgAttributes\n            }) : null\n        ]\n    });\n});\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image-component.js.map\nvar _c;\n$RefreshReg$(_c, \"ImagePreload\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/image-component.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _resolvehref = __webpack_require__(/*! ./resolve-href */ \"(app-pages-browser)/./node_modules/next/dist/client/resolve-href.js\");\nconst _islocalurl = __webpack_require__(/*! ../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _formaturl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _utils = __webpack_require__(/*! ../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _addlocale = __webpack_require__(/*! ./add-locale */ \"(app-pages-browser)/./node_modules/next/dist/client/add-locale.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../shared/lib/app-router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js\");\nconst _useintersection = __webpack_require__(/*! ./use-intersection */ \"(app-pages-browser)/./node_modules/next/dist/client/use-intersection.js\");\nconst _getdomainlocale = __webpack_require__(/*! ./get-domain-locale */ \"(app-pages-browser)/./node_modules/next/dist/client/get-domain-locale.js\");\nconst _addbasepath = __webpack_require__(/*! ./add-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/add-base-path.js\");\nconst _routerreducertypes = __webpack_require__(/*! ./components/router-reducer/router-reducer-types */ \"(app-pages-browser)/./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options, appOptions, isAppRouter) {\n    if (false) {}\n    // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    if (!isAppRouter && !(0, _islocalurl.isLocalURL)(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    const prefetchPromise = isAppRouter ? router.prefetch(href, appOptions) : router.prefetch(href, as, options);\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(prefetchPromise).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute(\"target\");\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    !isAppRouter && !(0, _islocalurl.isLocalURL)(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        const routerScroll = scroll != null ? scroll : true;\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll: routerScroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                scroll: routerScroll\n            });\n        }\n    };\n    if (isAppRouter) {\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _s(_react.default.forwardRef(_c = _s(function LinkComponent(props, forwardedRef) {\n    _s();\n    let children;\n    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, locale, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            children: children\n        });\n    }\n    const pagesRouter = _react.default.useContext(_routercontextsharedruntime.RouterContext);\n    const appRouter = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    const prefetchEnabled = prefetchProp !== false;\n    /**\n     * The possible states for prefetch are:\n     * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n     * - false: we will not prefetch if in the viewport at all\n     */ const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n    if (true) {\n        function createPropError(args) {\n            return new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current && !isAppRouter) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\");\n                }\n            }\n        }\n    }\n    const { href, as } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _resolvehref.resolveHref)(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\");\n                }\n                throw new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0));\n            }\n        } else {}\n    } else {\n        if (true) {\n            if ((children == null ? void 0 : children.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        }, {\n            kind: appPrefetchKind\n        }, isAppRouter);\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router,\n        isAppRouter,\n        appPrefetchKind\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if ((!prefetchEnabled || \"development\" === \"development\") && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, {\n                kind: appPrefetchKind\n            }, isAppRouter);\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, {\n                kind: appPrefetchKind\n            }, isAppRouter);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n        ...restProps,\n        ...childProps,\n        children: children\n    });\n}, \"wKD5mb5mk47bkaStGb/Fvd6RWZE=\")), \"wKD5mb5mk47bkaStGb/Fvd6RWZE=\");\n_c1 = Link;\nconst _default = Link;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Link$_react.default.forwardRef\");\n$RefreshReg$(_c1, \"Link\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    requestIdleCallback: function() {\n        return requestIdleCallback;\n    },\n    cancelIdleCallback: function() {\n        return cancelIdleCallback;\n    }\n});\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return self.setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsY0FBYyxDQUFDTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcscUJBQXFCO1FBQ2pCLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ELHNCQUFzQixPQUFPUSxTQUFTLGVBQWVBLEtBQUtSLG1CQUFtQixJQUFJUSxLQUFLUixtQkFBbUIsQ0FBQ1MsSUFBSSxDQUFDQyxXQUFXLFNBQVNDLEVBQUU7SUFDdkksSUFBSUMsUUFBUUMsS0FBS0MsR0FBRztJQUNwQixPQUFPTixLQUFLTyxVQUFVLENBQUM7UUFDbkJKLEdBQUc7WUFDQ0ssWUFBWTtZQUNaQyxlQUFlO2dCQUNYLE9BQU9DLEtBQUtDLEdBQUcsQ0FBQyxHQUFHLEtBQU1OLENBQUFBLEtBQUtDLEdBQUcsS0FBS0YsS0FBSTtZQUM5QztRQUNKO0lBQ0osR0FBRztBQUNQO0FBQ0EsTUFBTVgscUJBQXFCLE9BQU9PLFNBQVMsZUFBZUEsS0FBS1Asa0JBQWtCLElBQUlPLEtBQUtQLGtCQUFrQixDQUFDUSxJQUFJLENBQUNDLFdBQVcsU0FBU1UsRUFBRTtJQUNwSSxPQUFPQyxhQUFhRDtBQUN4QjtBQUVBLElBQUksQ0FBQyxPQUFPdkIsUUFBUXlCLE9BQU8sS0FBSyxjQUFlLE9BQU96QixRQUFReUIsT0FBTyxLQUFLLFlBQVl6QixRQUFReUIsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPekIsUUFBUXlCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcks1QixPQUFPQyxjQUFjLENBQUNDLFFBQVF5QixPQUFPLEVBQUUsY0FBYztRQUFFeEIsT0FBTztJQUFLO0lBQ25FSCxPQUFPNkIsTUFBTSxDQUFDM0IsUUFBUXlCLE9BQU8sRUFBRXpCO0lBQy9CRSxPQUFPRixPQUFPLEdBQUdBLFFBQVF5QixPQUFPO0FBQ2xDLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcz8xZTIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgcmVxdWVzdElkbGVDYWxsYmFjazogbnVsbCxcbiAgICBjYW5jZWxJZGxlQ2FsbGJhY2s6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgcmVxdWVzdElkbGVDYWxsYmFjazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuICAgIH0sXG4gICAgY2FuY2VsSWRsZUNhbGxiYWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNhbmNlbElkbGVDYWxsYmFjaztcbiAgICB9XG59KTtcbmNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2sgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihjYikge1xuICAgIGxldCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgcmV0dXJuIHNlbGYuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2Ioe1xuICAgICAgICAgICAgZGlkVGltZW91dDogZmFsc2UsXG4gICAgICAgICAgICB0aW1lUmVtYWluaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEpO1xufTtcbmNvbnN0IGNhbmNlbElkbGVDYWxsYmFjayA9IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJzZWxmIiwiYmluZCIsIndpbmRvdyIsImNiIiwic3RhcnQiLCJEYXRlIiwibm93Iiwic2V0VGltZW91dCIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwiTWF0aCIsIm1heCIsImlkIiwiY2xlYXJUaW1lb3V0IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/request-idle-callback.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/resolve-href.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/resolve-href.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"resolveHref\", ({\n    enumerable: true,\n    get: function() {\n        return resolveHref;\n    }\n}));\nconst _querystring = __webpack_require__(/*! ../shared/lib/router/utils/querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\");\nconst _formaturl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _omit = __webpack_require__(/*! ../shared/lib/router/utils/omit */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/omit.js\");\nconst _utils = __webpack_require__(/*! ../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _normalizetrailingslash = __webpack_require__(/*! ./normalize-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst _islocalurl = __webpack_require__(/*! ../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _utils1 = __webpack_require__(/*! ../shared/lib/router/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/index.js\");\nconst _interpolateas = __webpack_require__(/*! ../shared/lib/router/utils/interpolate-as */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js\");\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formaturl.formatWithValidation)(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\", 1);\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(\"Invalid href '\" + urlAsString + \"' passed to next/router in page: '\" + router.pathname + \"'. Repeated forward-slashes (//) or backslashes \\\\ are not valid in the href.\");\n        const normalizedUrl = (0, _utils.normalizeRepeatedSlashes)(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!(0, _islocalurl.isLocalURL)(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizetrailingslash.normalizePathTrailingSlash)(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _utils1.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);\n            const { result, params } = (0, _interpolateas.interpolateAs)(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formaturl.formatWithValidation)({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: (0, _omit.omit)(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=resolve-href.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/resolve-href.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useIntersection\", ({\n    enumerable: true,\n    get: function() {\n        return useIntersection;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst _requestidlecallback = __webpack_require__(/*! ./request-idle-callback */ \"(app-pages-browser)/./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id, observer, elements } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef, rootMargin, disabled } = param;\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react.useState)(false);\n    const elementRef = (0, _react.useRef)(null);\n    const setElement = (0, _react.useCallback)((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react.useEffect)(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestidlecallback.requestIdleCallback)(()=>setVisible(true));\n                return ()=>(0, _requestidlecallback.cancelIdleCallback)(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react.useCallback)(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/use-intersection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"AmpStateContext\", ({\n    enumerable: true,\n    get: function() {\n        return AmpStateContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst AmpStateContext = _react.default.createContext({});\nif (true) {\n    AmpStateContext.displayName = \"AmpStateContext\";\n} //# sourceMappingURL=amp-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hbXAtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsbURBQWtEO0lBQzlDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLHlCQUF5QkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyxtRkFBTztBQUN2RSxNQUFNRixrQkFBa0JHLE9BQU9FLE9BQU8sQ0FBQ0MsYUFBYSxDQUFDLENBQUM7QUFDdEQsSUFBSUMsSUFBcUMsRUFBRTtJQUN2Q1AsZ0JBQWdCUSxXQUFXLEdBQUc7QUFDbEMsRUFFQSxzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2FtcC1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzPzk4YjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBbXBTdGF0ZUNvbnRleHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEFtcFN0YXRlQ29udGV4dDtcbiAgICB9XG59KTtcbmNvbnN0IF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvXy9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHRcIik7XG5jb25zdCBfcmVhY3QgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5fKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBBbXBTdGF0ZUNvbnRleHQgPSBfcmVhY3QuZGVmYXVsdC5jcmVhdGVDb250ZXh0KHt9KTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBBbXBTdGF0ZUNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkFtcFN0YXRlQ29udGV4dFwiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbXAtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiQW1wU3RhdGVDb250ZXh0IiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl8iLCJkZWZhdWx0IiwiY3JlYXRlQ29udGV4dCIsInByb2Nlc3MiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/amp-mode.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isInAmpMode\", ({\n    enumerable: true,\n    get: function() {\n        return isInAmpMode;\n    }\n}));\nfunction isInAmpMode(param) {\n    let { ampFirst = false, hybrid = false, hasQuery = false } = param === void 0 ? {} : param;\n    return ampFirst || hybrid && hasQuery;\n} //# sourceMappingURL=amp-mode.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hbXAtbW9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsK0NBQThDO0lBQzFDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsWUFBWUMsS0FBSztJQUN0QixJQUFJLEVBQUVDLFdBQVcsS0FBSyxFQUFFQyxTQUFTLEtBQUssRUFBRUMsV0FBVyxLQUFLLEVBQUUsR0FBR0gsVUFBVSxLQUFLLElBQUksQ0FBQyxJQUFJQTtJQUNyRixPQUFPQyxZQUFZQyxVQUFVQztBQUNqQyxFQUVBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvYW1wLW1vZGUuanM/NjIzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzSW5BbXBNb2RlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpc0luQW1wTW9kZTtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGlzSW5BbXBNb2RlKHBhcmFtKSB7XG4gICAgbGV0IHsgYW1wRmlyc3QgPSBmYWxzZSwgaHlicmlkID0gZmFsc2UsIGhhc1F1ZXJ5ID0gZmFsc2UgfSA9IHBhcmFtID09PSB2b2lkIDAgPyB7fSA6IHBhcmFtO1xuICAgIHJldHVybiBhbXBGaXJzdCB8fCBoeWJyaWQgJiYgaGFzUXVlcnk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFtcC1tb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJpc0luQW1wTW9kZSIsInBhcmFtIiwiYW1wRmlyc3QiLCJoeWJyaWQiLCJoYXNRdWVyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/escape-regexp.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/escape-regexp.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// regexp is based on https://github.com/sindresorhus/escape-string-regexp\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"escapeStringRegexp\", ({\n    enumerable: true,\n    get: function() {\n        return escapeStringRegexp;\n    }\n}));\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/;\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g;\nfunction escapeStringRegexp(str) {\n    // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n    if (reHasRegExp.test(str)) {\n        return str.replace(reReplaceRegExp, \"\\\\$&\");\n    }\n    return str;\n} //# sourceMappingURL=escape-regexp.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9lc2NhcGUtcmVnZXhwLmpzIiwibWFwcGluZ3MiOiJBQUFBLDBFQUEwRTtBQUM3RDtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsc0RBQXFEO0lBQ2pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsY0FBYztBQUNwQixNQUFNQyxrQkFBa0I7QUFDeEIsU0FBU0YsbUJBQW1CRyxHQUFHO0lBQzNCLCtHQUErRztJQUMvRyxJQUFJRixZQUFZRyxJQUFJLENBQUNELE1BQU07UUFDdkIsT0FBT0EsSUFBSUUsT0FBTyxDQUFDSCxpQkFBaUI7SUFDeEM7SUFDQSxPQUFPQztBQUNYLEVBRUEseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9lc2NhcGUtcmVnZXhwLmpzP2RiZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVnZXhwIGlzIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvZXNjYXBlLXN0cmluZy1yZWdleHBcblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZXNjYXBlU3RyaW5nUmVnZXhwXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBlc2NhcGVTdHJpbmdSZWdleHA7XG4gICAgfVxufSk7XG5jb25zdCByZUhhc1JlZ0V4cCA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Li1dLztcbmNvbnN0IHJlUmVwbGFjZVJlZ0V4cCA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Li1dL2c7XG5mdW5jdGlvbiBlc2NhcGVTdHJpbmdSZWdleHAoc3RyKSB7XG4gICAgLy8gc2VlIGFsc286IGh0dHBzOi8vZ2l0aHViLmNvbS9sb2Rhc2gvbG9kYXNoL2Jsb2IvMmRhMDI0YzNiNGY5OTQ3YTQ4NTE3NjM5ZGU3NTYwNDU3Y2Q0ZWM2Yy9lc2NhcGVSZWdFeHAuanMjTDIzXG4gICAgaWYgKHJlSGFzUmVnRXhwLnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UocmVSZXBsYWNlUmVnRXhwLCBcIlxcXFwkJlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXNjYXBlLXJlZ2V4cC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZXNjYXBlU3RyaW5nUmVnZXhwIiwicmVIYXNSZWdFeHAiLCJyZVJlcGxhY2VSZWdFeHAiLCJzdHIiLCJ0ZXN0IiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/escape-regexp.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/get-img-props.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getImgProps\", ({\n    enumerable: true,\n    get: function() {\n        return getImgProps;\n    }\n}));\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _imageblursvg = __webpack_require__(/*! ./image-blur-svg */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js\");\nconst _imageconfig = __webpack_require__(/*! ./image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nconst allImgs = new Map();\nlet perfObserver;\nfunction getInt(x) {\n    if (typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"number\") {\n        return Number.isFinite(x) ? x : NaN;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes, allSizes } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config, src, unoptimized, width, quality, sizes, loader } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths, kind } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>loader({\n                config,\n                src,\n                quality,\n                width: w\n            }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getImgProps(param, _state) {\n    let { src, sizes, unoptimized = false, priority = false, loading, className, quality, width, height, fill = false, style, onLoad, onLoadingComplete, placeholder = \"empty\", blurDataURL, fetchPriority, layout, objectFit, objectPosition, lazyBoundary, lazyRoot, ...rest } = param;\n    const { imgConf, showAltText, blurComplete, defaultLoader } = _state;\n    let config;\n    let c = imgConf || _imageconfig.imageConfigDefault;\n    if (\"allSizes\" in c) {\n        config = c;\n    } else {\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        config = {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }\n    let loader = rest.loader || defaultLoader;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    delete rest.srcSet;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        loader = (obj)=>{\n            const { config: _, ...opts } = obj;\n            return customImageLoader(opts);\n        };\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = {\n                ...style,\n                ...layoutStyle\n            };\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    if (priority) {\n        fetchPriority = \"high\";\n    }\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n            throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n                }\n                if (height) {\n                    throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n        }\n        if (placeholder !== \"empty\" && placeholder !== \"blur\" && !placeholder.startsWith(\"data:image/\")) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"placeholder\" property \"' + placeholder + '\".');\n        }\n        if (placeholder !== \"empty\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.');\n            }\n        }\n        if (placeholder === \"blur\" && !blurDataURL) {\n            const VALID_BLUR_EXT = [\n                \"jpeg\",\n                \"png\",\n                \"webp\",\n                \"avif\"\n            ] // should match next-image-loader\n            ;\n            throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n        Possible solutions:\\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n          - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + ' (animated images not supported)\\n          - Remove the \"placeholder\" property, effectively no blur effect\\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n        }\n        if (\"ref\" in rest) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.');\n        }\n        if (!unoptimized && !isDefaultLoader) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        if (onLoadingComplete) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.');\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if ( true && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var _entry_element;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder === \"empty\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const backgroundImage = !blurComplete && placeholder !== \"empty\" ? placeholder === \"blur\" ? 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n        widthInt,\n        heightInt,\n        blurWidth,\n        blurHeight,\n        blurDataURL: blurDataURL || \"\",\n        objectFit: imgStyle.objectFit\n    }) + '\")' : 'url(\"' + placeholder + '\")' // assume `data:image/`\n     : null;\n    let placeholderStyle = backgroundImage ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage\n    } : {};\n    if (true) {\n        if (placeholderStyle.backgroundImage && placeholder === \"blur\" && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            placeholderStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    if (true) {\n        if (true) {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const props = {\n        ...rest,\n        loading: isLazy ? \"lazy\" : loading,\n        fetchPriority,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        className,\n        style: {\n            ...imgStyle,\n            ...placeholderStyle\n        },\n        sizes: imgAttributes.sizes,\n        srcSet: imgAttributes.srcSet,\n        src: imgAttributes.src\n    };\n    const meta = {\n        unoptimized,\n        priority,\n        placeholder,\n        fill\n    };\n    return {\n        props,\n        meta\n    };\n} //# sourceMappingURL=get-img-props.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/head.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    defaultHead: function() {\n        return defaultHead;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _sideeffect = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./side-effect */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js\"));\nconst _ampcontextsharedruntime = __webpack_require__(/*! ./amp-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js\");\nconst _headmanagercontextsharedruntime = __webpack_require__(/*! ./head-manager-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js\");\nconst _ampmode = __webpack_require__(/*! ./amp-mode */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js\");\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nfunction defaultHead(inAmpMode) {\n    if (inAmpMode === void 0) inAmpMode = false;\n    const head = [\n        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"meta\", {\n            charSet: \"utf-8\"\n        })\n    ];\n    if (!inAmpMode) {\n        head.push(/*#__PURE__*/ (0, _jsxruntime.jsx)(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width\"\n        }));\n    }\n    return head;\n}\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === \"string\" || typeof child === \"number\") {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === _react.default.Fragment) {\n        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{\n            if (typeof fragmentChild === \"string\" || typeof fragmentChild === \"number\") {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = [\n    \"name\",\n    \"httpEquiv\",\n    \"charSet\",\n    \"itemProp\"\n];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/ function unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h)=>{\n        let isUnique = true;\n        let hasKey = false;\n        if (h.key && typeof h.key !== \"number\" && h.key.indexOf(\"$\") > 0) {\n            hasKey = true;\n            const key = h.key.slice(h.key.indexOf(\"$\") + 1);\n            if (keys.has(key)) {\n                isUnique = false;\n            } else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch(h.type){\n            case \"title\":\n            case \"base\":\n                if (tags.has(h.type)) {\n                    isUnique = false;\n                } else {\n                    tags.add(h.type);\n                }\n                break;\n            case \"meta\":\n                for(let i = 0, len = METATYPES.length; i < len; i++){\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype)) continue;\n                    if (metatype === \"charSet\") {\n                        if (metaTypes.has(metatype)) {\n                            isUnique = false;\n                        } else {\n                            metaTypes.add(metatype);\n                        }\n                    } else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if ((metatype !== \"name\" || !hasKey) && categories.has(category)) {\n                            isUnique = false;\n                        } else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return isUnique;\n    };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */ function reduceComponents(headChildrenElements, props) {\n    const { inAmpMode } = props;\n    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{\n        const key = c.key || i;\n        if (false) {}\n        if (true) {\n            // omit JSON-LD structured data snippets from the warning\n            if (c.type === \"script\" && c.props[\"type\"] !== \"application/ld+json\") {\n                const srcMessage = c.props[\"src\"] ? '<script> tag with src=\"' + c.props[\"src\"] + '\"' : \"inline <script>\";\n                (0, _warnonce.warnOnce)(\"Do not add <script> tags using next/head (see \" + srcMessage + \"). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component\");\n            } else if (c.type === \"link\" && c.props[\"rel\"] === \"stylesheet\") {\n                (0, _warnonce.warnOnce)('Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"' + c.props[\"href\"] + '\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component');\n            }\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(c, {\n            key\n        });\n    });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */ function Head(param) {\n    let { children } = param;\n    const ampState = (0, _react.useContext)(_ampcontextsharedruntime.AmpStateContext);\n    const headManager = (0, _react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_sideeffect.default, {\n        reduceComponentsToState: reduceComponents,\n        headManager: headManager,\n        inAmpMode: (0, _ampmode.isInAmpMode)(ampState),\n        children: children\n    });\n}\n_c = Head;\nconst _default = Head;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head.js.map\nvar _c;\n$RefreshReg$(_c, \"Head\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-blur-svg.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getImageBlurSvg\", ({\n    enumerable: true,\n    get: function() {\n        return getImageBlurSvg;\n    }\n}));\nfunction getImageBlurSvg(param) {\n    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;\n    const std = 20;\n    const svgWidth = blurWidth ? blurWidth * 40 : widthInt;\n    const svgHeight = blurHeight ? blurHeight * 40 : heightInt;\n    const viewBox = svgWidth && svgHeight ? \"viewBox='0 0 \" + svgWidth + \" \" + svgHeight + \"'\" : \"\";\n    const preserveAspectRatio = viewBox ? \"none\" : objectFit === \"contain\" ? \"xMidYMid\" : objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n    return \"%3Csvg xmlns='http://www.w3.org/2000/svg' \" + viewBox + \"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='\" + preserveAspectRatio + \"' style='filter: url(%23b);' href='\" + blurDataURL + \"'/%3E%3C/svg%3E\";\n} //# sourceMappingURL=image-blur-svg.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Zy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Q0FFQyxHQUFnQjtBQUNqQkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILG1EQUFrRDtJQUM5Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLFNBQVNBLGdCQUFnQkMsS0FBSztJQUMxQixJQUFJLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUVDLFVBQVUsRUFBRUMsV0FBVyxFQUFFQyxTQUFTLEVBQUUsR0FBR047SUFDN0UsTUFBTU8sTUFBTTtJQUNaLE1BQU1DLFdBQVdMLFlBQVlBLFlBQVksS0FBS0Y7SUFDOUMsTUFBTVEsWUFBWUwsYUFBYUEsYUFBYSxLQUFLRjtJQUNqRCxNQUFNUSxVQUFVRixZQUFZQyxZQUFZLGtCQUFrQkQsV0FBVyxNQUFNQyxZQUFZLE1BQU07SUFDN0YsTUFBTUUsc0JBQXNCRCxVQUFVLFNBQVNKLGNBQWMsWUFBWSxhQUFhQSxjQUFjLFVBQVUsbUJBQW1CO0lBQ2pJLE9BQU8sK0NBQStDSSxVQUFVLDhGQUE4RkgsTUFBTSxvUUFBb1FBLE1BQU0sZ0dBQWdHSSxzQkFBc0Isd0NBQXdDTixjQUFjO0FBQzlsQixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaW1hZ2UtYmx1ci1zdmcuanM/OTU3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgc2hhcmVkIGZ1bmN0aW9uLCB1c2VkIG9uIGJvdGggY2xpZW50IGFuZCBzZXJ2ZXIsIHRvIGdlbmVyYXRlIGEgU1ZHIGJsdXIgcGxhY2Vob2xkZXIuXG4gKi8gXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRJbWFnZUJsdXJTdmdcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldEltYWdlQmx1clN2ZztcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGdldEltYWdlQmx1clN2ZyhwYXJhbSkge1xuICAgIGxldCB7IHdpZHRoSW50LCBoZWlnaHRJbnQsIGJsdXJXaWR0aCwgYmx1ckhlaWdodCwgYmx1ckRhdGFVUkwsIG9iamVjdEZpdCB9ID0gcGFyYW07XG4gICAgY29uc3Qgc3RkID0gMjA7XG4gICAgY29uc3Qgc3ZnV2lkdGggPSBibHVyV2lkdGggPyBibHVyV2lkdGggKiA0MCA6IHdpZHRoSW50O1xuICAgIGNvbnN0IHN2Z0hlaWdodCA9IGJsdXJIZWlnaHQgPyBibHVySGVpZ2h0ICogNDAgOiBoZWlnaHRJbnQ7XG4gICAgY29uc3Qgdmlld0JveCA9IHN2Z1dpZHRoICYmIHN2Z0hlaWdodCA/IFwidmlld0JveD0nMCAwIFwiICsgc3ZnV2lkdGggKyBcIiBcIiArIHN2Z0hlaWdodCArIFwiJ1wiIDogXCJcIjtcbiAgICBjb25zdCBwcmVzZXJ2ZUFzcGVjdFJhdGlvID0gdmlld0JveCA/IFwibm9uZVwiIDogb2JqZWN0Rml0ID09PSBcImNvbnRhaW5cIiA/IFwieE1pZFlNaWRcIiA6IG9iamVjdEZpdCA9PT0gXCJjb3ZlclwiID8gXCJ4TWlkWU1pZCBzbGljZVwiIDogXCJub25lXCI7XG4gICAgcmV0dXJuIFwiJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgXCIgKyB2aWV3Qm94ICsgXCIlM0UlM0NmaWx0ZXIgaWQ9J2InIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycz0nc1JHQiclM0UlM0NmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249J1wiICsgc3RkICsgXCInLyUzRSUzQ2ZlQ29sb3JNYXRyaXggdmFsdWVzPScxIDAgMCAwIDAgMCAxIDAgMCAwIDAgMCAxIDAgMCAwIDAgMCAxMDAgLTEnIHJlc3VsdD0ncycvJTNFJTNDZmVGbG9vZCB4PScwJyB5PScwJyB3aWR0aD0nMTAwJTI1JyBoZWlnaHQ9JzEwMCUyNScvJTNFJTNDZmVDb21wb3NpdGUgb3BlcmF0b3I9J291dCcgaW49J3MnLyUzRSUzQ2ZlQ29tcG9zaXRlIGluMj0nU291cmNlR3JhcGhpYycvJTNFJTNDZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPSdcIiArIHN0ZCArIFwiJy8lM0UlM0MvZmlsdGVyJTNFJTNDaW1hZ2Ugd2lkdGg9JzEwMCUyNScgaGVpZ2h0PScxMDAlMjUnIHg9JzAnIHk9JzAnIHByZXNlcnZlQXNwZWN0UmF0aW89J1wiICsgcHJlc2VydmVBc3BlY3RSYXRpbyArIFwiJyBzdHlsZT0nZmlsdGVyOiB1cmwoJTIzYik7JyBocmVmPSdcIiArIGJsdXJEYXRhVVJMICsgXCInLyUzRSUzQy9zdmclM0VcIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtYmx1ci1zdmcuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImdldEltYWdlQmx1clN2ZyIsInBhcmFtIiwid2lkdGhJbnQiLCJoZWlnaHRJbnQiLCJibHVyV2lkdGgiLCJibHVySGVpZ2h0IiwiYmx1ckRhdGFVUkwiLCJvYmplY3RGaXQiLCJzdGQiLCJzdmdXaWR0aCIsInN2Z0hlaWdodCIsInZpZXdCb3giLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ImageConfigContext\", ({\n    enumerable: true,\n    get: function() {\n        return ImageConfigContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _imageconfig = __webpack_require__(/*! ./image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst ImageConfigContext = _react.default.createContext(_imageconfig.imageConfigDefault);\nif (true) {\n    ImageConfigContext.displayName = \"ImageConfigContext\";\n} //# sourceMappingURL=image-config-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWctY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsc0RBQXFEO0lBQ2pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLHlCQUF5QkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyxtRkFBTztBQUN2RSxNQUFNRyxlQUFlSCxtQkFBT0EsQ0FBQywrRkFBZ0I7QUFDN0MsTUFBTUYscUJBQXFCRyxPQUFPRyxPQUFPLENBQUNDLGFBQWEsQ0FBQ0YsYUFBYUcsa0JBQWtCO0FBQ3ZGLElBQUlDLElBQXFDLEVBQUU7SUFDdkNULG1CQUFtQlUsV0FBVyxHQUFHO0FBQ3JDLEVBRUEsK0RBQStEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWctY29udGV4dC5zaGFyZWQtcnVudGltZS5qcz8yNzhiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW1hZ2VDb25maWdDb250ZXh0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBJbWFnZUNvbmZpZ0NvbnRleHQ7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0XCIpO1xuY29uc3QgX3JlYWN0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuXyhyZXF1aXJlKFwicmVhY3RcIikpO1xuY29uc3QgX2ltYWdlY29uZmlnID0gcmVxdWlyZShcIi4vaW1hZ2UtY29uZmlnXCIpO1xuY29uc3QgSW1hZ2VDb25maWdDb250ZXh0ID0gX3JlYWN0LmRlZmF1bHQuY3JlYXRlQ29udGV4dChfaW1hZ2Vjb25maWcuaW1hZ2VDb25maWdEZWZhdWx0KTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBJbWFnZUNvbmZpZ0NvbnRleHQuZGlzcGxheU5hbWUgPSBcIkltYWdlQ29uZmlnQ29udGV4dFwiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZS1jb25maWctY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiSW1hZ2VDb25maWdDb250ZXh0IiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl8iLCJfaW1hZ2Vjb25maWciLCJkZWZhdWx0IiwiY3JlYXRlQ29udGV4dCIsImltYWdlQ29uZmlnRGVmYXVsdCIsInByb2Nlc3MiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-config.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    VALID_LOADERS: function() {\n        return VALID_LOADERS;\n    },\n    imageConfigDefault: function() {\n        return imageConfigDefault;\n    }\n});\nconst VALID_LOADERS = [\n    \"default\",\n    \"imgix\",\n    \"cloudinary\",\n    \"akamai\",\n    \"custom\"\n];\nconst imageConfigDefault = {\n    deviceSizes: [\n        640,\n        750,\n        828,\n        1080,\n        1200,\n        1920,\n        2048,\n        3840\n    ],\n    imageSizes: [\n        16,\n        32,\n        48,\n        64,\n        96,\n        128,\n        256,\n        384\n    ],\n    path: \"/_next/image\",\n    loader: \"default\",\n    loaderFile: \"\",\n    domains: [],\n    disableStaticImages: false,\n    minimumCacheTTL: 60,\n    formats: [\n        \"image/webp\"\n    ],\n    dangerouslyAllowSVG: false,\n    contentSecurityPolicy: \"script-src 'none'; frame-src 'none'; sandbox;\",\n    contentDispositionType: \"inline\",\n    remotePatterns: [],\n    unoptimized: false\n}; //# sourceMappingURL=image-config.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FHTjtBQUNBLFNBQVNHLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlULE9BQU9DLGNBQWMsQ0FBQ08sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLGVBQWU7UUFDWCxPQUFPQTtJQUNYO0lBQ0FDLG9CQUFvQjtRQUNoQixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxNQUFNRCxnQkFBZ0I7SUFDbEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0QsTUFBTUMscUJBQXFCO0lBQ3ZCTyxhQUFhO1FBQ1Q7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNIO0lBQ0RDLFlBQVk7UUFDUjtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO0tBQ0g7SUFDREMsTUFBTTtJQUNOQyxRQUFRO0lBQ1JDLFlBQVk7SUFDWkMsU0FBUyxFQUFFO0lBQ1hDLHFCQUFxQjtJQUNyQkMsaUJBQWlCO0lBQ2pCQyxTQUFTO1FBQ0w7S0FDSDtJQUNEQyxxQkFBcUI7SUFDckJDLHVCQUF1QjtJQUN2QkMsd0JBQXdCO0lBQ3hCQyxnQkFBZ0IsRUFBRTtJQUNsQkMsYUFBYTtBQUNqQixHQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaW1hZ2UtY29uZmlnLmpzPzMxMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBWQUxJRF9MT0FERVJTOiBudWxsLFxuICAgIGltYWdlQ29uZmlnRGVmYXVsdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBWQUxJRF9MT0FERVJTOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFZBTElEX0xPQURFUlM7XG4gICAgfSxcbiAgICBpbWFnZUNvbmZpZ0RlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaW1hZ2VDb25maWdEZWZhdWx0O1xuICAgIH1cbn0pO1xuY29uc3QgVkFMSURfTE9BREVSUyA9IFtcbiAgICBcImRlZmF1bHRcIixcbiAgICBcImltZ2l4XCIsXG4gICAgXCJjbG91ZGluYXJ5XCIsXG4gICAgXCJha2FtYWlcIixcbiAgICBcImN1c3RvbVwiXG5dO1xuY29uc3QgaW1hZ2VDb25maWdEZWZhdWx0ID0ge1xuICAgIGRldmljZVNpemVzOiBbXG4gICAgICAgIDY0MCxcbiAgICAgICAgNzUwLFxuICAgICAgICA4MjgsXG4gICAgICAgIDEwODAsXG4gICAgICAgIDEyMDAsXG4gICAgICAgIDE5MjAsXG4gICAgICAgIDIwNDgsXG4gICAgICAgIDM4NDBcbiAgICBdLFxuICAgIGltYWdlU2l6ZXM6IFtcbiAgICAgICAgMTYsXG4gICAgICAgIDMyLFxuICAgICAgICA0OCxcbiAgICAgICAgNjQsXG4gICAgICAgIDk2LFxuICAgICAgICAxMjgsXG4gICAgICAgIDI1NixcbiAgICAgICAgMzg0XG4gICAgXSxcbiAgICBwYXRoOiBcIi9fbmV4dC9pbWFnZVwiLFxuICAgIGxvYWRlcjogXCJkZWZhdWx0XCIsXG4gICAgbG9hZGVyRmlsZTogXCJcIixcbiAgICBkb21haW5zOiBbXSxcbiAgICBkaXNhYmxlU3RhdGljSW1hZ2VzOiBmYWxzZSxcbiAgICBtaW5pbXVtQ2FjaGVUVEw6IDYwLFxuICAgIGZvcm1hdHM6IFtcbiAgICAgICAgXCJpbWFnZS93ZWJwXCJcbiAgICBdLFxuICAgIGRhbmdlcm91c2x5QWxsb3dTVkc6IGZhbHNlLFxuICAgIGNvbnRlbnRTZWN1cml0eVBvbGljeTogXCJzY3JpcHQtc3JjICdub25lJzsgZnJhbWUtc3JjICdub25lJzsgc2FuZGJveDtcIixcbiAgICBjb250ZW50RGlzcG9zaXRpb25UeXBlOiBcImlubGluZVwiLFxuICAgIHJlbW90ZVBhdHRlcm5zOiBbXSxcbiAgICB1bm9wdGltaXplZDogZmFsc2Vcbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltYWdlLWNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJWQUxJRF9MT0FERVJTIiwiaW1hZ2VDb25maWdEZWZhdWx0IiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGV2aWNlU2l6ZXMiLCJpbWFnZVNpemVzIiwicGF0aCIsImxvYWRlciIsImxvYWRlckZpbGUiLCJkb21haW5zIiwiZGlzYWJsZVN0YXRpY0ltYWdlcyIsIm1pbmltdW1DYWNoZVRUTCIsImZvcm1hdHMiLCJkYW5nZXJvdXNseUFsbG93U1ZHIiwiY29udGVudFNlY3VyaXR5UG9saWN5IiwiY29udGVudERpc3Bvc2l0aW9uVHlwZSIsInJlbW90ZVBhdHRlcm5zIiwidW5vcHRpbWl6ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-external.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getImageProps: function() {\n        return getImageProps;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _getimgprops = __webpack_require__(/*! ./get-img-props */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\");\nconst _imagecomponent = __webpack_require__(/*! ../../client/image-component */ \"(app-pages-browser)/./node_modules/next/dist/client/image-component.js\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\"));\nconst getImageProps = (imgProps)=>{\n    const { props } = (0, _getimgprops.getImgProps)(imgProps, {\n        defaultLoader: _imageloader.default,\n        // This is replaced by webpack define plugin\n        imgConf: {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]}\n    });\n    // Normally we don't care about undefined props because we pass to JSX,\n    // but this exported function could be used by the end user for anything\n    // so we delete undefined props to clean it up a little.\n    for (const [key, value] of Object.entries(props)){\n        if (value === undefined) {\n            delete props[key];\n        }\n    }\n    return {\n        props\n    };\n};\nconst _default = _imagecomponent.Image; //# sourceMappingURL=image-external.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsY0FBYyxDQUFDTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsZUFBZTtRQUNYLE9BQU9BO0lBQ1g7SUFDQUMsU0FBUztRQUNMLE9BQU9PO0lBQ1g7QUFDSjtBQUNBLE1BQU1DLDJCQUEyQkMsbUJBQU9BLENBQUMsZ0lBQXlDO0FBQ2xGLE1BQU1DLGVBQWVELG1CQUFPQSxDQUFDLGlHQUFpQjtBQUM5QyxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDRHQUE4QjtBQUM5RCxNQUFNRyxlQUFlLFdBQVcsR0FBR0oseUJBQXlCSyxDQUFDLENBQUNKLG1CQUFPQSxDQUFDLGtIQUFtQztBQUN6RyxNQUFNVixnQkFBZ0IsQ0FBQ2U7SUFDbkIsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEdBQUdMLGFBQWFNLFdBQVcsRUFBRUYsVUFBVTtRQUN0REcsZUFBZUwsYUFBYVosT0FBTztRQUNuQyw0Q0FBNEM7UUFDNUNrQixTQUFTQywwTkFBNkI7SUFDMUM7SUFDQSx1RUFBdUU7SUFDdkUsd0VBQXdFO0lBQ3hFLHdEQUF3RDtJQUN4RCxLQUFLLE1BQU0sQ0FBQ0csS0FBS3pCLE1BQU0sSUFBSUgsT0FBTzZCLE9BQU8sQ0FBQ1IsT0FBTztRQUM3QyxJQUFJbEIsVUFBVTJCLFdBQVc7WUFDckIsT0FBT1QsS0FBSyxDQUFDTyxJQUFJO1FBQ3JCO0lBQ0o7SUFDQSxPQUFPO1FBQ0hQO0lBQ0o7QUFDSjtBQUNBLE1BQU1SLFdBQVdJLGdCQUFnQmMsS0FBSyxFQUV0QywwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2ltYWdlLWV4dGVybmFsLmpzPzY4Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRJbWFnZVByb3BzOiBudWxsLFxuICAgIGRlZmF1bHQ6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgZ2V0SW1hZ2VQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRJbWFnZVByb3BzO1xuICAgIH0sXG4gICAgZGVmYXVsdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfZGVmYXVsdDtcbiAgICB9XG59KTtcbmNvbnN0IF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvXy9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHRcIik7XG5jb25zdCBfZ2V0aW1ncHJvcHMgPSByZXF1aXJlKFwiLi9nZXQtaW1nLXByb3BzXCIpO1xuY29uc3QgX2ltYWdlY29tcG9uZW50ID0gcmVxdWlyZShcIi4uLy4uL2NsaWVudC9pbWFnZS1jb21wb25lbnRcIik7XG5jb25zdCBfaW1hZ2Vsb2FkZXIgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5fKHJlcXVpcmUoXCJuZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXJcIikpO1xuY29uc3QgZ2V0SW1hZ2VQcm9wcyA9IChpbWdQcm9wcyk9PntcbiAgICBjb25zdCB7IHByb3BzIH0gPSAoMCwgX2dldGltZ3Byb3BzLmdldEltZ1Byb3BzKShpbWdQcm9wcywge1xuICAgICAgICBkZWZhdWx0TG9hZGVyOiBfaW1hZ2Vsb2FkZXIuZGVmYXVsdCxcbiAgICAgICAgLy8gVGhpcyBpcyByZXBsYWNlZCBieSB3ZWJwYWNrIGRlZmluZSBwbHVnaW5cbiAgICAgICAgaW1nQ29uZjogcHJvY2Vzcy5lbnYuX19ORVhUX0lNQUdFX09QVFNcbiAgICB9KTtcbiAgICAvLyBOb3JtYWxseSB3ZSBkb24ndCBjYXJlIGFib3V0IHVuZGVmaW5lZCBwcm9wcyBiZWNhdXNlIHdlIHBhc3MgdG8gSlNYLFxuICAgIC8vIGJ1dCB0aGlzIGV4cG9ydGVkIGZ1bmN0aW9uIGNvdWxkIGJlIHVzZWQgYnkgdGhlIGVuZCB1c2VyIGZvciBhbnl0aGluZ1xuICAgIC8vIHNvIHdlIGRlbGV0ZSB1bmRlZmluZWQgcHJvcHMgdG8gY2xlYW4gaXQgdXAgYSBsaXR0bGUuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKXtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHByb3BzXG4gICAgfTtcbn07XG5jb25zdCBfZGVmYXVsdCA9IF9pbWFnZWNvbXBvbmVudC5JbWFnZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiZ2V0SW1hZ2VQcm9wcyIsImRlZmF1bHQiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfZGVmYXVsdCIsIl9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCIsInJlcXVpcmUiLCJfZ2V0aW1ncHJvcHMiLCJfaW1hZ2Vjb21wb25lbnQiLCJfaW1hZ2Vsb2FkZXIiLCJfIiwiaW1nUHJvcHMiLCJwcm9wcyIsImdldEltZ1Byb3BzIiwiZGVmYXVsdExvYWRlciIsImltZ0NvbmYiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX0lNQUdFX09QVFMiLCJrZXkiLCJlbnRyaWVzIiwidW5kZWZpbmVkIiwiSW1hZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-loader.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nfunction defaultLoader(param) {\n    let { config, src, width, quality } = param;\n    if (true) {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(\"Next Image Optimization requires \" + missingValues.join(\", \") + \" to be provided. Make sure you pass them as props to the `next/image` component. Received: \" + JSON.stringify({\n                src,\n                width,\n                quality\n            }));\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error('Failed to parse src \"' + src + '\" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)');\n        }\n        if (!src.startsWith(\"/\") && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error('Failed to parse src \"' + src + '\" on `next/image`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)');\n            }\n            if (true) {\n                // We use dynamic require because this should only error in development\n                const { hasMatch } = __webpack_require__(/*! ./match-remote-pattern */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js\");\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(\"Invalid src prop (\" + src + ') on `next/image`, hostname \"' + parsedSrc.hostname + '\" is not configured under images in your `next.config.js`\\n' + \"See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\");\n                }\n            }\n        }\n    }\n    return config.path + \"?url=\" + encodeURIComponent(src) + \"&w=\" + width + \"&q=\" + (quality || 75) + ( false ? 0 : \"\");\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nconst _default = defaultLoader; //# sourceMappingURL=image-loader.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJDQUEwQztJQUN0Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLFNBQVNDLGNBQWNDLEtBQUs7SUFDeEIsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLEdBQUcsRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUUsR0FBR0o7SUFDdEMsSUFBSUssSUFBcUMsRUFBRTtRQUN2QyxNQUFNQyxnQkFBZ0IsRUFBRTtRQUN4Qix5REFBeUQ7UUFDekQsSUFBSSxDQUFDSixLQUFLSSxjQUFjQyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDSixPQUFPRyxjQUFjQyxJQUFJLENBQUM7UUFDL0IsSUFBSUQsY0FBY0UsTUFBTSxHQUFHLEdBQUc7WUFDMUIsTUFBTSxJQUFJQyxNQUFNLHNDQUFzQ0gsY0FBY0ksSUFBSSxDQUFDLFFBQVEsZ0dBQWdHQyxLQUFLQyxTQUFTLENBQUM7Z0JBQzVMVjtnQkFDQUM7Z0JBQ0FDO1lBQ0o7UUFDSjtRQUNBLElBQUlGLElBQUlXLFVBQVUsQ0FBQyxPQUFPO1lBQ3RCLE1BQU0sSUFBSUosTUFBTSwwQkFBMEJQLE1BQU07UUFDcEQ7UUFDQSxJQUFJLENBQUNBLElBQUlXLFVBQVUsQ0FBQyxRQUFTWixDQUFBQSxPQUFPYSxPQUFPLElBQUliLE9BQU9jLGNBQWMsR0FBRztZQUNuRSxJQUFJQztZQUNKLElBQUk7Z0JBQ0FBLFlBQVksSUFBSUMsSUFBSWY7WUFDeEIsRUFBRSxPQUFPZ0IsS0FBSztnQkFDVkMsUUFBUUMsS0FBSyxDQUFDRjtnQkFDZCxNQUFNLElBQUlULE1BQU0sMEJBQTBCUCxNQUFNO1lBQ3BEO1lBQ0EsSUFBSUcsSUFDK0IsRUFBRTtnQkFDakMsdUVBQXVFO2dCQUN2RSxNQUFNLEVBQUVrQixRQUFRLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMsK0dBQXdCO2dCQUNyRCxJQUFJLENBQUNELFNBQVN0QixPQUFPYSxPQUFPLEVBQUViLE9BQU9jLGNBQWMsRUFBRUMsWUFBWTtvQkFDN0QsTUFBTSxJQUFJUCxNQUFNLHVCQUF1QlAsTUFBTSxrQ0FBa0NjLFVBQVVTLFFBQVEsR0FBRyxnRUFBZ0U7Z0JBQ3hLO1lBQ0o7UUFDSjtJQUNKO0lBQ0EsT0FBT3hCLE9BQU95QixJQUFJLEdBQUcsVUFBVUMsbUJBQW1CekIsT0FBTyxRQUFRQyxRQUFRLFFBQVNDLENBQUFBLFdBQVcsRUFBQyxJQUFNQyxDQUFBQSxNQUE4QixHQUFHLENBQXdDLEdBQUcsRUFBQztBQUNyTDtBQUNBLCtEQUErRDtBQUMvRCwyREFBMkQ7QUFDM0ROLGNBQWM4QixrQkFBa0IsR0FBRztBQUNuQyxNQUFNL0IsV0FBV0MsZUFFakIsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIuanM/YzBhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9kZWZhdWx0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gZGVmYXVsdExvYWRlcihwYXJhbSkge1xuICAgIGxldCB7IGNvbmZpZywgc3JjLCB3aWR0aCwgcXVhbGl0eSB9ID0gcGFyYW07XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICBjb25zdCBtaXNzaW5nVmFsdWVzID0gW107XG4gICAgICAgIC8vIHRoZXNlIHNob3VsZCBhbHdheXMgYmUgcHJvdmlkZWQgYnV0IG1ha2Ugc3VyZSB0aGV5IGFyZVxuICAgICAgICBpZiAoIXNyYykgbWlzc2luZ1ZhbHVlcy5wdXNoKFwic3JjXCIpO1xuICAgICAgICBpZiAoIXdpZHRoKSBtaXNzaW5nVmFsdWVzLnB1c2goXCJ3aWR0aFwiKTtcbiAgICAgICAgaWYgKG1pc3NpbmdWYWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTmV4dCBJbWFnZSBPcHRpbWl6YXRpb24gcmVxdWlyZXMgXCIgKyBtaXNzaW5nVmFsdWVzLmpvaW4oXCIsIFwiKSArIFwiIHRvIGJlIHByb3ZpZGVkLiBNYWtlIHN1cmUgeW91IHBhc3MgdGhlbSBhcyBwcm9wcyB0byB0aGUgYG5leHQvaW1hZ2VgIGNvbXBvbmVudC4gUmVjZWl2ZWQ6IFwiICsgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgICAgICBxdWFsaXR5XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNyYy5zdGFydHNXaXRoKFwiLy9cIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHBhcnNlIHNyYyBcIicgKyBzcmMgKyAnXCIgb24gYG5leHQvaW1hZ2VgLCBwcm90b2NvbC1yZWxhdGl2ZSBVUkwgKC8vKSBtdXN0IGJlIGNoYW5nZWQgdG8gYW4gYWJzb2x1dGUgVVJMIChodHRwOi8vIG9yIGh0dHBzOi8vKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc3JjLnN0YXJ0c1dpdGgoXCIvXCIpICYmIChjb25maWcuZG9tYWlucyB8fCBjb25maWcucmVtb3RlUGF0dGVybnMpKSB7XG4gICAgICAgICAgICBsZXQgcGFyc2VkU3JjO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwYXJzZWRTcmMgPSBuZXcgVVJMKHNyYyk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gcGFyc2Ugc3JjIFwiJyArIHNyYyArICdcIiBvbiBgbmV4dC9pbWFnZWAsIGlmIHVzaW5nIHJlbGF0aXZlIGltYWdlIGl0IG11c3Qgc3RhcnQgd2l0aCBhIGxlYWRpbmcgc2xhc2ggXCIvXCIgb3IgYmUgYW4gYWJzb2x1dGUgVVJMIChodHRwOi8vIG9yIGh0dHBzOi8vKScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInRlc3RcIiAmJiAvLyBtaWNyb21hdGNoIGlzbid0IGNvbXBhdGlibGUgd2l0aCBlZGdlIHJ1bnRpbWVcbiAgICAgICAgICAgIHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSAhPT0gXCJlZGdlXCIpIHtcbiAgICAgICAgICAgICAgICAvLyBXZSB1c2UgZHluYW1pYyByZXF1aXJlIGJlY2F1c2UgdGhpcyBzaG91bGQgb25seSBlcnJvciBpbiBkZXZlbG9wbWVudFxuICAgICAgICAgICAgICAgIGNvbnN0IHsgaGFzTWF0Y2ggfSA9IHJlcXVpcmUoXCIuL21hdGNoLXJlbW90ZS1wYXR0ZXJuXCIpO1xuICAgICAgICAgICAgICAgIGlmICghaGFzTWF0Y2goY29uZmlnLmRvbWFpbnMsIGNvbmZpZy5yZW1vdGVQYXR0ZXJucywgcGFyc2VkU3JjKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNyYyBwcm9wIChcIiArIHNyYyArICcpIG9uIGBuZXh0L2ltYWdlYCwgaG9zdG5hbWUgXCInICsgcGFyc2VkU3JjLmhvc3RuYW1lICsgJ1wiIGlzIG5vdCBjb25maWd1cmVkIHVuZGVyIGltYWdlcyBpbiB5b3VyIGBuZXh0LmNvbmZpZy5qc2BcXG4nICsgXCJTZWUgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWltYWdlLXVuY29uZmlndXJlZC1ob3N0XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29uZmlnLnBhdGggKyBcIj91cmw9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoc3JjKSArIFwiJnc9XCIgKyB3aWR0aCArIFwiJnE9XCIgKyAocXVhbGl0eSB8fCA3NSkgKyAocHJvY2Vzcy5lbnYuTkVYVF9ERVBMT1lNRU5UX0lEID8gXCImZHBsPVwiICsgcHJvY2Vzcy5lbnYuTkVYVF9ERVBMT1lNRU5UX0lEIDogXCJcIik7XG59XG4vLyBXZSB1c2UgdGhpcyB0byBkZXRlcm1pbmUgaWYgdGhlIGltcG9ydCBpcyB0aGUgZGVmYXVsdCBsb2FkZXJcbi8vIG9yIGEgY3VzdG9tIGxvYWRlciBkZWZpbmVkIGJ5IHRoZSB1c2VyIGluIG5leHQuY29uZmlnLmpzXG5kZWZhdWx0TG9hZGVyLl9fbmV4dF9pbWdfZGVmYXVsdCA9IHRydWU7XG5jb25zdCBfZGVmYXVsdCA9IGRlZmF1bHRMb2FkZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltYWdlLWxvYWRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX2RlZmF1bHQiLCJkZWZhdWx0TG9hZGVyIiwicGFyYW0iLCJjb25maWciLCJzcmMiLCJ3aWR0aCIsInF1YWxpdHkiLCJwcm9jZXNzIiwibWlzc2luZ1ZhbHVlcyIsInB1c2giLCJsZW5ndGgiLCJFcnJvciIsImpvaW4iLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhcnRzV2l0aCIsImRvbWFpbnMiLCJyZW1vdGVQYXR0ZXJucyIsInBhcnNlZFNyYyIsIlVSTCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImVudiIsIk5FWFRfUlVOVElNRSIsImhhc01hdGNoIiwicmVxdWlyZSIsImhvc3RuYW1lIiwicGF0aCIsImVuY29kZVVSSUNvbXBvbmVudCIsIk5FWFRfREVQTE9ZTUVOVF9JRCIsIl9fbmV4dF9pbWdfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/match-remote-pattern.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    matchRemotePattern: function() {\n        return matchRemotePattern;\n    },\n    hasMatch: function() {\n        return hasMatch;\n    }\n});\nconst _micromatch = __webpack_require__(/*! next/dist/compiled/micromatch */ \"(app-pages-browser)/./node_modules/next/dist/compiled/micromatch/index.js\");\nfunction matchRemotePattern(pattern, url) {\n    if (pattern.protocol !== undefined) {\n        const actualProto = url.protocol.slice(0, -1);\n        if (pattern.protocol !== actualProto) {\n            return false;\n        }\n    }\n    if (pattern.port !== undefined) {\n        if (pattern.port !== url.port) {\n            return false;\n        }\n    }\n    if (pattern.hostname === undefined) {\n        throw new Error(\"Pattern should define hostname but found\\n\" + JSON.stringify(pattern));\n    } else {\n        if (!(0, _micromatch.makeRe)(pattern.hostname).test(url.hostname)) {\n            return false;\n        }\n    }\n    var _pattern_pathname;\n    if (!(0, _micromatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : \"**\").test(url.pathname)) {\n        return false;\n    }\n    return true;\n}\nfunction hasMatch(domains, remotePatterns, url) {\n    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));\n} //# sourceMappingURL=match-remote-pattern.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsY0FBYyxDQUFDTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7SUFDQUMsVUFBVTtRQUNOLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLGNBQWNDLG1CQUFPQSxDQUFDLGdIQUErQjtBQUMzRCxTQUFTVCxtQkFBbUJVLE9BQU8sRUFBRUMsR0FBRztJQUNwQyxJQUFJRCxRQUFRRSxRQUFRLEtBQUtDLFdBQVc7UUFDaEMsTUFBTUMsY0FBY0gsSUFBSUMsUUFBUSxDQUFDRyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQzNDLElBQUlMLFFBQVFFLFFBQVEsS0FBS0UsYUFBYTtZQUNsQyxPQUFPO1FBQ1g7SUFDSjtJQUNBLElBQUlKLFFBQVFNLElBQUksS0FBS0gsV0FBVztRQUM1QixJQUFJSCxRQUFRTSxJQUFJLEtBQUtMLElBQUlLLElBQUksRUFBRTtZQUMzQixPQUFPO1FBQ1g7SUFDSjtJQUNBLElBQUlOLFFBQVFPLFFBQVEsS0FBS0osV0FBVztRQUNoQyxNQUFNLElBQUlLLE1BQU0sK0NBQStDQyxLQUFLQyxTQUFTLENBQUNWO0lBQ2xGLE9BQU87UUFDSCxJQUFJLENBQUMsQ0FBQyxHQUFHRixZQUFZYSxNQUFNLEVBQUVYLFFBQVFPLFFBQVEsRUFBRUssSUFBSSxDQUFDWCxJQUFJTSxRQUFRLEdBQUc7WUFDL0QsT0FBTztRQUNYO0lBQ0o7SUFDQSxJQUFJTTtJQUNKLElBQUksQ0FBQyxDQUFDLEdBQUdmLFlBQVlhLE1BQU0sRUFBRSxDQUFDRSxvQkFBb0JiLFFBQVFjLFFBQVEsS0FBSyxPQUFPRCxvQkFBb0IsTUFBTUQsSUFBSSxDQUFDWCxJQUFJYSxRQUFRLEdBQUc7UUFDeEgsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ0EsU0FBU3ZCLFNBQVN3QixPQUFPLEVBQUVDLGNBQWMsRUFBRWYsR0FBRztJQUMxQyxPQUFPYyxRQUFRRSxJQUFJLENBQUMsQ0FBQ0MsU0FBU2pCLElBQUlNLFFBQVEsS0FBS1csV0FBV0YsZUFBZUMsSUFBSSxDQUFDLENBQUNFLElBQUk3QixtQkFBbUI2QixHQUFHbEI7QUFDN0csRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL21hdGNoLXJlbW90ZS1wYXR0ZXJuLmpzPzBjOWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBtYXRjaFJlbW90ZVBhdHRlcm46IG51bGwsXG4gICAgaGFzTWF0Y2g6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgbWF0Y2hSZW1vdGVQYXR0ZXJuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG1hdGNoUmVtb3RlUGF0dGVybjtcbiAgICB9LFxuICAgIGhhc01hdGNoOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhhc01hdGNoO1xuICAgIH1cbn0pO1xuY29uc3QgX21pY3JvbWF0Y2ggPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL21pY3JvbWF0Y2hcIik7XG5mdW5jdGlvbiBtYXRjaFJlbW90ZVBhdHRlcm4ocGF0dGVybiwgdXJsKSB7XG4gICAgaWYgKHBhdHRlcm4ucHJvdG9jb2wgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBhY3R1YWxQcm90byA9IHVybC5wcm90b2NvbC5zbGljZSgwLCAtMSk7XG4gICAgICAgIGlmIChwYXR0ZXJuLnByb3RvY29sICE9PSBhY3R1YWxQcm90bykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwYXR0ZXJuLnBvcnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAocGF0dGVybi5wb3J0ICE9PSB1cmwucG9ydCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwYXR0ZXJuLmhvc3RuYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGF0dGVybiBzaG91bGQgZGVmaW5lIGhvc3RuYW1lIGJ1dCBmb3VuZFxcblwiICsgSlNPTi5zdHJpbmdpZnkocGF0dGVybikpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghKDAsIF9taWNyb21hdGNoLm1ha2VSZSkocGF0dGVybi5ob3N0bmFtZSkudGVzdCh1cmwuaG9zdG5hbWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFyIF9wYXR0ZXJuX3BhdGhuYW1lO1xuICAgIGlmICghKDAsIF9taWNyb21hdGNoLm1ha2VSZSkoKF9wYXR0ZXJuX3BhdGhuYW1lID0gcGF0dGVybi5wYXRobmFtZSkgIT0gbnVsbCA/IF9wYXR0ZXJuX3BhdGhuYW1lIDogXCIqKlwiKS50ZXN0KHVybC5wYXRobmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGhhc01hdGNoKGRvbWFpbnMsIHJlbW90ZVBhdHRlcm5zLCB1cmwpIHtcbiAgICByZXR1cm4gZG9tYWlucy5zb21lKChkb21haW4pPT51cmwuaG9zdG5hbWUgPT09IGRvbWFpbikgfHwgcmVtb3RlUGF0dGVybnMuc29tZSgocCk9Pm1hdGNoUmVtb3RlUGF0dGVybihwLCB1cmwpKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWF0Y2gtcmVtb3RlLXBhdHRlcm4uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwibWF0Y2hSZW1vdGVQYXR0ZXJuIiwiaGFzTWF0Y2giLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfbWljcm9tYXRjaCIsInJlcXVpcmUiLCJwYXR0ZXJuIiwidXJsIiwicHJvdG9jb2wiLCJ1bmRlZmluZWQiLCJhY3R1YWxQcm90byIsInNsaWNlIiwicG9ydCIsImhvc3RuYW1lIiwiRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwibWFrZVJlIiwidGVzdCIsIl9wYXR0ZXJuX3BhdGhuYW1lIiwicGF0aG5hbWUiLCJkb21haW5zIiwicmVtb3RlUGF0dGVybnMiLCJzb21lIiwiZG9tYWluIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router-context.shared-runtime.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouterContext\", ({\n    enumerable: true,\n    get: function() {\n        return RouterContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst RouterContext = _react.default.createContext(null);\nif (true) {\n    RouterContext.displayName = \"RouterContext\";\n} //# sourceMappingURL=router-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLHlCQUF5QkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyxtRkFBTztBQUN2RSxNQUFNRixnQkFBZ0JHLE9BQU9FLE9BQU8sQ0FBQ0MsYUFBYSxDQUFDO0FBQ25ELElBQUlDLElBQXFDLEVBQUU7SUFDdkNQLGNBQWNRLFdBQVcsR0FBRztBQUNoQyxFQUVBLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanM/OGZhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJvdXRlckNvbnRleHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJvdXRlckNvbnRleHQ7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0XCIpO1xuY29uc3QgX3JlYWN0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuXyhyZXF1aXJlKFwicmVhY3RcIikpO1xuY29uc3QgUm91dGVyQ29udGV4dCA9IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUm91dGVyQ29udGV4dFwiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiUm91dGVyQ29udGV4dCIsIl9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfIiwiZGVmYXVsdCIsImNyZWF0ZUNvbnRleHQiLCJwcm9jZXNzIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-url.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatUrl: function() {\n        return formatUrl;\n    },\n    urlObjectKeys: function() {\n        return urlObjectKeys;\n    },\n    formatWithValidation: function() {\n        return formatWithValidation;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _querystring = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\"));\nconst slashedProtocols = /https?|ftp|gopher|file/;\nfunction formatUrl(urlObj) {\n    let { auth, hostname } = urlObj;\n    let protocol = urlObj.protocol || \"\";\n    let pathname = urlObj.pathname || \"\";\n    let hash = urlObj.hash || \"\";\n    let query = urlObj.query || \"\";\n    let host = false;\n    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, \":\") + \"@\" : \"\";\n    if (urlObj.host) {\n        host = auth + urlObj.host;\n    } else if (hostname) {\n        host = auth + (~hostname.indexOf(\":\") ? \"[\" + hostname + \"]\" : hostname);\n        if (urlObj.port) {\n            host += \":\" + urlObj.port;\n        }\n    }\n    if (query && typeof query === \"object\") {\n        query = String(_querystring.urlQueryToSearchParams(query));\n    }\n    let search = urlObj.search || query && \"?\" + query || \"\";\n    if (protocol && !protocol.endsWith(\":\")) protocol += \":\";\n    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n        host = \"//\" + (host || \"\");\n        if (pathname && pathname[0] !== \"/\") pathname = \"/\" + pathname;\n    } else if (!host) {\n        host = \"\";\n    }\n    if (hash && hash[0] !== \"#\") hash = \"#\" + hash;\n    if (search && search[0] !== \"?\") search = \"?\" + search;\n    pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n    search = search.replace(\"#\", \"%23\");\n    return \"\" + protocol + host + pathname + search + hash;\n}\nconst urlObjectKeys = [\n    \"auth\",\n    \"hash\",\n    \"host\",\n    \"hostname\",\n    \"href\",\n    \"path\",\n    \"pathname\",\n    \"port\",\n    \"protocol\",\n    \"query\",\n    \"search\",\n    \"slashes\"\n];\nfunction formatWithValidation(url) {\n    if (true) {\n        if (url !== null && typeof url === \"object\") {\n            Object.keys(url).forEach((key)=>{\n                if (!urlObjectKeys.includes(key)) {\n                    console.warn(\"Unknown key passed via urlObject into url.format: \" + key);\n                }\n            });\n        }\n    }\n    return formatUrl(url);\n} //# sourceMappingURL=format-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/index.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getSortedRoutes: function() {\n        return _sortedroutes.getSortedRoutes;\n    },\n    isDynamicRoute: function() {\n        return _isdynamic.isDynamicRoute;\n    }\n});\nconst _sortedroutes = __webpack_require__(/*! ./sorted-routes */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js\");\nconst _isdynamic = __webpack_require__(/*! ./is-dynamic */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js\"); //# sourceMappingURL=index.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FHTjtBQUNBLFNBQVNHLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlULE9BQU9DLGNBQWMsQ0FBQ08sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLGlCQUFpQjtRQUNiLE9BQU9RLGNBQWNSLGVBQWU7SUFDeEM7SUFDQUMsZ0JBQWdCO1FBQ1osT0FBT1EsV0FBV1IsY0FBYztJQUNwQztBQUNKO0FBQ0EsTUFBTU8sZ0JBQWdCRSxtQkFBT0EsQ0FBQyw4R0FBaUI7QUFDL0MsTUFBTUQsYUFBYUMsbUJBQU9BLENBQUMsd0dBQWMsR0FFekMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW5kZXguanM/ZjUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldFNvcnRlZFJvdXRlczogbnVsbCxcbiAgICBpc0R5bmFtaWNSb3V0ZTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBnZXRTb3J0ZWRSb3V0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX3NvcnRlZHJvdXRlcy5nZXRTb3J0ZWRSb3V0ZXM7XG4gICAgfSxcbiAgICBpc0R5bmFtaWNSb3V0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfaXNkeW5hbWljLmlzRHluYW1pY1JvdXRlO1xuICAgIH1cbn0pO1xuY29uc3QgX3NvcnRlZHJvdXRlcyA9IHJlcXVpcmUoXCIuL3NvcnRlZC1yb3V0ZXNcIik7XG5jb25zdCBfaXNkeW5hbWljID0gcmVxdWlyZShcIi4vaXMtZHluYW1pY1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiZ2V0U29ydGVkUm91dGVzIiwiaXNEeW5hbWljUm91dGUiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfc29ydGVkcm91dGVzIiwiX2lzZHluYW1pYyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"interpolateAs\", ({\n    enumerable: true,\n    get: function() {\n        return interpolateAs;\n    }\n}));\nconst _routematcher = __webpack_require__(/*! ./route-matcher */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-matcher.js\");\nconst _routeregex = __webpack_require__(/*! ./route-regex */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-regex.js\");\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeregex.getRouteRegex)(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routematcher.getRouteMatcher)(dynamicRegex)(asPathname) : \"\") || // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat, optional } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = \"[\" + (repeat ? \"...\" : \"\") + param + \"]\";\n        if (optional) {\n            replaced = (!value ? \"/\" : \"\") + \"[\" + replaced + \"]\";\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present\n        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n} //# sourceMappingURL=interpolate-as.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW50ZXJwb2xhdGUtYXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILGlEQUFnRDtJQUM1Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGdCQUFnQkMsbUJBQU9BLENBQUMsOEdBQWlCO0FBQy9DLE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDBHQUFlO0FBQzNDLFNBQVNGLGNBQWNJLEtBQUssRUFBRUMsVUFBVSxFQUFFQyxLQUFLO0lBQzNDLElBQUlDLG9CQUFvQjtJQUN4QixNQUFNQyxlQUFlLENBQUMsR0FBR0wsWUFBWU0sYUFBYSxFQUFFTDtJQUNwRCxNQUFNTSxnQkFBZ0JGLGFBQWFHLE1BQU07SUFDekMsTUFBTUMsaUJBQ04sQ0FBQ1AsZUFBZUQsUUFBUSxDQUFDLEdBQUdILGNBQWNZLGVBQWUsRUFBRUwsY0FBY0gsY0FBYyxFQUFDLEtBQU0sZ0RBQWdEO0lBQzlJLHNFQUFzRTtJQUN0RUM7SUFDQUMsb0JBQW9CSDtJQUNwQixNQUFNVSxTQUFTcEIsT0FBT3FCLElBQUksQ0FBQ0w7SUFDM0IsSUFBSSxDQUFDSSxPQUFPRSxLQUFLLENBQUMsQ0FBQ0M7UUFDZixJQUFJcEIsUUFBUWUsY0FBYyxDQUFDSyxNQUFNLElBQUk7UUFDckMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHVCxhQUFhLENBQUNPLE1BQU07UUFDakQsaUNBQWlDO1FBQ2pDLDBEQUEwRDtRQUMxRCxJQUFJRyxXQUFXLE1BQU9GLENBQUFBLFNBQVMsUUFBUSxFQUFDLElBQUtELFFBQVE7UUFDckQsSUFBSUUsVUFBVTtZQUNWQyxXQUFXLENBQUMsQ0FBQ3ZCLFFBQVEsTUFBTSxFQUFDLElBQUssTUFBTXVCLFdBQVc7UUFDdEQ7UUFDQSxJQUFJRixVQUFVLENBQUNHLE1BQU1DLE9BQU8sQ0FBQ3pCLFFBQVFBLFFBQVE7WUFDekNBO1NBQ0g7UUFDRCxPQUFPLENBQUNzQixZQUFZRixTQUFTTCxjQUFhLEtBQU0sNkNBQTZDO1FBQzVGTCxDQUFBQSxvQkFBb0JBLGtCQUFrQmdCLE9BQU8sQ0FBQ0gsVUFBVUYsU0FBU3JCLE1BQU0yQixHQUFHLENBQzNFLHVEQUF1RDtRQUN2RCxrREFBa0Q7UUFDbEQsb0NBQW9DO1FBQ3BDLENBQUNDLFVBQVVDLG1CQUFtQkQsVUFBVUUsSUFBSSxDQUFDLE9BQU9ELG1CQUFtQjdCLFdBQVcsR0FBRTtJQUN4RixJQUFJO1FBQ0FVLG9CQUFvQixHQUFHLG1DQUFtQzs7SUFFOUQsdUVBQXVFO0lBQ3ZFLGtEQUFrRDtJQUNsRDtJQUNBLE9BQU87UUFDSE87UUFDQWMsUUFBUXJCO0lBQ1o7QUFDSixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2ludGVycG9sYXRlLWFzLmpzP2QwZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpbnRlcnBvbGF0ZUFzXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnRlcnBvbGF0ZUFzO1xuICAgIH1cbn0pO1xuY29uc3QgX3JvdXRlbWF0Y2hlciA9IHJlcXVpcmUoXCIuL3JvdXRlLW1hdGNoZXJcIik7XG5jb25zdCBfcm91dGVyZWdleCA9IHJlcXVpcmUoXCIuL3JvdXRlLXJlZ2V4XCIpO1xuZnVuY3Rpb24gaW50ZXJwb2xhdGVBcyhyb3V0ZSwgYXNQYXRobmFtZSwgcXVlcnkpIHtcbiAgICBsZXQgaW50ZXJwb2xhdGVkUm91dGUgPSBcIlwiO1xuICAgIGNvbnN0IGR5bmFtaWNSZWdleCA9ICgwLCBfcm91dGVyZWdleC5nZXRSb3V0ZVJlZ2V4KShyb3V0ZSk7XG4gICAgY29uc3QgZHluYW1pY0dyb3VwcyA9IGR5bmFtaWNSZWdleC5ncm91cHM7XG4gICAgY29uc3QgZHluYW1pY01hdGNoZXMgPSAvLyBUcnkgdG8gbWF0Y2ggdGhlIGR5bmFtaWMgcm91dGUgYWdhaW5zdCB0aGUgYXNQYXRoXG4gICAgKGFzUGF0aG5hbWUgIT09IHJvdXRlID8gKDAsIF9yb3V0ZW1hdGNoZXIuZ2V0Um91dGVNYXRjaGVyKShkeW5hbWljUmVnZXgpKGFzUGF0aG5hbWUpIDogXCJcIikgfHwgLy8gRmFsbCBiYWNrIHRvIHJlYWRpbmcgdGhlIHZhbHVlcyBmcm9tIHRoZSBocmVmXG4gICAgLy8gVE9ETzogc2hvdWxkIHRoaXMgdGFrZSBwcmlvcml0eTsgYWxzbyBuZWVkIHRvIGNoYW5nZSBpbiB0aGUgcm91dGVyLlxuICAgIHF1ZXJ5O1xuICAgIGludGVycG9sYXRlZFJvdXRlID0gcm91dGU7XG4gICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmtleXMoZHluYW1pY0dyb3Vwcyk7XG4gICAgaWYgKCFwYXJhbXMuZXZlcnkoKHBhcmFtKT0+e1xuICAgICAgICBsZXQgdmFsdWUgPSBkeW5hbWljTWF0Y2hlc1twYXJhbV0gfHwgXCJcIjtcbiAgICAgICAgY29uc3QgeyByZXBlYXQsIG9wdGlvbmFsIH0gPSBkeW5hbWljR3JvdXBzW3BhcmFtXTtcbiAgICAgICAgLy8gc3VwcG9ydCBzaW5nbGUtbGV2ZWwgY2F0Y2gtYWxsXG4gICAgICAgIC8vIFRPRE86IG1vcmUgcm9idXN0IGhhbmRsaW5nIGZvciB1c2VyLWVycm9yIChwYXNzaW5nIGAvYClcbiAgICAgICAgbGV0IHJlcGxhY2VkID0gXCJbXCIgKyAocmVwZWF0ID8gXCIuLi5cIiA6IFwiXCIpICsgcGFyYW0gKyBcIl1cIjtcbiAgICAgICAgaWYgKG9wdGlvbmFsKSB7XG4gICAgICAgICAgICByZXBsYWNlZCA9ICghdmFsdWUgPyBcIi9cIiA6IFwiXCIpICsgXCJbXCIgKyByZXBsYWNlZCArIFwiXVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXBlYXQgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpKSB2YWx1ZSA9IFtcbiAgICAgICAgICAgIHZhbHVlXG4gICAgICAgIF07XG4gICAgICAgIHJldHVybiAob3B0aW9uYWwgfHwgcGFyYW0gaW4gZHluYW1pY01hdGNoZXMpICYmIC8vIEludGVycG9sYXRlIGdyb3VwIGludG8gZGF0YSBVUkwgaWYgcHJlc2VudFxuICAgICAgICAoaW50ZXJwb2xhdGVkUm91dGUgPSBpbnRlcnBvbGF0ZWRSb3V0ZS5yZXBsYWNlKHJlcGxhY2VkLCByZXBlYXQgPyB2YWx1ZS5tYXAoLy8gdGhlc2UgdmFsdWVzIHNob3VsZCBiZSBmdWxseSBlbmNvZGVkIGluc3RlYWQgb2YganVzdFxuICAgICAgICAvLyBwYXRoIGRlbGltaXRlciBlc2NhcGVkIHNpbmNlIHRoZXkgYXJlIGJlaW5nIGluc2VydGVkXG4gICAgICAgIC8vIGludG8gdGhlIFVSTCBhbmQgd2UgZXhwZWN0IFVSTCBlbmNvZGVkIHNlZ21lbnRzXG4gICAgICAgIC8vIHdoZW4gcGFyc2luZyBkeW5hbWljIHJvdXRlIHBhcmFtc1xuICAgICAgICAoc2VnbWVudCk9PmVuY29kZVVSSUNvbXBvbmVudChzZWdtZW50KSkuam9pbihcIi9cIikgOiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKSB8fCBcIi9cIik7XG4gICAgfSkpIHtcbiAgICAgICAgaW50ZXJwb2xhdGVkUm91dGUgPSBcIlwiIC8vIGRpZCBub3Qgc2F0aXNmeSBhbGwgcmVxdWlyZW1lbnRzXG4gICAgICAgIDtcbiAgICAvLyBuLmIuIFdlIGlnbm9yZSB0aGlzIGVycm9yIGJlY2F1c2Ugd2UgaGFuZGxlIHdhcm5pbmcgZm9yIHRoaXMgY2FzZSBpblxuICAgIC8vIGRldmVsb3BtZW50IGluIHRoZSBgPExpbms+YCBjb21wb25lbnQgZGlyZWN0bHkuXG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtcyxcbiAgICAgICAgcmVzdWx0OiBpbnRlcnBvbGF0ZWRSb3V0ZVxuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVycG9sYXRlLWFzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJpbnRlcnBvbGF0ZUFzIiwiX3JvdXRlbWF0Y2hlciIsInJlcXVpcmUiLCJfcm91dGVyZWdleCIsInJvdXRlIiwiYXNQYXRobmFtZSIsInF1ZXJ5IiwiaW50ZXJwb2xhdGVkUm91dGUiLCJkeW5hbWljUmVnZXgiLCJnZXRSb3V0ZVJlZ2V4IiwiZHluYW1pY0dyb3VwcyIsImdyb3VwcyIsImR5bmFtaWNNYXRjaGVzIiwiZ2V0Um91dGVNYXRjaGVyIiwicGFyYW1zIiwia2V5cyIsImV2ZXJ5IiwicGFyYW0iLCJyZXBlYXQiLCJvcHRpb25hbCIsInJlcGxhY2VkIiwiQXJyYXkiLCJpc0FycmF5IiwicmVwbGFjZSIsIm1hcCIsInNlZ21lbnQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJqb2luIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isDynamicRoute\", ({\n    enumerable: true,\n    get: function() {\n        return isDynamicRoute;\n    }\n}));\nconst _interceptionroutes = __webpack_require__(/*! ../../../../server/future/helpers/interception-routes */ \"(app-pages-browser)/./node_modules/next/dist/server/future/helpers/interception-routes.js\");\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\nfunction isDynamicRoute(route) {\n    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {\n        route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;\n    }\n    return TEST_ROUTE.test(route);\n} //# sourceMappingURL=is-dynamic.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsa0RBQWlEO0lBQzdDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsc0JBQXNCQyxtQkFBT0EsQ0FBQyx3SkFBdUQ7QUFDM0YscUNBQXFDO0FBQ3JDLE1BQU1DLGFBQWE7QUFDbkIsU0FBU0gsZUFBZUksS0FBSztJQUN6QixJQUFJLENBQUMsR0FBR0gsb0JBQW9CSSwwQkFBMEIsRUFBRUQsUUFBUTtRQUM1REEsUUFBUSxDQUFDLEdBQUdILG9CQUFvQkssbUNBQW1DLEVBQUVGLE9BQU9HLGdCQUFnQjtJQUNoRztJQUNBLE9BQU9KLFdBQVdLLElBQUksQ0FBQ0o7QUFDM0IsRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pcy1keW5hbWljLmpzPzQ2ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0R5bmFtaWNSb3V0ZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNEeW5hbWljUm91dGU7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJjZXB0aW9ucm91dGVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3NlcnZlci9mdXR1cmUvaGVscGVycy9pbnRlcmNlcHRpb24tcm91dGVzXCIpO1xuLy8gSWRlbnRpZnkgL1twYXJhbV0vIGluIHJvdXRlIHN0cmluZ1xuY29uc3QgVEVTVF9ST1VURSA9IC9cXC9cXFtbXi9dKz9cXF0oPz1cXC98JCkvO1xuZnVuY3Rpb24gaXNEeW5hbWljUm91dGUocm91dGUpIHtcbiAgICBpZiAoKDAsIF9pbnRlcmNlcHRpb25yb3V0ZXMuaXNJbnRlcmNlcHRpb25Sb3V0ZUFwcFBhdGgpKHJvdXRlKSkge1xuICAgICAgICByb3V0ZSA9ICgwLCBfaW50ZXJjZXB0aW9ucm91dGVzLmV4dHJhY3RJbnRlcmNlcHRpb25Sb3V0ZUluZm9ybWF0aW9uKShyb3V0ZSkuaW50ZXJjZXB0ZWRSb3V0ZTtcbiAgICB9XG4gICAgcmV0dXJuIFRFU1RfUk9VVEUudGVzdChyb3V0ZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWR5bmFtaWMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImlzRHluYW1pY1JvdXRlIiwiX2ludGVyY2VwdGlvbnJvdXRlcyIsInJlcXVpcmUiLCJURVNUX1JPVVRFIiwicm91dGUiLCJpc0ludGVyY2VwdGlvblJvdXRlQXBwUGF0aCIsImV4dHJhY3RJbnRlcmNlcHRpb25Sb3V0ZUluZm9ybWF0aW9uIiwiaW50ZXJjZXB0ZWRSb3V0ZSIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-local-url.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isLocalURL\", ({\n    enumerable: true,\n    get: function() {\n        return isLocalURL;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _hasbasepath = __webpack_require__(/*! ../../../../client/has-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/has-base-path.js\");\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils.isAbsoluteUrl)(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils.getLocationOrigin)();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n} //# sourceMappingURL=is-local-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtbG9jYWwtdXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCw4Q0FBNkM7SUFDekNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxxRkFBYTtBQUNwQyxNQUFNQyxlQUFlRCxtQkFBT0EsQ0FBQyw4R0FBa0M7QUFDL0QsU0FBU0YsV0FBV0ksR0FBRztJQUNuQixnRUFBZ0U7SUFDaEUsSUFBSSxDQUFDLENBQUMsR0FBR0gsT0FBT0ksYUFBYSxFQUFFRCxNQUFNLE9BQU87SUFDNUMsSUFBSTtRQUNBLDREQUE0RDtRQUM1RCxNQUFNRSxpQkFBaUIsQ0FBQyxHQUFHTCxPQUFPTSxpQkFBaUI7UUFDbkQsTUFBTUMsV0FBVyxJQUFJQyxJQUFJTCxLQUFLRTtRQUM5QixPQUFPRSxTQUFTRSxNQUFNLEtBQUtKLGtCQUFrQixDQUFDLEdBQUdILGFBQWFRLFdBQVcsRUFBRUgsU0FBU0ksUUFBUTtJQUNoRyxFQUFFLE9BQU9DLEdBQUc7UUFDUixPQUFPO0lBQ1g7QUFDSixFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2lzLWxvY2FsLXVybC5qcz81ZDI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNMb2NhbFVSTFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNMb2NhbFVSTDtcbiAgICB9XG59KTtcbmNvbnN0IF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcbmNvbnN0IF9oYXNiYXNlcGF0aCA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9jbGllbnQvaGFzLWJhc2UtcGF0aFwiKTtcbmZ1bmN0aW9uIGlzTG9jYWxVUkwodXJsKSB7XG4gICAgLy8gcHJldmVudCBhIGh5ZHJhdGlvbiBtaXNtYXRjaCBvbiBocmVmIGZvciB1cmwgd2l0aCBhbmNob3IgcmVmc1xuICAgIGlmICghKDAsIF91dGlscy5pc0Fic29sdXRlVXJsKSh1cmwpKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICAvLyBhYnNvbHV0ZSB1cmxzIGNhbiBiZSBsb2NhbCBpZiB0aGV5IGFyZSBvbiB0aGUgc2FtZSBvcmlnaW5cbiAgICAgICAgY29uc3QgbG9jYXRpb25PcmlnaW4gPSAoMCwgX3V0aWxzLmdldExvY2F0aW9uT3JpZ2luKSgpO1xuICAgICAgICBjb25zdCByZXNvbHZlZCA9IG5ldyBVUkwodXJsLCBsb2NhdGlvbk9yaWdpbik7XG4gICAgICAgIHJldHVybiByZXNvbHZlZC5vcmlnaW4gPT09IGxvY2F0aW9uT3JpZ2luICYmICgwLCBfaGFzYmFzZXBhdGguaGFzQmFzZVBhdGgpKHJlc29sdmVkLnBhdGhuYW1lKTtcbiAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWxvY2FsLXVybC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiaXNMb2NhbFVSTCIsIl91dGlscyIsInJlcXVpcmUiLCJfaGFzYmFzZXBhdGgiLCJ1cmwiLCJpc0Fic29sdXRlVXJsIiwibG9jYXRpb25PcmlnaW4iLCJnZXRMb2NhdGlvbk9yaWdpbiIsInJlc29sdmVkIiwiVVJMIiwib3JpZ2luIiwiaGFzQmFzZVBhdGgiLCJwYXRobmFtZSIsIl8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/omit.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/omit.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"omit\", ({\n    enumerable: true,\n    get: function() {\n        return omit;\n    }\n}));\nfunction omit(object, keys) {\n    const omitted = {};\n    Object.keys(object).forEach((key)=>{\n        if (!keys.includes(key)) {\n            omitted[key] = object[key];\n        }\n    });\n    return omitted;\n} //# sourceMappingURL=omit.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvb21pdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsd0NBQXVDO0lBQ25DSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsS0FBS0MsTUFBTSxFQUFFQyxJQUFJO0lBQ3RCLE1BQU1DLFVBQVUsQ0FBQztJQUNqQlQsT0FBT1EsSUFBSSxDQUFDRCxRQUFRRyxPQUFPLENBQUMsQ0FBQ0M7UUFDekIsSUFBSSxDQUFDSCxLQUFLSSxRQUFRLENBQUNELE1BQU07WUFDckJGLE9BQU8sQ0FBQ0UsSUFBSSxHQUFHSixNQUFNLENBQUNJLElBQUk7UUFDOUI7SUFDSjtJQUNBLE9BQU9GO0FBQ1gsRUFFQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9vbWl0LmpzP2ZiNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJvbWl0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBvbWl0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gb21pdChvYmplY3QsIGtleXMpIHtcbiAgICBjb25zdCBvbWl0dGVkID0ge307XG4gICAgT2JqZWN0LmtleXMob2JqZWN0KS5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgIGlmICgha2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICBvbWl0dGVkW2tleV0gPSBvYmplY3Rba2V5XTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBvbWl0dGVkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbWl0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJvbWl0Iiwib2JqZWN0Iiwia2V5cyIsIm9taXR0ZWQiLCJmb3JFYWNoIiwia2V5IiwiaW5jbHVkZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/omit.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/querystring.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    searchParamsToUrlQuery: function() {\n        return searchParamsToUrlQuery;\n    },\n    urlQueryToSearchParams: function() {\n        return urlQueryToSearchParams;\n    },\n    assign: function() {\n        return assign;\n    }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    searchParams.forEach((value, key)=>{\n        if (typeof query[key] === \"undefined\") {\n            query[key] = value;\n        } else if (Array.isArray(query[key])) {\n            query[key].push(value);\n        } else {\n            query[key] = [\n                query[key],\n                value\n            ];\n        }\n    });\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === \"string\" || typeof param === \"number\" && !isNaN(param) || typeof param === \"boolean\") {\n        return String(param);\n    } else {\n        return \"\";\n    }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n    const result = new URLSearchParams();\n    Object.entries(urlQuery).forEach((param)=>{\n        let [key, value] = param;\n        if (Array.isArray(value)) {\n            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));\n        } else {\n            result.set(key, stringifyUrlQueryParam(value));\n        }\n    });\n    return result;\n}\nfunction assign(target) {\n    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        searchParamsList[_key - 1] = arguments[_key];\n    }\n    searchParamsList.forEach((searchParams)=>{\n        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));\n        searchParams.forEach((value, key)=>target.append(key, value));\n    });\n    return target;\n} //# sourceMappingURL=querystring.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FJTjtBQUNBLFNBQVNJLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlWLE9BQU9DLGNBQWMsQ0FBQ1EsUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTixTQUFTO0lBQ2JHLHdCQUF3QjtRQUNwQixPQUFPQTtJQUNYO0lBQ0FDLHdCQUF3QjtRQUNwQixPQUFPQTtJQUNYO0lBQ0FDLFFBQVE7UUFDSixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxTQUFTRix1QkFBdUJTLFlBQVk7SUFDeEMsTUFBTUMsUUFBUSxDQUFDO0lBQ2ZELGFBQWFFLE9BQU8sQ0FBQyxDQUFDYixPQUFPYztRQUN6QixJQUFJLE9BQU9GLEtBQUssQ0FBQ0UsSUFBSSxLQUFLLGFBQWE7WUFDbkNGLEtBQUssQ0FBQ0UsSUFBSSxHQUFHZDtRQUNqQixPQUFPLElBQUllLE1BQU1DLE9BQU8sQ0FBQ0osS0FBSyxDQUFDRSxJQUFJLEdBQUc7WUFDbENGLEtBQUssQ0FBQ0UsSUFBSSxDQUFDRyxJQUFJLENBQUNqQjtRQUNwQixPQUFPO1lBQ0hZLEtBQUssQ0FBQ0UsSUFBSSxHQUFHO2dCQUNURixLQUFLLENBQUNFLElBQUk7Z0JBQ1ZkO2FBQ0g7UUFDTDtJQUNKO0lBQ0EsT0FBT1k7QUFDWDtBQUNBLFNBQVNNLHVCQUF1QkMsS0FBSztJQUNqQyxJQUFJLE9BQU9BLFVBQVUsWUFBWSxPQUFPQSxVQUFVLFlBQVksQ0FBQ0MsTUFBTUQsVUFBVSxPQUFPQSxVQUFVLFdBQVc7UUFDdkcsT0FBT0UsT0FBT0Y7SUFDbEIsT0FBTztRQUNILE9BQU87SUFDWDtBQUNKO0FBQ0EsU0FBU2hCLHVCQUF1Qm1CLFFBQVE7SUFDcEMsTUFBTUMsU0FBUyxJQUFJQztJQUNuQjNCLE9BQU80QixPQUFPLENBQUNILFVBQVVULE9BQU8sQ0FBQyxDQUFDTTtRQUM5QixJQUFJLENBQUNMLEtBQUtkLE1BQU0sR0FBR21CO1FBQ25CLElBQUlKLE1BQU1DLE9BQU8sQ0FBQ2hCLFFBQVE7WUFDdEJBLE1BQU1hLE9BQU8sQ0FBQyxDQUFDYSxPQUFPSCxPQUFPSSxNQUFNLENBQUNiLEtBQUtJLHVCQUF1QlE7UUFDcEUsT0FBTztZQUNISCxPQUFPSyxHQUFHLENBQUNkLEtBQUtJLHVCQUF1QmxCO1FBQzNDO0lBQ0o7SUFDQSxPQUFPdUI7QUFDWDtBQUNBLFNBQVNuQixPQUFPRSxNQUFNO0lBQ2xCLElBQUksSUFBSXVCLE9BQU9DLFVBQVVDLE1BQU0sRUFBRUMsbUJBQW1CLElBQUlqQixNQUFNYyxPQUFPLElBQUlBLE9BQU8sSUFBSSxJQUFJSSxPQUFPLEdBQUdBLE9BQU9KLE1BQU1JLE9BQU87UUFDbEhELGdCQUFnQixDQUFDQyxPQUFPLEVBQUUsR0FBR0gsU0FBUyxDQUFDRyxLQUFLO0lBQ2hEO0lBQ0FELGlCQUFpQm5CLE9BQU8sQ0FBQyxDQUFDRjtRQUN0QkksTUFBTW1CLElBQUksQ0FBQ3ZCLGFBQWF3QixJQUFJLElBQUl0QixPQUFPLENBQUMsQ0FBQ0MsTUFBTVIsT0FBTzhCLE1BQU0sQ0FBQ3RCO1FBQzdESCxhQUFhRSxPQUFPLENBQUMsQ0FBQ2IsT0FBT2MsTUFBTVIsT0FBT3FCLE1BQU0sQ0FBQ2IsS0FBS2Q7SUFDMUQ7SUFDQSxPQUFPTTtBQUNYLEVBRUEsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanM/MDE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNlYXJjaFBhcmFtc1RvVXJsUXVlcnk6IG51bGwsXG4gICAgdXJsUXVlcnlUb1NlYXJjaFBhcmFtczogbnVsbCxcbiAgICBhc3NpZ246IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgc2VhcmNoUGFyYW1zVG9VcmxRdWVyeTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzZWFyY2hQYXJhbXNUb1VybFF1ZXJ5O1xuICAgIH0sXG4gICAgdXJsUXVlcnlUb1NlYXJjaFBhcmFtczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB1cmxRdWVyeVRvU2VhcmNoUGFyYW1zO1xuICAgIH0sXG4gICAgYXNzaWduOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFzc2lnbjtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIHNlYXJjaFBhcmFtc1RvVXJsUXVlcnkoc2VhcmNoUGFyYW1zKSB7XG4gICAgY29uc3QgcXVlcnkgPSB7fTtcbiAgICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSk9PntcbiAgICAgICAgaWYgKHR5cGVvZiBxdWVyeVtrZXldID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBxdWVyeVtrZXldID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShxdWVyeVtrZXldKSkge1xuICAgICAgICAgICAgcXVlcnlba2V5XS5wdXNoKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHF1ZXJ5W2tleV0gPSBbXG4gICAgICAgICAgICAgICAgcXVlcnlba2V5XSxcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBxdWVyeTtcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0ocGFyYW0pIHtcbiAgICBpZiAodHlwZW9mIHBhcmFtID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBwYXJhbSA9PT0gXCJudW1iZXJcIiAmJiAhaXNOYU4ocGFyYW0pIHx8IHR5cGVvZiBwYXJhbSA9PT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhwYXJhbSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxufVxuZnVuY3Rpb24gdXJsUXVlcnlUb1NlYXJjaFBhcmFtcyh1cmxRdWVyeSkge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBPYmplY3QuZW50cmllcyh1cmxRdWVyeSkuZm9yRWFjaCgocGFyYW0pPT57XG4gICAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBwYXJhbTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKChpdGVtKT0+cmVzdWx0LmFwcGVuZChrZXksIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0oaXRlbSkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdC5zZXQoa2V5LCBzdHJpbmdpZnlVcmxRdWVyeVBhcmFtKHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gYXNzaWduKHRhcmdldCkge1xuICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHNlYXJjaFBhcmFtc0xpc3QgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKyl7XG4gICAgICAgIHNlYXJjaFBhcmFtc0xpc3RbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBzZWFyY2hQYXJhbXNMaXN0LmZvckVhY2goKHNlYXJjaFBhcmFtcyk9PntcbiAgICAgICAgQXJyYXkuZnJvbShzZWFyY2hQYXJhbXMua2V5cygpKS5mb3JFYWNoKChrZXkpPT50YXJnZXQuZGVsZXRlKGtleSkpO1xuICAgICAgICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSk9PnRhcmdldC5hcHBlbmQoa2V5LCB2YWx1ZSkpO1xuICAgIH0pO1xuICAgIHJldHVybiB0YXJnZXQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5c3RyaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsInNlYXJjaFBhcmFtc1RvVXJsUXVlcnkiLCJ1cmxRdWVyeVRvU2VhcmNoUGFyYW1zIiwiYXNzaWduIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwic2VhcmNoUGFyYW1zIiwicXVlcnkiLCJmb3JFYWNoIiwia2V5IiwiQXJyYXkiLCJpc0FycmF5IiwicHVzaCIsInN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0iLCJwYXJhbSIsImlzTmFOIiwiU3RyaW5nIiwidXJsUXVlcnkiLCJyZXN1bHQiLCJVUkxTZWFyY2hQYXJhbXMiLCJlbnRyaWVzIiwiaXRlbSIsImFwcGVuZCIsInNldCIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzZWFyY2hQYXJhbXNMaXN0IiwiX2tleSIsImZyb20iLCJrZXlzIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-matcher.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/route-matcher.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getRouteMatcher\", ({\n    enumerable: true,\n    get: function() {\n        return getRouteMatcher;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nfunction getRouteMatcher(param) {\n    let { re, groups } = param;\n    return (pathname)=>{\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const decode = (param)=>{\n            try {\n                return decodeURIComponent(param);\n            } catch (_) {\n                throw new _utils.DecodeError(\"failed to decode param\");\n            }\n        };\n        const params = {};\n        Object.keys(groups).forEach((slugName)=>{\n            const g = groups[slugName];\n            const m = routeMatch[g.pos];\n            if (m !== undefined) {\n                params[slugName] = ~m.indexOf(\"/\") ? m.split(\"/\").map((entry)=>decode(entry)) : g.repeat ? [\n                    decode(m)\n                ] : decode(m);\n            }\n        });\n        return params;\n    };\n} //# sourceMappingURL=route-matcher.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtbWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsbURBQWtEO0lBQzlDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMscUZBQWE7QUFDcEMsU0FBU0YsZ0JBQWdCRyxLQUFLO0lBQzFCLElBQUksRUFBRUMsRUFBRSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Y7SUFDckIsT0FBTyxDQUFDRztRQUNKLE1BQU1DLGFBQWFILEdBQUdJLElBQUksQ0FBQ0Y7UUFDM0IsSUFBSSxDQUFDQyxZQUFZO1lBQ2IsT0FBTztRQUNYO1FBQ0EsTUFBTUUsU0FBUyxDQUFDTjtZQUNaLElBQUk7Z0JBQ0EsT0FBT08sbUJBQW1CUDtZQUM5QixFQUFFLE9BQU9RLEdBQUc7Z0JBQ1IsTUFBTSxJQUFJVixPQUFPVyxXQUFXLENBQUM7WUFDakM7UUFDSjtRQUNBLE1BQU1DLFNBQVMsQ0FBQztRQUNoQm5CLE9BQU9vQixJQUFJLENBQUNULFFBQVFVLE9BQU8sQ0FBQyxDQUFDQztZQUN6QixNQUFNQyxJQUFJWixNQUFNLENBQUNXLFNBQVM7WUFDMUIsTUFBTUUsSUFBSVgsVUFBVSxDQUFDVSxFQUFFRSxHQUFHLENBQUM7WUFDM0IsSUFBSUQsTUFBTUUsV0FBVztnQkFDakJQLE1BQU0sQ0FBQ0csU0FBUyxHQUFHLENBQUNFLEVBQUVHLE9BQU8sQ0FBQyxPQUFPSCxFQUFFSSxLQUFLLENBQUMsS0FBS0MsR0FBRyxDQUFDLENBQUNDLFFBQVFmLE9BQU9lLFVBQVVQLEVBQUVRLE1BQU0sR0FBRztvQkFDdkZoQixPQUFPUztpQkFDVixHQUFHVCxPQUFPUztZQUNmO1FBQ0o7UUFDQSxPQUFPTDtJQUNYO0FBQ0osRUFFQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yb3V0ZS1tYXRjaGVyLmpzP2M4NmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRSb3V0ZU1hdGNoZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldFJvdXRlTWF0Y2hlcjtcbiAgICB9XG59KTtcbmNvbnN0IF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcbmZ1bmN0aW9uIGdldFJvdXRlTWF0Y2hlcihwYXJhbSkge1xuICAgIGxldCB7IHJlLCBncm91cHMgfSA9IHBhcmFtO1xuICAgIHJldHVybiAocGF0aG5hbWUpPT57XG4gICAgICAgIGNvbnN0IHJvdXRlTWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lKTtcbiAgICAgICAgaWYgKCFyb3V0ZU1hdGNoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVjb2RlID0gKHBhcmFtKT0+e1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgX3V0aWxzLkRlY29kZUVycm9yKFwiZmFpbGVkIHRvIGRlY29kZSBwYXJhbVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcGFyYW1zID0ge307XG4gICAgICAgIE9iamVjdC5rZXlzKGdyb3VwcykuZm9yRWFjaCgoc2x1Z05hbWUpPT57XG4gICAgICAgICAgICBjb25zdCBnID0gZ3JvdXBzW3NsdWdOYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IG0gPSByb3V0ZU1hdGNoW2cucG9zXTtcbiAgICAgICAgICAgIGlmIChtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBwYXJhbXNbc2x1Z05hbWVdID0gfm0uaW5kZXhPZihcIi9cIikgPyBtLnNwbGl0KFwiL1wiKS5tYXAoKGVudHJ5KT0+ZGVjb2RlKGVudHJ5KSkgOiBnLnJlcGVhdCA/IFtcbiAgICAgICAgICAgICAgICAgICAgZGVjb2RlKG0pXG4gICAgICAgICAgICAgICAgXSA6IGRlY29kZShtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm91dGUtbWF0Y2hlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0Um91dGVNYXRjaGVyIiwiX3V0aWxzIiwicmVxdWlyZSIsInBhcmFtIiwicmUiLCJncm91cHMiLCJwYXRobmFtZSIsInJvdXRlTWF0Y2giLCJleGVjIiwiZGVjb2RlIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiXyIsIkRlY29kZUVycm9yIiwicGFyYW1zIiwia2V5cyIsImZvckVhY2giLCJzbHVnTmFtZSIsImciLCJtIiwicG9zIiwidW5kZWZpbmVkIiwiaW5kZXhPZiIsInNwbGl0IiwibWFwIiwiZW50cnkiLCJyZXBlYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-matcher.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-regex.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/route-regex.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getRouteRegex: function() {\n        return getRouteRegex;\n    },\n    getNamedRouteRegex: function() {\n        return getNamedRouteRegex;\n    },\n    getNamedMiddlewareRegex: function() {\n        return getNamedMiddlewareRegex;\n    }\n});\nconst _interceptionroutes = __webpack_require__(/*! ../../../../server/future/helpers/interception-routes */ \"(app-pages-browser)/./node_modules/next/dist/server/future/helpers/interception-routes.js\");\nconst _escaperegexp = __webpack_require__(/*! ../../escape-regexp */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/escape-regexp.js\");\nconst _removetrailingslash = __webpack_require__(/*! ./remove-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\");\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst NEXT_INTERCEPTION_MARKER_PREFIX = \"nxtI\";\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route. Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n */ function parseParameter(param) {\n    const optional = param.startsWith(\"[\") && param.endsWith(\"]\");\n    if (optional) {\n        param = param.slice(1, -1);\n    }\n    const repeat = param.startsWith(\"...\");\n    if (repeat) {\n        param = param.slice(3);\n    }\n    return {\n        key: param,\n        repeat,\n        optional\n    };\n}\nfunction getParametrizedRoute(route) {\n    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split(\"/\");\n    const groups = {};\n    let groupIndex = 1;\n    return {\n        parameterizedRoute: segments.map((segment)=>{\n            const markerMatch = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));\n            const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n            ;\n            if (markerMatch && paramMatches) {\n                const { key, optional, repeat } = parseParameter(paramMatches[1]);\n                groups[key] = {\n                    pos: groupIndex++,\n                    repeat,\n                    optional\n                };\n                return \"/\" + (0, _escaperegexp.escapeStringRegexp)(markerMatch) + \"([^/]+?)\";\n            } else if (paramMatches) {\n                const { key, repeat, optional } = parseParameter(paramMatches[1]);\n                groups[key] = {\n                    pos: groupIndex++,\n                    repeat,\n                    optional\n                };\n                return repeat ? optional ? \"(?:/(.+?))?\" : \"/(.+?)\" : \"/([^/]+?)\";\n            } else {\n                return \"/\" + (0, _escaperegexp.escapeStringRegexp)(segment);\n            }\n        }).join(\"\"),\n        groups\n    };\n}\nfunction getRouteRegex(normalizedRoute) {\n    const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute);\n    return {\n        re: new RegExp(\"^\" + parameterizedRoute + \"(?:/)?$\"),\n        groups: groups\n    };\n}\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */ function buildGetSafeRouteKey() {\n    let i = 0;\n    return ()=>{\n        let routeKey = \"\";\n        let j = ++i;\n        while(j > 0){\n            routeKey += String.fromCharCode(97 + (j - 1) % 26);\n            j = Math.floor((j - 1) / 26);\n        }\n        return routeKey;\n    };\n}\nfunction getSafeKeyFromSegment(param) {\n    let { interceptionMarker, getSafeRouteKey, segment, routeKeys, keyPrefix } = param;\n    const { key, optional, repeat } = parseParameter(segment);\n    // replace any non-word characters since they can break\n    // the named regex\n    let cleanedKey = key.replace(/\\W/g, \"\");\n    if (keyPrefix) {\n        cleanedKey = \"\" + keyPrefix + cleanedKey;\n    }\n    let invalidKey = false;\n    // check if the key is still invalid and fallback to using a known\n    // safe key\n    if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n        invalidKey = true;\n    }\n    if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n        invalidKey = true;\n    }\n    if (invalidKey) {\n        cleanedKey = getSafeRouteKey();\n    }\n    if (keyPrefix) {\n        routeKeys[cleanedKey] = \"\" + keyPrefix + key;\n    } else {\n        routeKeys[cleanedKey] = key;\n    }\n    // if the segment has an interception marker, make sure that's part of the regex pattern\n    // this is to ensure that the route with the interception marker doesn't incorrectly match\n    // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n    const interceptionPrefix = interceptionMarker ? (0, _escaperegexp.escapeStringRegexp)(interceptionMarker) : \"\";\n    return repeat ? optional ? \"(?:/\" + interceptionPrefix + \"(?<\" + cleanedKey + \">.+?))?\" : \"/\" + interceptionPrefix + \"(?<\" + cleanedKey + \">.+?)\" : \"/\" + interceptionPrefix + \"(?<\" + cleanedKey + \">[^/]+?)\";\n}\nfunction getNamedParametrizedRoute(route, prefixRouteKeys) {\n    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split(\"/\");\n    const getSafeRouteKey = buildGetSafeRouteKey();\n    const routeKeys = {};\n    return {\n        namedParameterizedRoute: segments.map((segment)=>{\n            const hasInterceptionMarker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.some((m)=>segment.startsWith(m));\n            const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n            ;\n            if (hasInterceptionMarker && paramMatches) {\n                const [usedMarker] = segment.split(paramMatches[0]);\n                return getSafeKeyFromSegment({\n                    getSafeRouteKey,\n                    interceptionMarker: usedMarker,\n                    segment: paramMatches[1],\n                    routeKeys,\n                    keyPrefix: prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : undefined\n                });\n            } else if (paramMatches) {\n                return getSafeKeyFromSegment({\n                    getSafeRouteKey,\n                    segment: paramMatches[1],\n                    routeKeys,\n                    keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined\n                });\n            } else {\n                return \"/\" + (0, _escaperegexp.escapeStringRegexp)(segment);\n            }\n        }).join(\"\"),\n        routeKeys\n    };\n}\nfunction getNamedRouteRegex(normalizedRoute, prefixRouteKey) {\n    const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey);\n    return {\n        ...getRouteRegex(normalizedRoute),\n        namedRegex: \"^\" + result.namedParameterizedRoute + \"(?:/)?$\",\n        routeKeys: result.routeKeys\n    };\n}\nfunction getNamedMiddlewareRegex(normalizedRoute, options) {\n    const { parameterizedRoute } = getParametrizedRoute(normalizedRoute);\n    const { catchAll = true } = options;\n    if (parameterizedRoute === \"/\") {\n        let catchAllRegex = catchAll ? \".*\" : \"\";\n        return {\n            namedRegex: \"^/\" + catchAllRegex + \"$\"\n        };\n    }\n    const { namedParameterizedRoute } = getNamedParametrizedRoute(normalizedRoute, false);\n    let catchAllGroupedRegex = catchAll ? \"(?:(/.*)?)\" : \"\";\n    return {\n        namedRegex: \"^\" + namedParameterizedRoute + catchAllGroupedRegex + \"$\"\n    };\n} //# sourceMappingURL=route-regex.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-regex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getSortedRoutes\", ({\n    enumerable: true,\n    get: function() {\n        return getSortedRoutes;\n    }\n}));\nclass UrlNode {\n    insert(urlPath) {\n        this._insert(urlPath.split(\"/\").filter(Boolean), [], false);\n    }\n    smoosh() {\n        return this._smoosh();\n    }\n    _smoosh(prefix) {\n        if (prefix === void 0) prefix = \"/\";\n        const childrenPaths = [\n            ...this.children.keys()\n        ].sort();\n        if (this.slugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[]\"), 1);\n        }\n        if (this.restSlugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[...]\"), 1);\n        }\n        if (this.optionalRestSlugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[[...]]\"), 1);\n        }\n        const routes = childrenPaths.map((c)=>this.children.get(c)._smoosh(\"\" + prefix + c + \"/\")).reduce((prev, curr)=>[\n                ...prev,\n                ...curr\n            ], []);\n        if (this.slugName !== null) {\n            routes.push(...this.children.get(\"[]\")._smoosh(prefix + \"[\" + this.slugName + \"]/\"));\n        }\n        if (!this.placeholder) {\n            const r = prefix === \"/\" ? \"/\" : prefix.slice(0, -1);\n            if (this.optionalRestSlugName != null) {\n                throw new Error('You cannot define a route with the same specificity as a optional catch-all route (\"' + r + '\" and \"' + r + \"[[...\" + this.optionalRestSlugName + ']]\").');\n            }\n            routes.unshift(r);\n        }\n        if (this.restSlugName !== null) {\n            routes.push(...this.children.get(\"[...]\")._smoosh(prefix + \"[...\" + this.restSlugName + \"]/\"));\n        }\n        if (this.optionalRestSlugName !== null) {\n            routes.push(...this.children.get(\"[[...]]\")._smoosh(prefix + \"[[...\" + this.optionalRestSlugName + \"]]/\"));\n        }\n        return routes;\n    }\n    _insert(urlPaths, slugNames, isCatchAll) {\n        if (urlPaths.length === 0) {\n            this.placeholder = false;\n            return;\n        }\n        if (isCatchAll) {\n            throw new Error(\"Catch-all must be the last part of the URL.\");\n        }\n        // The next segment in the urlPaths list\n        let nextSegment = urlPaths[0];\n        // Check if the segment matches `[something]`\n        if (nextSegment.startsWith(\"[\") && nextSegment.endsWith(\"]\")) {\n            // Strip `[` and `]`, leaving only `something`\n            let segmentName = nextSegment.slice(1, -1);\n            let isOptional = false;\n            if (segmentName.startsWith(\"[\") && segmentName.endsWith(\"]\")) {\n                // Strip optional `[` and `]`, leaving only `something`\n                segmentName = segmentName.slice(1, -1);\n                isOptional = true;\n            }\n            if (segmentName.startsWith(\"...\")) {\n                // Strip `...`, leaving only `something`\n                segmentName = segmentName.substring(3);\n                isCatchAll = true;\n            }\n            if (segmentName.startsWith(\"[\") || segmentName.endsWith(\"]\")) {\n                throw new Error(\"Segment names may not start or end with extra brackets ('\" + segmentName + \"').\");\n            }\n            if (segmentName.startsWith(\".\")) {\n                throw new Error(\"Segment names may not start with erroneous periods ('\" + segmentName + \"').\");\n            }\n            function handleSlug(previousSlug, nextSlug) {\n                if (previousSlug !== null) {\n                    // If the specific segment already has a slug but the slug is not `something`\n                    // This prevents collisions like:\n                    // pages/[post]/index.js\n                    // pages/[id]/index.js\n                    // Because currently multiple dynamic params on the same segment level are not supported\n                    if (previousSlug !== nextSlug) {\n                        // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n                        throw new Error(\"You cannot use different slug names for the same dynamic path ('\" + previousSlug + \"' !== '\" + nextSlug + \"').\");\n                    }\n                }\n                slugNames.forEach((slug)=>{\n                    if (slug === nextSlug) {\n                        throw new Error('You cannot have the same slug name \"' + nextSlug + '\" repeat within a single dynamic path');\n                    }\n                    if (slug.replace(/\\W/g, \"\") === nextSegment.replace(/\\W/g, \"\")) {\n                        throw new Error('You cannot have the slug names \"' + slug + '\" and \"' + nextSlug + '\" differ only by non-word symbols within a single dynamic path');\n                    }\n                });\n                slugNames.push(nextSlug);\n            }\n            if (isCatchAll) {\n                if (isOptional) {\n                    if (this.restSlugName != null) {\n                        throw new Error('You cannot use both an required and optional catch-all route at the same level (\"[...' + this.restSlugName + ']\" and \"' + urlPaths[0] + '\" ).');\n                    }\n                    handleSlug(this.optionalRestSlugName, segmentName);\n                    // slugName is kept as it can only be one particular slugName\n                    this.optionalRestSlugName = segmentName;\n                    // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n                    nextSegment = \"[[...]]\";\n                } else {\n                    if (this.optionalRestSlugName != null) {\n                        throw new Error('You cannot use both an optional and required catch-all route at the same level (\"[[...' + this.optionalRestSlugName + ']]\" and \"' + urlPaths[0] + '\").');\n                    }\n                    handleSlug(this.restSlugName, segmentName);\n                    // slugName is kept as it can only be one particular slugName\n                    this.restSlugName = segmentName;\n                    // nextSegment is overwritten to [...] so that it can later be sorted specifically\n                    nextSegment = \"[...]\";\n                }\n            } else {\n                if (isOptional) {\n                    throw new Error('Optional route parameters are not yet supported (\"' + urlPaths[0] + '\").');\n                }\n                handleSlug(this.slugName, segmentName);\n                // slugName is kept as it can only be one particular slugName\n                this.slugName = segmentName;\n                // nextSegment is overwritten to [] so that it can later be sorted specifically\n                nextSegment = \"[]\";\n            }\n        }\n        // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n        if (!this.children.has(nextSegment)) {\n            this.children.set(nextSegment, new UrlNode());\n        }\n        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);\n    }\n    constructor(){\n        this.placeholder = true;\n        this.children = new Map();\n        this.slugName = null;\n        this.restSlugName = null;\n        this.optionalRestSlugName = null;\n    }\n}\nfunction getSortedRoutes(normalizedPages) {\n    // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n    // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n    // Only 1 dynamic segment per nesting level\n    // So in the case that is test/integration/dynamic-routing it'll be this:\n    // pages/[post]/comments.js\n    // pages/blog/[post]/comment/[id].js\n    // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n    // So in this case `UrlNode` created here has `this.slugName === 'post'`\n    // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n    // Instead what has to be passed through is the upwards path's dynamic names\n    const root = new UrlNode();\n    // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n    normalizedPages.forEach((pagePath)=>root.insert(pagePath));\n    // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n    return root.smoosh();\n} //# sourceMappingURL=sorted-routes.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/side-effect.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return SideEffect;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst isServer = \"object\" === \"undefined\";\nconst useClientOnlyLayoutEffect = isServer ? ()=>{} : _react.useLayoutEffect;\nconst useClientOnlyEffect = isServer ? ()=>{} : _react.useEffect;\nfunction SideEffect(props) {\n    _s();\n    const { headManager, reduceComponentsToState } = props;\n    function emitChange() {\n        if (headManager && headManager.mountedInstances) {\n            const headElements = _react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));\n            headManager.updateHead(reduceComponentsToState(headElements, props));\n        }\n    }\n    if (isServer) {\n        var _headManager_mountedInstances;\n        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);\n        emitChange();\n    }\n    useClientOnlyLayoutEffect(()=>{\n        var _headManager_mountedInstances;\n        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);\n        return ()=>{\n            var _headManager_mountedInstances;\n            headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.delete(props.children);\n        };\n    });\n    // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n    // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n    // being rendered, we only trigger the method from the last one.\n    // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n    // singleton in the layout effect pass, and actually trigger it in the effect pass.\n    useClientOnlyLayoutEffect(()=>{\n        if (headManager) {\n            headManager._pendingUpdate = emitChange;\n        }\n        return ()=>{\n            if (headManager) {\n                headManager._pendingUpdate = emitChange;\n            }\n        };\n    });\n    useClientOnlyEffect(()=>{\n        if (headManager && headManager._pendingUpdate) {\n            headManager._pendingUpdate();\n            headManager._pendingUpdate = null;\n        }\n        return ()=>{\n            if (headManager && headManager._pendingUpdate) {\n                headManager._pendingUpdate();\n                headManager._pendingUpdate = null;\n            }\n        };\n    });\n    return null;\n} //# sourceMappingURL=side-effect.js.map\n_s(SideEffect, \"gHVkikNHNxjVdD11eJBzaqkCiPY=\", false, function() {\n    return [\n        useClientOnlyLayoutEffect,\n        useClientOnlyLayoutEffect,\n        useClientOnlyEffect\n    ];\n});\n_c = SideEffect;\nvar _c;\n$RefreshReg$(_c, \"SideEffect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9zaWRlLWVmZmVjdC5qcyIsIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0FBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCwyQ0FBMEM7SUFDdENJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxtRkFBTztBQUM5QixNQUFNQyxXQUFXLGFBQWtCO0FBQ25DLE1BQU1DLDRCQUE0QkQsV0FBVyxLQUFLLElBQUlGLE9BQU9JLGVBQWU7QUFDNUUsTUFBTUMsc0JBQXNCSCxXQUFXLEtBQUssSUFBSUYsT0FBT00sU0FBUztBQUNoRSxTQUFTUCxXQUFXUSxLQUFLOztJQUNyQixNQUFNLEVBQUVDLFdBQVcsRUFBRUMsdUJBQXVCLEVBQUUsR0FBR0Y7SUFDakQsU0FBU0c7UUFDTCxJQUFJRixlQUFlQSxZQUFZRyxnQkFBZ0IsRUFBRTtZQUM3QyxNQUFNQyxlQUFlWixPQUFPYSxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTUMsSUFBSSxDQUFDUixZQUFZRyxnQkFBZ0IsRUFBRU0sTUFBTSxDQUFDQztZQUM3RlYsWUFBWVcsVUFBVSxDQUFDVix3QkFBd0JHLGNBQWNMO1FBQ2pFO0lBQ0o7SUFDQSxJQUFJTCxVQUFVO1FBQ1YsSUFBSWtCO1FBQ0paLGVBQWUsT0FBTyxLQUFLLElBQUksQ0FBQ1ksZ0NBQWdDWixZQUFZRyxnQkFBZ0IsS0FBSyxPQUFPLEtBQUssSUFBSVMsOEJBQThCQyxHQUFHLENBQUNkLE1BQU1lLFFBQVE7UUFDaktaO0lBQ0o7SUFDQVAsMEJBQTBCO1FBQ3RCLElBQUlpQjtRQUNKWixlQUFlLE9BQU8sS0FBSyxJQUFJLENBQUNZLGdDQUFnQ1osWUFBWUcsZ0JBQWdCLEtBQUssT0FBTyxLQUFLLElBQUlTLDhCQUE4QkMsR0FBRyxDQUFDZCxNQUFNZSxRQUFRO1FBQ2pLLE9BQU87WUFDSCxJQUFJRjtZQUNKWixlQUFlLE9BQU8sS0FBSyxJQUFJLENBQUNZLGdDQUFnQ1osWUFBWUcsZ0JBQWdCLEtBQUssT0FBTyxLQUFLLElBQUlTLDhCQUE4QkcsTUFBTSxDQUFDaEIsTUFBTWUsUUFBUTtRQUN4SztJQUNKO0lBQ0Esa0ZBQWtGO0lBQ2xGLG9GQUFvRjtJQUNwRixnRUFBZ0U7SUFDaEUscUZBQXFGO0lBQ3JGLG1GQUFtRjtJQUNuRm5CLDBCQUEwQjtRQUN0QixJQUFJSyxhQUFhO1lBQ2JBLFlBQVlnQixjQUFjLEdBQUdkO1FBQ2pDO1FBQ0EsT0FBTztZQUNILElBQUlGLGFBQWE7Z0JBQ2JBLFlBQVlnQixjQUFjLEdBQUdkO1lBQ2pDO1FBQ0o7SUFDSjtJQUNBTCxvQkFBb0I7UUFDaEIsSUFBSUcsZUFBZUEsWUFBWWdCLGNBQWMsRUFBRTtZQUMzQ2hCLFlBQVlnQixjQUFjO1lBQzFCaEIsWUFBWWdCLGNBQWMsR0FBRztRQUNqQztRQUNBLE9BQU87WUFDSCxJQUFJaEIsZUFBZUEsWUFBWWdCLGNBQWMsRUFBRTtnQkFDM0NoQixZQUFZZ0IsY0FBYztnQkFDMUJoQixZQUFZZ0IsY0FBYyxHQUFHO1lBQ2pDO1FBQ0o7SUFDSjtJQUNBLE9BQU87QUFDWCxFQUVBLHVDQUF1QztHQW5EOUJ6Qjs7UUFhTEk7UUFhQUE7UUFVQUU7OztLQXBDS04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3NpZGUtZWZmZWN0LmpzPzQwOGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBTaWRlRWZmZWN0O1xuICAgIH1cbn0pO1xuY29uc3QgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiO1xuY29uc3QgdXNlQ2xpZW50T25seUxheW91dEVmZmVjdCA9IGlzU2VydmVyID8gKCk9Pnt9IDogX3JlYWN0LnVzZUxheW91dEVmZmVjdDtcbmNvbnN0IHVzZUNsaWVudE9ubHlFZmZlY3QgPSBpc1NlcnZlciA/ICgpPT57fSA6IF9yZWFjdC51c2VFZmZlY3Q7XG5mdW5jdGlvbiBTaWRlRWZmZWN0KHByb3BzKSB7XG4gICAgY29uc3QgeyBoZWFkTWFuYWdlciwgcmVkdWNlQ29tcG9uZW50c1RvU3RhdGUgfSA9IHByb3BzO1xuICAgIGZ1bmN0aW9uIGVtaXRDaGFuZ2UoKSB7XG4gICAgICAgIGlmIChoZWFkTWFuYWdlciAmJiBoZWFkTWFuYWdlci5tb3VudGVkSW5zdGFuY2VzKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFkRWxlbWVudHMgPSBfcmVhY3QuQ2hpbGRyZW4udG9BcnJheShBcnJheS5mcm9tKGhlYWRNYW5hZ2VyLm1vdW50ZWRJbnN0YW5jZXMpLmZpbHRlcihCb29sZWFuKSk7XG4gICAgICAgICAgICBoZWFkTWFuYWdlci51cGRhdGVIZWFkKHJlZHVjZUNvbXBvbmVudHNUb1N0YXRlKGhlYWRFbGVtZW50cywgcHJvcHMpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNTZXJ2ZXIpIHtcbiAgICAgICAgdmFyIF9oZWFkTWFuYWdlcl9tb3VudGVkSW5zdGFuY2VzO1xuICAgICAgICBoZWFkTWFuYWdlciA9PSBudWxsID8gdm9pZCAwIDogKF9oZWFkTWFuYWdlcl9tb3VudGVkSW5zdGFuY2VzID0gaGVhZE1hbmFnZXIubW91bnRlZEluc3RhbmNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9oZWFkTWFuYWdlcl9tb3VudGVkSW5zdGFuY2VzLmFkZChwcm9wcy5jaGlsZHJlbik7XG4gICAgICAgIGVtaXRDaGFuZ2UoKTtcbiAgICB9XG4gICAgdXNlQ2xpZW50T25seUxheW91dEVmZmVjdCgoKT0+e1xuICAgICAgICB2YXIgX2hlYWRNYW5hZ2VyX21vdW50ZWRJbnN0YW5jZXM7XG4gICAgICAgIGhlYWRNYW5hZ2VyID09IG51bGwgPyB2b2lkIDAgOiAoX2hlYWRNYW5hZ2VyX21vdW50ZWRJbnN0YW5jZXMgPSBoZWFkTWFuYWdlci5tb3VudGVkSW5zdGFuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2hlYWRNYW5hZ2VyX21vdW50ZWRJbnN0YW5jZXMuYWRkKHByb3BzLmNoaWxkcmVuKTtcbiAgICAgICAgcmV0dXJuICgpPT57XG4gICAgICAgICAgICB2YXIgX2hlYWRNYW5hZ2VyX21vdW50ZWRJbnN0YW5jZXM7XG4gICAgICAgICAgICBoZWFkTWFuYWdlciA9PSBudWxsID8gdm9pZCAwIDogKF9oZWFkTWFuYWdlcl9tb3VudGVkSW5zdGFuY2VzID0gaGVhZE1hbmFnZXIubW91bnRlZEluc3RhbmNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9oZWFkTWFuYWdlcl9tb3VudGVkSW5zdGFuY2VzLmRlbGV0ZShwcm9wcy5jaGlsZHJlbik7XG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgLy8gV2UgbmVlZCB0byBjYWxsIGB1cGRhdGVIZWFkYCBtZXRob2Qgd2hlbmV2ZXIgdGhlIGBTaWRlRWZmZWN0YCBpcyB0cmlnZ2VyIGluIGFsbFxuICAgIC8vIGxpZmUtY3ljbGVzOiBtb3VudCwgdXBkYXRlLCB1bm1vdW50LiBIb3dldmVyLCBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgYFNpZGVFZmZlY3Rgc1xuICAgIC8vIGJlaW5nIHJlbmRlcmVkLCB3ZSBvbmx5IHRyaWdnZXIgdGhlIG1ldGhvZCBmcm9tIHRoZSBsYXN0IG9uZS5cbiAgICAvLyBUaGlzIGlzIGVuc3VyZWQgYnkga2VlcGluZyB0aGUgbGFzdCB1bmZsdXNoZWQgYHVwZGF0ZUhlYWRgIGluIHRoZSBgX3BlbmRpbmdVcGRhdGVgXG4gICAgLy8gc2luZ2xldG9uIGluIHRoZSBsYXlvdXQgZWZmZWN0IHBhc3MsIGFuZCBhY3R1YWxseSB0cmlnZ2VyIGl0IGluIHRoZSBlZmZlY3QgcGFzcy5cbiAgICB1c2VDbGllbnRPbmx5TGF5b3V0RWZmZWN0KCgpPT57XG4gICAgICAgIGlmIChoZWFkTWFuYWdlcikge1xuICAgICAgICAgICAgaGVhZE1hbmFnZXIuX3BlbmRpbmdVcGRhdGUgPSBlbWl0Q2hhbmdlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoKT0+e1xuICAgICAgICAgICAgaWYgKGhlYWRNYW5hZ2VyKSB7XG4gICAgICAgICAgICAgICAgaGVhZE1hbmFnZXIuX3BlbmRpbmdVcGRhdGUgPSBlbWl0Q2hhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHVzZUNsaWVudE9ubHlFZmZlY3QoKCk9PntcbiAgICAgICAgaWYgKGhlYWRNYW5hZ2VyICYmIGhlYWRNYW5hZ2VyLl9wZW5kaW5nVXBkYXRlKSB7XG4gICAgICAgICAgICBoZWFkTWFuYWdlci5fcGVuZGluZ1VwZGF0ZSgpO1xuICAgICAgICAgICAgaGVhZE1hbmFnZXIuX3BlbmRpbmdVcGRhdGUgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoKT0+e1xuICAgICAgICAgICAgaWYgKGhlYWRNYW5hZ2VyICYmIGhlYWRNYW5hZ2VyLl9wZW5kaW5nVXBkYXRlKSB7XG4gICAgICAgICAgICAgICAgaGVhZE1hbmFnZXIuX3BlbmRpbmdVcGRhdGUoKTtcbiAgICAgICAgICAgICAgICBoZWFkTWFuYWdlci5fcGVuZGluZ1VwZGF0ZSA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgcmV0dXJuIG51bGw7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZGUtZWZmZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJTaWRlRWZmZWN0IiwiX3JlYWN0IiwicmVxdWlyZSIsImlzU2VydmVyIiwidXNlQ2xpZW50T25seUxheW91dEVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZUNsaWVudE9ubHlFZmZlY3QiLCJ1c2VFZmZlY3QiLCJwcm9wcyIsImhlYWRNYW5hZ2VyIiwicmVkdWNlQ29tcG9uZW50c1RvU3RhdGUiLCJlbWl0Q2hhbmdlIiwibW91bnRlZEluc3RhbmNlcyIsImhlYWRFbGVtZW50cyIsIkNoaWxkcmVuIiwidG9BcnJheSIsIkFycmF5IiwiZnJvbSIsImZpbHRlciIsIkJvb2xlYW4iLCJ1cGRhdGVIZWFkIiwiX2hlYWRNYW5hZ2VyX21vdW50ZWRJbnN0YW5jZXMiLCJhZGQiLCJjaGlsZHJlbiIsImRlbGV0ZSIsIl9wZW5kaW5nVXBkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    WEB_VITALS: function() {\n        return WEB_VITALS;\n    },\n    execOnce: function() {\n        return execOnce;\n    },\n    isAbsoluteUrl: function() {\n        return isAbsoluteUrl;\n    },\n    getLocationOrigin: function() {\n        return getLocationOrigin;\n    },\n    getURL: function() {\n        return getURL;\n    },\n    getDisplayName: function() {\n        return getDisplayName;\n    },\n    isResSent: function() {\n        return isResSent;\n    },\n    normalizeRepeatedSlashes: function() {\n        return normalizeRepeatedSlashes;\n    },\n    loadGetInitialProps: function() {\n        return loadGetInitialProps;\n    },\n    SP: function() {\n        return SP;\n    },\n    ST: function() {\n        return ST;\n    },\n    DecodeError: function() {\n        return DecodeError;\n    },\n    NormalizeError: function() {\n        return NormalizeError;\n    },\n    PageNotFoundError: function() {\n        return PageNotFoundError;\n    },\n    MissingStaticPage: function() {\n        return MissingStaticPage;\n    },\n    MiddlewareNotFoundError: function() {\n        return MiddlewareNotFoundError;\n    },\n    stringifyError: function() {\n        return stringifyError;\n    }\n});\nconst WEB_VITALS = [\n    \"CLS\",\n    \"FCP\",\n    \"FID\",\n    \"INP\",\n    \"LCP\",\n    \"TTFB\"\n];\nfunction execOnce(fn) {\n    let used = false;\n    let result;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (!used) {\n            used = true;\n            result = fn(...args);\n        }\n        return result;\n    };\n}\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nconst isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? \":\" + port : \"\");\n}\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nfunction getDisplayName(Component) {\n    return typeof Component === \"string\" ? Component : Component.displayName || Component.name || \"Unknown\";\n}\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nfunction normalizeRepeatedSlashes(url) {\n    const urlParts = url.split(\"?\");\n    const urlNoQuery = urlParts[0];\n    return urlNoQuery // first we replace any non-encoded backslashes with forward\n    // then normalize repeated forward slashes\n    .replace(/\\\\/g, \"/\").replace(/\\/\\/+/g, \"/\") + (urlParts[1] ? \"?\" + urlParts.slice(1).join(\"?\") : \"\");\n}\nasync function loadGetInitialProps(App, ctx) {\n    if (true) {\n        var _App_prototype;\n        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n            const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || ctx.ctx && ctx.ctx.res;\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n        throw new Error(message);\n    }\n    if (true) {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n        }\n    }\n    return props;\n}\nconst SP = typeof performance !== \"undefined\";\nconst ST = SP && [\n    \"mark\",\n    \"measure\",\n    \"getEntriesByName\"\n].every((method)=>typeof performance[method] === \"function\");\nclass DecodeError extends Error {\n}\nclass NormalizeError extends Error {\n}\nclass PageNotFoundError extends Error {\n    constructor(page){\n        super();\n        this.code = \"ENOENT\";\n        this.name = \"PageNotFoundError\";\n        this.message = \"Cannot find module for page: \" + page;\n    }\n}\nclass MissingStaticPage extends Error {\n    constructor(page, message){\n        super();\n        this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n    }\n}\nclass MiddlewareNotFoundError extends Error {\n    constructor(){\n        super();\n        this.code = \"ENOENT\";\n        this.message = \"Cannot find the middleware module\";\n    }\n}\nfunction stringifyError(error) {\n    return JSON.stringify({\n        message: error.message,\n        stack: error.stack\n    });\n} //# sourceMappingURL=utils.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/layouts/DefaultLayout.tsx":
/*!**************************************************!*\
  !*** ./src/components/layouts/DefaultLayout.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DefaultLayout; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _shared_Sidebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/Sidebar */ \"(app-pages-browser)/./src/components/shared/Sidebar/index.tsx\");\n/* harmony import */ var _shared_Header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/Header */ \"(app-pages-browser)/./src/components/shared/Header/index.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction DefaultLayout(param) {\n    let { children } = param;\n    _s();\n    const [sidebarOpen, setSidebarOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex h-screen overflow-hidden\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_Sidebar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    sidebarOpen: sidebarOpen,\n                    setSidebarOpen: setSidebarOpen\n                }, void 0, false, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\layouts\\\\DefaultLayout.tsx\",\n                    lineNumber: 17,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative flex flex-1 flex-col overflow-y-auto overflow-x-hidden\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_Header__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            sidebarOpen: sidebarOpen,\n                            setSidebarOpen: setSidebarOpen\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\layouts\\\\DefaultLayout.tsx\",\n                            lineNumber: 23,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mx-auto max-w-screen-2xl p-4 md:p-6 2xl:p-10\",\n                                children: children\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\layouts\\\\DefaultLayout.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\layouts\\\\DefaultLayout.tsx\",\n                            lineNumber: 27,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\layouts\\\\DefaultLayout.tsx\",\n                    lineNumber: 21,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\layouts\\\\DefaultLayout.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this)\n    }, void 0, false);\n}\n_s(DefaultLayout, \"5rGDkYpGQ8fHM9RkMWnKOwsxadk=\");\n_c = DefaultLayout;\nvar _c;\n$RefreshReg$(_c, \"DefaultLayout\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2xheW91dHMvRGVmYXVsdExheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFDbUQ7QUFDWDtBQUNGO0FBRXZCLFNBQVNJLGNBQWMsS0FJckM7UUFKcUMsRUFDcENDLFFBQVEsRUFHVCxHQUpxQzs7SUFLcEMsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdOLCtDQUFRQSxDQUFDO0lBQy9DLHFCQUNFO2tCQUVFLDRFQUFDTztZQUFJQyxXQUFVOzs4QkFFYiw4REFBQ1AsdURBQU9BO29CQUFDSSxhQUFhQTtvQkFBYUMsZ0JBQWdCQTs7Ozs7OzhCQUluRCw4REFBQ0M7b0JBQUlDLFdBQVU7O3NDQUViLDhEQUFDTixzREFBTUE7NEJBQUNHLGFBQWFBOzRCQUFhQyxnQkFBZ0JBOzs7Ozs7c0NBSWxELDhEQUFDRztzQ0FDQyw0RUFBQ0Y7Z0NBQUlDLFdBQVU7MENBQ1pKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFVZjtHQWpDd0JEO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2xheW91dHMvRGVmYXVsdExheW91dC50c3g/ZDk0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgUmVhY3ROb2RlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgU2lkZWJhciBmcm9tIFwiLi4vc2hhcmVkL1NpZGViYXJcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4uL3NoYXJlZC9IZWFkZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGVmYXVsdExheW91dCh7XG4gIGNoaWxkcmVuLFxufToge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufSkge1xuICBjb25zdCBbc2lkZWJhck9wZW4sIHNldFNpZGViYXJPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgey8qIDwhLS0gPT09PT0gUGFnZSBXcmFwcGVyIFN0YXJ0ID09PT09IC0tPiAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBoLXNjcmVlbiBvdmVyZmxvdy1oaWRkZW5cIj5cbiAgICAgICAgey8qIDwhLS0gPT09PT0gU2lkZWJhciBTdGFydCA9PT09PSAtLT4gKi99XG4gICAgICAgIDxTaWRlYmFyIHNpZGViYXJPcGVuPXtzaWRlYmFyT3Blbn0gc2V0U2lkZWJhck9wZW49e3NldFNpZGViYXJPcGVufSAvPlxuICAgICAgICB7LyogPCEtLSA9PT09PSBTaWRlYmFyIEVuZCA9PT09PSAtLT4gKi99XG5cbiAgICAgICAgey8qIDwhLS0gPT09PT0gQ29udGVudCBBcmVhIFN0YXJ0ID09PT09IC0tPiAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZSBmbGV4IGZsZXgtMSBmbGV4LWNvbCBvdmVyZmxvdy15LWF1dG8gb3ZlcmZsb3cteC1oaWRkZW5cIj5cbiAgICAgICAgICB7LyogPCEtLSA9PT09PSBIZWFkZXIgU3RhcnQgPT09PT0gLS0+ICovfVxuICAgICAgICAgIDxIZWFkZXIgc2lkZWJhck9wZW49e3NpZGViYXJPcGVufSBzZXRTaWRlYmFyT3Blbj17c2V0U2lkZWJhck9wZW59IC8+XG4gICAgICAgICAgey8qIDwhLS0gPT09PT0gSGVhZGVyIEVuZCA9PT09PSAtLT4gKi99XG5cbiAgICAgICAgICB7LyogPCEtLSA9PT09PSBNYWluIENvbnRlbnQgU3RhcnQgPT09PT0gLS0+ICovfVxuICAgICAgICAgIDxtYWluPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteC1hdXRvIG1heC13LXNjcmVlbi0yeGwgcC00IG1kOnAtNiAyeGw6cC0xMFwiPlxuICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L21haW4+XG4gICAgICAgICAgey8qIDwhLS0gPT09PT0gTWFpbiBDb250ZW50IEVuZCA9PT09PSAtLT4gKi99XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7LyogPCEtLSA9PT09PSBDb250ZW50IEFyZWEgRW5kID09PT09IC0tPiAqL31cbiAgICAgIDwvZGl2PlxuICAgICAgey8qIDwhLS0gPT09PT0gUGFnZSBXcmFwcGVyIEVuZCA9PT09PSAtLT4gKi99XG4gICAgPC8+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsIlNpZGViYXIiLCJIZWFkZXIiLCJEZWZhdWx0TGF5b3V0IiwiY2hpbGRyZW4iLCJzaWRlYmFyT3BlbiIsInNldFNpZGViYXJPcGVuIiwiZGl2IiwiY2xhc3NOYW1lIiwibWFpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/layouts/DefaultLayout.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Header/DarkModeSwitcher.tsx":
/*!***********************************************************!*\
  !*** ./src/components/shared/Header/DarkModeSwitcher.tsx ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hooks_useColorMode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/useColorMode */ \"(app-pages-browser)/./src/hooks/useColorMode.tsx\");\n\nvar _s = $RefreshSig$();\n\nconst DarkModeSwitcher = ()=>{\n    _s();\n    const [colorMode, setColorMode] = (0,_hooks_useColorMode__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n            className: \"relative m-0 block h-7.5 w-14 rounded-full \".concat(colorMode === \"dark\" ? \"bg-primary\" : \"bg-stroke\"),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                    type: \"checkbox\",\n                    onChange: ()=>{\n                        if (typeof setColorMode === \"function\") {\n                            setColorMode(colorMode === \"light\" ? \"dark\" : \"light\");\n                        }\n                    },\n                    className: \"dur absolute top-0 z-50 m-0 h-full w-full cursor-pointer opacity-0\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                    lineNumber: 13,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"absolute left-[3px] top-1/2 flex h-6 w-6 -translate-y-1/2 translate-x-0 items-center justify-center rounded-full bg-white shadow-switcher duration-75 ease-linear \".concat(colorMode === \"dark\" && \"!right-[3px] !translate-x-full\"),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"dark:hidden\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                width: \"16\",\n                                height: \"16\",\n                                viewBox: \"0 0 16 16\",\n                                fill: \"none\",\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M7.99992 12.6666C10.5772 12.6666 12.6666 10.5772 12.6666 7.99992C12.6666 5.42259 10.5772 3.33325 7.99992 3.33325C5.42259 3.33325 3.33325 5.42259 3.33325 7.99992C3.33325 10.5772 5.42259 12.6666 7.99992 12.6666Z\",\n                                        fill: \"#969AA1\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                                        lineNumber: 35,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M8.00008 15.3067C7.63341 15.3067 7.33342 15.0334 7.33342 14.6667V14.6134C7.33342 14.2467 7.63341 13.9467 8.00008 13.9467C8.36675 13.9467 8.66675 14.2467 8.66675 14.6134C8.66675 14.9801 8.36675 15.3067 8.00008 15.3067ZM12.7601 13.4267C12.5867 13.4267 12.4201 13.3601 12.2867 13.2334L12.2001 13.1467C11.9401 12.8867 11.9401 12.4667 12.2001 12.2067C12.4601 11.9467 12.8801 11.9467 13.1401 12.2067L13.2267 12.2934C13.4867 12.5534 13.4867 12.9734 13.2267 13.2334C13.1001 13.3601 12.9334 13.4267 12.7601 13.4267ZM3.24008 13.4267C3.06675 13.4267 2.90008 13.3601 2.76675 13.2334C2.50675 12.9734 2.50675 12.5534 2.76675 12.2934L2.85342 12.2067C3.11342 11.9467 3.53341 11.9467 3.79341 12.2067C4.05341 12.4667 4.05341 12.8867 3.79341 13.1467L3.70675 13.2334C3.58008 13.3601 3.40675 13.4267 3.24008 13.4267ZM14.6667 8.66675H14.6134C14.2467 8.66675 13.9467 8.36675 13.9467 8.00008C13.9467 7.63341 14.2467 7.33342 14.6134 7.33342C14.9801 7.33342 15.3067 7.63341 15.3067 8.00008C15.3067 8.36675 15.0334 8.66675 14.6667 8.66675ZM1.38675 8.66675H1.33341C0.966748 8.66675 0.666748 8.36675 0.666748 8.00008C0.666748 7.63341 0.966748 7.33342 1.33341 7.33342C1.70008 7.33342 2.02675 7.63341 2.02675 8.00008C2.02675 8.36675 1.75341 8.66675 1.38675 8.66675ZM12.6734 3.99341C12.5001 3.99341 12.3334 3.92675 12.2001 3.80008C11.9401 3.54008 11.9401 3.12008 12.2001 2.86008L12.2867 2.77341C12.5467 2.51341 12.9667 2.51341 13.2267 2.77341C13.4867 3.03341 13.4867 3.45341 13.2267 3.71341L13.1401 3.80008C13.0134 3.92675 12.8467 3.99341 12.6734 3.99341ZM3.32675 3.99341C3.15341 3.99341 2.98675 3.92675 2.85342 3.80008L2.76675 3.70675C2.50675 3.44675 2.50675 3.02675 2.76675 2.76675C3.02675 2.50675 3.44675 2.50675 3.70675 2.76675L3.79341 2.85342C4.05341 3.11342 4.05341 3.53341 3.79341 3.79341C3.66675 3.92675 3.49341 3.99341 3.32675 3.99341ZM8.00008 2.02675C7.63341 2.02675 7.33342 1.75341 7.33342 1.38675V1.33341C7.33342 0.966748 7.63341 0.666748 8.00008 0.666748C8.36675 0.666748 8.66675 0.966748 8.66675 1.33341C8.66675 1.70008 8.36675 2.02675 8.00008 2.02675Z\",\n                                        fill: \"#969AA1\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                                        lineNumber: 39,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                            lineNumber: 27,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"hidden dark:inline-block\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                width: \"16\",\n                                height: \"16\",\n                                viewBox: \"0 0 16 16\",\n                                fill: \"none\",\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    d: \"M14.3533 10.62C14.2466 10.44 13.9466 10.16 13.1999 10.2933C12.7866 10.3667 12.3666 10.4 11.9466 10.38C10.3933 10.3133 8.98659 9.6 8.00659 8.5C7.13993 7.53333 6.60659 6.27333 6.59993 4.91333C6.59993 4.15333 6.74659 3.42 7.04659 2.72666C7.33993 2.05333 7.13326 1.7 6.98659 1.55333C6.83326 1.4 6.47326 1.18666 5.76659 1.48C3.03993 2.62666 1.35326 5.36 1.55326 8.28666C1.75326 11.04 3.68659 13.3933 6.24659 14.28C6.85993 14.4933 7.50659 14.62 8.17326 14.6467C8.27993 14.6533 8.38659 14.66 8.49326 14.66C10.7266 14.66 12.8199 13.6067 14.1399 11.8133C14.5866 11.1933 14.4666 10.8 14.3533 10.62Z\",\n                                    fill: \"#969AA1\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                                    lineNumber: 53,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                            lineNumber: 45,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n            lineNumber: 8,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DarkModeSwitcher.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DarkModeSwitcher, \"Cg19MR8e07Q3SRC3E07ExjOIoZ8=\", false, function() {\n    return [\n        _hooks_useColorMode__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n_c = DarkModeSwitcher;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DarkModeSwitcher);\nvar _c;\n$RefreshReg$(_c, \"DarkModeSwitcher\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3NoYXJlZC9IZWFkZXIvRGFya01vZGVTd2l0Y2hlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7QUFFaEQsTUFBTUMsbUJBQW1COztJQUN2QixNQUFNLENBQUNDLFdBQVdDLGFBQWEsR0FBR0gsK0RBQVlBO0lBRTlDLHFCQUNFLDhEQUFDSTtrQkFDQyw0RUFBQ0M7WUFDQ0MsV0FBVyw4Q0FFVixPQURDSixjQUFjLFNBQVMsZUFBZTs7OEJBR3hDLDhEQUFDSztvQkFDQ0MsTUFBSztvQkFDTEMsVUFBVTt3QkFDUixJQUFJLE9BQU9OLGlCQUFpQixZQUFZOzRCQUN0Q0EsYUFBYUQsY0FBYyxVQUFVLFNBQVM7d0JBQ2hEO29CQUNGO29CQUNBSSxXQUFVOzs7Ozs7OEJBRVosOERBQUNJO29CQUNDSixXQUFXLHFLQUVWLE9BRENKLGNBQWMsVUFBVTs7c0NBRzFCLDhEQUFDUTs0QkFBS0osV0FBVTtzQ0FDZCw0RUFBQ0s7Z0NBQ0NDLE9BQU07Z0NBQ05DLFFBQU87Z0NBQ1BDLFNBQVE7Z0NBQ1JDLE1BQUs7Z0NBQ0xDLE9BQU07O2tEQUVOLDhEQUFDQzt3Q0FDQ0MsR0FBRTt3Q0FDRkgsTUFBSzs7Ozs7O2tEQUVQLDhEQUFDRTt3Q0FDQ0MsR0FBRTt3Q0FDRkgsTUFBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7c0NBSVgsOERBQUNMOzRCQUFLSixXQUFVO3NDQUNkLDRFQUFDSztnQ0FDQ0MsT0FBTTtnQ0FDTkMsUUFBTztnQ0FDUEMsU0FBUTtnQ0FDUkMsTUFBSztnQ0FDTEMsT0FBTTswQ0FFTiw0RUFBQ0M7b0NBQ0NDLEdBQUU7b0NBQ0ZILE1BQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFyQjtHQTVETWQ7O1FBQzhCRCwyREFBWUE7OztLQUQxQ0M7QUE4RE4sK0RBQWVBLGdCQUFnQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9zaGFyZWQvSGVhZGVyL0RhcmtNb2RlU3dpdGNoZXIudHN4PzVhM2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZUNvbG9yTW9kZSBmcm9tIFwiQC9ob29rcy91c2VDb2xvck1vZGVcIjtcblxuY29uc3QgRGFya01vZGVTd2l0Y2hlciA9ICgpID0+IHtcbiAgY29uc3QgW2NvbG9yTW9kZSwgc2V0Q29sb3JNb2RlXSA9IHVzZUNvbG9yTW9kZSgpO1xuXG4gIHJldHVybiAoXG4gICAgPGxpPlxuICAgICAgPGxhYmVsXG4gICAgICAgIGNsYXNzTmFtZT17YHJlbGF0aXZlIG0tMCBibG9jayBoLTcuNSB3LTE0IHJvdW5kZWQtZnVsbCAke1xuICAgICAgICAgIGNvbG9yTW9kZSA9PT0gXCJkYXJrXCIgPyBcImJnLXByaW1hcnlcIiA6IFwiYmctc3Ryb2tlXCJcbiAgICAgICAgfWB9XG4gICAgICA+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgb25DaGFuZ2U9eygpID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc2V0Q29sb3JNb2RlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgc2V0Q29sb3JNb2RlKGNvbG9yTW9kZSA9PT0gXCJsaWdodFwiID8gXCJkYXJrXCIgOiBcImxpZ2h0XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgY2xhc3NOYW1lPVwiZHVyIGFic29sdXRlIHRvcC0wIHotNTAgbS0wIGgtZnVsbCB3LWZ1bGwgY3Vyc29yLXBvaW50ZXIgb3BhY2l0eS0wXCJcbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW5cbiAgICAgICAgICBjbGFzc05hbWU9e2BhYnNvbHV0ZSBsZWZ0LVszcHhdIHRvcC0xLzIgZmxleCBoLTYgdy02IC10cmFuc2xhdGUteS0xLzIgdHJhbnNsYXRlLXgtMCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1mdWxsIGJnLXdoaXRlIHNoYWRvdy1zd2l0Y2hlciBkdXJhdGlvbi03NSBlYXNlLWxpbmVhciAke1xuICAgICAgICAgICAgY29sb3JNb2RlID09PSBcImRhcmtcIiAmJiBcIiFyaWdodC1bM3B4XSAhdHJhbnNsYXRlLXgtZnVsbFwiXG4gICAgICAgICAgfWB9XG4gICAgICAgID5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJkYXJrOmhpZGRlblwiPlxuICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICB3aWR0aD1cIjE2XCJcbiAgICAgICAgICAgICAgaGVpZ2h0PVwiMTZcIlxuICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDE2IDE2XCJcbiAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICBkPVwiTTcuOTk5OTIgMTIuNjY2NkMxMC41NzcyIDEyLjY2NjYgMTIuNjY2NiAxMC41NzcyIDEyLjY2NjYgNy45OTk5MkMxMi42NjY2IDUuNDIyNTkgMTAuNTc3MiAzLjMzMzI1IDcuOTk5OTIgMy4zMzMyNUM1LjQyMjU5IDMuMzMzMjUgMy4zMzMyNSA1LjQyMjU5IDMuMzMzMjUgNy45OTk5MkMzLjMzMzI1IDEwLjU3NzIgNS40MjI1OSAxMi42NjY2IDcuOTk5OTIgMTIuNjY2NlpcIlxuICAgICAgICAgICAgICAgIGZpbGw9XCIjOTY5QUExXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICBkPVwiTTguMDAwMDggMTUuMzA2N0M3LjYzMzQxIDE1LjMwNjcgNy4zMzM0MiAxNS4wMzM0IDcuMzMzNDIgMTQuNjY2N1YxNC42MTM0QzcuMzMzNDIgMTQuMjQ2NyA3LjYzMzQxIDEzLjk0NjcgOC4wMDAwOCAxMy45NDY3QzguMzY2NzUgMTMuOTQ2NyA4LjY2Njc1IDE0LjI0NjcgOC42NjY3NSAxNC42MTM0QzguNjY2NzUgMTQuOTgwMSA4LjM2Njc1IDE1LjMwNjcgOC4wMDAwOCAxNS4zMDY3Wk0xMi43NjAxIDEzLjQyNjdDMTIuNTg2NyAxMy40MjY3IDEyLjQyMDEgMTMuMzYwMSAxMi4yODY3IDEzLjIzMzRMMTIuMjAwMSAxMy4xNDY3QzExLjk0MDEgMTIuODg2NyAxMS45NDAxIDEyLjQ2NjcgMTIuMjAwMSAxMi4yMDY3QzEyLjQ2MDEgMTEuOTQ2NyAxMi44ODAxIDExLjk0NjcgMTMuMTQwMSAxMi4yMDY3TDEzLjIyNjcgMTIuMjkzNEMxMy40ODY3IDEyLjU1MzQgMTMuNDg2NyAxMi45NzM0IDEzLjIyNjcgMTMuMjMzNEMxMy4xMDAxIDEzLjM2MDEgMTIuOTMzNCAxMy40MjY3IDEyLjc2MDEgMTMuNDI2N1pNMy4yNDAwOCAxMy40MjY3QzMuMDY2NzUgMTMuNDI2NyAyLjkwMDA4IDEzLjM2MDEgMi43NjY3NSAxMy4yMzM0QzIuNTA2NzUgMTIuOTczNCAyLjUwNjc1IDEyLjU1MzQgMi43NjY3NSAxMi4yOTM0TDIuODUzNDIgMTIuMjA2N0MzLjExMzQyIDExLjk0NjcgMy41MzM0MSAxMS45NDY3IDMuNzkzNDEgMTIuMjA2N0M0LjA1MzQxIDEyLjQ2NjcgNC4wNTM0MSAxMi44ODY3IDMuNzkzNDEgMTMuMTQ2N0wzLjcwNjc1IDEzLjIzMzRDMy41ODAwOCAxMy4zNjAxIDMuNDA2NzUgMTMuNDI2NyAzLjI0MDA4IDEzLjQyNjdaTTE0LjY2NjcgOC42NjY3NUgxNC42MTM0QzE0LjI0NjcgOC42NjY3NSAxMy45NDY3IDguMzY2NzUgMTMuOTQ2NyA4LjAwMDA4QzEzLjk0NjcgNy42MzM0MSAxNC4yNDY3IDcuMzMzNDIgMTQuNjEzNCA3LjMzMzQyQzE0Ljk4MDEgNy4zMzM0MiAxNS4zMDY3IDcuNjMzNDEgMTUuMzA2NyA4LjAwMDA4QzE1LjMwNjcgOC4zNjY3NSAxNS4wMzM0IDguNjY2NzUgMTQuNjY2NyA4LjY2Njc1Wk0xLjM4Njc1IDguNjY2NzVIMS4zMzM0MUMwLjk2Njc0OCA4LjY2Njc1IDAuNjY2NzQ4IDguMzY2NzUgMC42NjY3NDggOC4wMDAwOEMwLjY2Njc0OCA3LjYzMzQxIDAuOTY2NzQ4IDcuMzMzNDIgMS4zMzM0MSA3LjMzMzQyQzEuNzAwMDggNy4zMzM0MiAyLjAyNjc1IDcuNjMzNDEgMi4wMjY3NSA4LjAwMDA4QzIuMDI2NzUgOC4zNjY3NSAxLjc1MzQxIDguNjY2NzUgMS4zODY3NSA4LjY2Njc1Wk0xMi42NzM0IDMuOTkzNDFDMTIuNTAwMSAzLjk5MzQxIDEyLjMzMzQgMy45MjY3NSAxMi4yMDAxIDMuODAwMDhDMTEuOTQwMSAzLjU0MDA4IDExLjk0MDEgMy4xMjAwOCAxMi4yMDAxIDIuODYwMDhMMTIuMjg2NyAyLjc3MzQxQzEyLjU0NjcgMi41MTM0MSAxMi45NjY3IDIuNTEzNDEgMTMuMjI2NyAyLjc3MzQxQzEzLjQ4NjcgMy4wMzM0MSAxMy40ODY3IDMuNDUzNDEgMTMuMjI2NyAzLjcxMzQxTDEzLjE0MDEgMy44MDAwOEMxMy4wMTM0IDMuOTI2NzUgMTIuODQ2NyAzLjk5MzQxIDEyLjY3MzQgMy45OTM0MVpNMy4zMjY3NSAzLjk5MzQxQzMuMTUzNDEgMy45OTM0MSAyLjk4Njc1IDMuOTI2NzUgMi44NTM0MiAzLjgwMDA4TDIuNzY2NzUgMy43MDY3NUMyLjUwNjc1IDMuNDQ2NzUgMi41MDY3NSAzLjAyNjc1IDIuNzY2NzUgMi43NjY3NUMzLjAyNjc1IDIuNTA2NzUgMy40NDY3NSAyLjUwNjc1IDMuNzA2NzUgMi43NjY3NUwzLjc5MzQxIDIuODUzNDJDNC4wNTM0MSAzLjExMzQyIDQuMDUzNDEgMy41MzM0MSAzLjc5MzQxIDMuNzkzNDFDMy42NjY3NSAzLjkyNjc1IDMuNDkzNDEgMy45OTM0MSAzLjMyNjc1IDMuOTkzNDFaTTguMDAwMDggMi4wMjY3NUM3LjYzMzQxIDIuMDI2NzUgNy4zMzM0MiAxLjc1MzQxIDcuMzMzNDIgMS4zODY3NVYxLjMzMzQxQzcuMzMzNDIgMC45NjY3NDggNy42MzM0MSAwLjY2Njc0OCA4LjAwMDA4IDAuNjY2NzQ4QzguMzY2NzUgMC42NjY3NDggOC42NjY3NSAwLjk2Njc0OCA4LjY2Njc1IDEuMzMzNDFDOC42NjY3NSAxLjcwMDA4IDguMzY2NzUgMi4wMjY3NSA4LjAwMDA4IDIuMDI2NzVaXCJcbiAgICAgICAgICAgICAgICBmaWxsPVwiIzk2OUFBMVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaGlkZGVuIGRhcms6aW5saW5lLWJsb2NrXCI+XG4gICAgICAgICAgICA8c3ZnXG4gICAgICAgICAgICAgIHdpZHRoPVwiMTZcIlxuICAgICAgICAgICAgICBoZWlnaHQ9XCIxNlwiXG4gICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMTYgMTZcIlxuICAgICAgICAgICAgICBmaWxsPVwibm9uZVwiXG4gICAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgICAgIGQ9XCJNMTQuMzUzMyAxMC42MkMxNC4yNDY2IDEwLjQ0IDEzLjk0NjYgMTAuMTYgMTMuMTk5OSAxMC4yOTMzQzEyLjc4NjYgMTAuMzY2NyAxMi4zNjY2IDEwLjQgMTEuOTQ2NiAxMC4zOEMxMC4zOTMzIDEwLjMxMzMgOC45ODY1OSA5LjYgOC4wMDY1OSA4LjVDNy4xMzk5MyA3LjUzMzMzIDYuNjA2NTkgNi4yNzMzMyA2LjU5OTkzIDQuOTEzMzNDNi41OTk5MyA0LjE1MzMzIDYuNzQ2NTkgMy40MiA3LjA0NjU5IDIuNzI2NjZDNy4zMzk5MyAyLjA1MzMzIDcuMTMzMjYgMS43IDYuOTg2NTkgMS41NTMzM0M2LjgzMzI2IDEuNCA2LjQ3MzI2IDEuMTg2NjYgNS43NjY1OSAxLjQ4QzMuMDM5OTMgMi42MjY2NiAxLjM1MzI2IDUuMzYgMS41NTMyNiA4LjI4NjY2QzEuNzUzMjYgMTEuMDQgMy42ODY1OSAxMy4zOTMzIDYuMjQ2NTkgMTQuMjhDNi44NTk5MyAxNC40OTMzIDcuNTA2NTkgMTQuNjIgOC4xNzMyNiAxNC42NDY3QzguMjc5OTMgMTQuNjUzMyA4LjM4NjU5IDE0LjY2IDguNDkzMjYgMTQuNjZDMTAuNzI2NiAxNC42NiAxMi44MTk5IDEzLjYwNjcgMTQuMTM5OSAxMS44MTMzQzE0LjU4NjYgMTEuMTkzMyAxNC40NjY2IDEwLjggMTQuMzUzMyAxMC42MlpcIlxuICAgICAgICAgICAgICAgIGZpbGw9XCIjOTY5QUExXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9sYWJlbD5cbiAgICA8L2xpPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRGFya01vZGVTd2l0Y2hlcjtcbiJdLCJuYW1lcyI6WyJ1c2VDb2xvck1vZGUiLCJEYXJrTW9kZVN3aXRjaGVyIiwiY29sb3JNb2RlIiwic2V0Q29sb3JNb2RlIiwibGkiLCJsYWJlbCIsImNsYXNzTmFtZSIsImlucHV0IiwidHlwZSIsIm9uQ2hhbmdlIiwic3BhbiIsInN2ZyIsIndpZHRoIiwiaGVpZ2h0Iiwidmlld0JveCIsImZpbGwiLCJ4bWxucyIsInBhdGgiLCJkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Header/DarkModeSwitcher.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Header/DropdownMessage.tsx":
/*!**********************************************************!*\
  !*** ./src/components/shared/Header/DropdownMessage.tsx ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst DropdownMessage = ()=>{\n    _s();\n    const [dropdownOpen, setDropdownOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [notifying, setNotifying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const trigger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dropdown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // close on click outside\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const clickHandler = (param)=>{\n            let { target } = param;\n            if (!dropdown.current) return;\n            if (!dropdownOpen || dropdown.current.contains(target) || trigger.current.contains(target)) return;\n            setDropdownOpen(false);\n        };\n        document.addEventListener(\"click\", clickHandler);\n        return ()=>document.removeEventListener(\"click\", clickHandler);\n    });\n    // close if the esc key is pressed\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const keyHandler = (param)=>{\n            let { keyCode } = param;\n            if (!dropdownOpen || keyCode !== 27) return;\n            setDropdownOpen(false);\n        };\n        document.addEventListener(\"keydown\", keyHandler);\n        return ()=>document.removeEventListener(\"keydown\", keyHandler);\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                ref: trigger,\n                onClick: ()=>{\n                    setNotifying(false);\n                    setDropdownOpen(!dropdownOpen);\n                },\n                className: \"relative flex h-8.5 w-8.5 items-center justify-center rounded-full border-[0.5px] border-stroke bg-gray hover:text-primary dark:border-strokedark dark:bg-meta-4 dark:text-white\",\n                href: \"#\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"absolute -right-0.5 -top-0.5 z-1 h-2 w-2 rounded-full bg-meta-1 \".concat(notifying === false ? \"hidden\" : \"inline\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"absolute -z-1 inline-flex h-full w-full animate-ping rounded-full bg-meta-1 opacity-75\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                            lineNumber: 54,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"fill-current duration-300 ease-in-out\",\n                        width: \"18\",\n                        height: \"18\",\n                        viewBox: \"0 0 18 18\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M10.9688 1.57495H7.03135C3.43135 1.57495 0.506348 4.41558 0.506348 7.90308C0.506348 11.3906 2.75635 13.8375 8.26885 16.3125C8.40947 16.3687 8.52197 16.3968 8.6626 16.3968C8.85947 16.3968 9.02822 16.3406 9.19697 16.2281C9.47822 16.0593 9.64697 15.75 9.64697 15.4125V14.2031H10.9688C14.5688 14.2031 17.522 11.3625 17.522 7.87495C17.522 4.38745 14.5688 1.57495 10.9688 1.57495ZM10.9688 12.9937H9.3376C8.80322 12.9937 8.35322 13.4437 8.35322 13.9781V15.0187C3.6001 12.825 1.74385 10.8 1.74385 7.9312C1.74385 5.14683 4.10635 2.8687 7.03135 2.8687H10.9688C13.8657 2.8687 16.2563 5.14683 16.2563 7.9312C16.2563 10.7156 13.8657 12.9937 10.9688 12.9937Z\",\n                                fill: \"\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 65,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M5.42812 7.28442C5.0625 7.28442 4.78125 7.56567 4.78125 7.9313C4.78125 8.29692 5.0625 8.57817 5.42812 8.57817C5.79375 8.57817 6.075 8.29692 6.075 7.9313C6.075 7.56567 5.79375 7.28442 5.42812 7.28442Z\",\n                                fill: \"\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 69,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M9.00015 7.28442C8.63452 7.28442 8.35327 7.56567 8.35327 7.9313C8.35327 8.29692 8.63452 8.57817 9.00015 8.57817C9.33765 8.57817 9.64702 8.29692 9.64702 7.9313C9.64702 7.56567 9.33765 7.28442 9.00015 7.28442Z\",\n                                fill: \"\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 73,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M12.5719 7.28442C12.2063 7.28442 11.925 7.56567 11.925 7.9313C11.925 8.29692 12.2063 8.57817 12.5719 8.57817C12.9375 8.57817 13.2188 8.29692 13.2188 7.9313C13.2188 7.56567 12.9094 7.28442 12.5719 7.28442Z\",\n                                fill: \"\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 77,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                        lineNumber: 57,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                lineNumber: 40,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: dropdown,\n                onFocus: ()=>setDropdownOpen(true),\n                onBlur: ()=>setDropdownOpen(false),\n                className: \"absolute -right-16 mt-2.5 flex w-75 flex-col rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark sm:right-0 sm:w-80 \".concat(dropdownOpen === true ? \"block\" : \"hidden\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"px-4.5 py-3\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                            className: \"text-sm font-medium text-bodydark2\",\n                            children: \"Messages\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                            lineNumber: 94,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                        lineNumber: 93,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"flex h-auto flex-col overflow-y-auto\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex gap-4.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"/messages\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-12.5 w-12.5 rounded-full\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                width: 112,\n                                                height: 112,\n                                                src: \"/images/user/user-02.svg\",\n                                                alt: \"User\",\n                                                style: {\n                                                    width: \"auto\",\n                                                    height: \"auto\",\n                                                    borderRadius: \"50%\"\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                lineNumber: 104,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                            lineNumber: 103,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h6\", {\n                                                    className: \"text-sm font-medium text-black dark:text-white\",\n                                                    children: \"Floyd Miles\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 118,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-sm\",\n                                                    children: \"I have prepared everything \\uD83D\\uDCAA\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 121,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-xs\",\n                                                    children: \"2min ago\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 122,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                            lineNumber: 117,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                    lineNumber: 99,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 98,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex gap-4.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"/messages\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-12.5 w-12.5 rounded-full\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                width: 112,\n                                                height: 112,\n                                                src: \"/images/user/user-03.svg\",\n                                                alt: \"User\",\n                                                style: {\n                                                    width: \"auto\",\n                                                    height: \"auto\",\n                                                    borderRadius: \"50%\"\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                lineNumber: 132,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                            lineNumber: 131,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h6\", {\n                                                    className: \"text-sm font-medium text-black dark:text-white\",\n                                                    children: \"Guy Hawkins\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 146,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-sm\",\n                                                    children: \"I cam across your profile and...\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 149,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-xs\",\n                                                    children: \"1day ago\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 150,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                            lineNumber: 145,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                    lineNumber: 127,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 126,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex gap-4.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"/messages\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-12.5 w-12.5 rounded-full\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                width: 112,\n                                                height: 112,\n                                                src: \"/images/user/user-04.svg\",\n                                                alt: \"User\",\n                                                style: {\n                                                    width: \"auto\",\n                                                    height: \"auto\",\n                                                    borderRadius: \"50%\"\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                lineNumber: 160,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                            lineNumber: 159,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h6\", {\n                                                    className: \"text-sm font-medium text-black dark:text-white\",\n                                                    children: \"Bessie Cooper\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 174,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-sm\",\n                                                    children: \"I’m waiting for you response!\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 177,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-xs\",\n                                                    children: \"5days ago\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                                    lineNumber: 178,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                            lineNumber: 173,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                    lineNumber: 155,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                                lineNumber: 154,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                        lineNumber: 97,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n                lineNumber: 85,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownMessage.tsx\",\n        lineNumber: 39,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DropdownMessage, \"TXDfltWcP/JpwOt9Ne8QiHWE+Ss=\");\n_c = DropdownMessage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DropdownMessage);\nvar _c;\n$RefreshReg$(_c, \"DropdownMessage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Header/DropdownMessage.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Header/DropdownNotification.tsx":
/*!***************************************************************!*\
  !*** ./src/components/shared/Header/DropdownNotification.tsx ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst DropdownNotification = ()=>{\n    _s();\n    const [dropdownOpen, setDropdownOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [notifying, setNotifying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const trigger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dropdown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const clickHandler = (param)=>{\n            let { target } = param;\n            if (!dropdown.current) return;\n            if (!dropdownOpen || dropdown.current.contains(target) || trigger.current.contains(target)) return;\n            setDropdownOpen(false);\n        };\n        document.addEventListener(\"click\", clickHandler);\n        return ()=>document.removeEventListener(\"click\", clickHandler);\n    });\n    // close if the esc key is pressed\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const keyHandler = (param)=>{\n            let { keyCode } = param;\n            if (!dropdownOpen || keyCode !== 27) return;\n            setDropdownOpen(false);\n        };\n        document.addEventListener(\"keydown\", keyHandler);\n        return ()=>document.removeEventListener(\"keydown\", keyHandler);\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                ref: trigger,\n                onClick: ()=>{\n                    setNotifying(false);\n                    setDropdownOpen(!dropdownOpen);\n                },\n                href: \"#\",\n                className: \"relative flex h-8.5 w-8.5 items-center justify-center rounded-full border-[0.5px] border-stroke bg-gray hover:text-primary dark:border-strokedark dark:bg-meta-4 dark:text-white\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"absolute -top-0.5 right-0 z-1 h-2 w-2 rounded-full bg-meta-1 \".concat(notifying === false ? \"hidden\" : \"inline\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"absolute -z-1 inline-flex h-full w-full animate-ping rounded-full bg-meta-1 opacity-75\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                            lineNumber: 52,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"fill-current duration-300 ease-in-out\",\n                        width: \"18\",\n                        height: \"18\",\n                        viewBox: \"0 0 18 18\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M16.1999 14.9343L15.6374 14.0624C15.5249 13.8937 15.4687 13.7249 15.4687 13.528V7.67803C15.4687 6.01865 14.7655 4.47178 13.4718 3.31865C12.4312 2.39053 11.0812 1.7999 9.64678 1.6874V1.1249C9.64678 0.787402 9.36553 0.478027 8.9999 0.478027C8.6624 0.478027 8.35303 0.759277 8.35303 1.1249V1.65928C8.29678 1.65928 8.24053 1.65928 8.18428 1.6874C4.92178 2.05303 2.4749 4.66865 2.4749 7.79053V13.528C2.44678 13.8093 2.39053 13.9499 2.33428 14.0343L1.7999 14.9343C1.63115 15.2155 1.63115 15.553 1.7999 15.8343C1.96865 16.0874 2.2499 16.2562 2.55928 16.2562H8.38115V16.8749C8.38115 17.2124 8.6624 17.5218 9.02803 17.5218C9.36553 17.5218 9.6749 17.2405 9.6749 16.8749V16.2562H15.4687C15.778 16.2562 16.0593 16.0874 16.228 15.8343C16.3968 15.553 16.3968 15.2155 16.1999 14.9343ZM3.23428 14.9905L3.43115 14.653C3.5999 14.3718 3.68428 14.0343 3.74053 13.6405V7.79053C3.74053 5.31553 5.70928 3.23428 8.3249 2.95303C9.92803 2.78428 11.503 3.2624 12.6562 4.2749C13.6687 5.1749 14.2312 6.38428 14.2312 7.67803V13.528C14.2312 13.9499 14.3437 14.3437 14.5968 14.7374L14.7655 14.9905H3.23428Z\",\n                            fill: \"\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                            lineNumber: 63,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: dropdown,\n                onFocus: ()=>setDropdownOpen(true),\n                onBlur: ()=>setDropdownOpen(false),\n                className: \"absolute -right-27 mt-2.5 flex h-90 w-75 flex-col rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark sm:right-0 sm:w-80 \".concat(dropdownOpen === true ? \"block\" : \"hidden\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"px-4.5 py-3\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                            className: \"text-sm font-medium text-bodydark2\",\n                            children: \"Notification\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                            lineNumber: 79,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                        lineNumber: 78,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"flex h-auto flex-col overflow-y-auto\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex flex-col gap-2.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"#\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-black dark:text-white\",\n                                                    children: \"Edit your information in a swipe\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                                    lineNumber: 89,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                \" \",\n                                                \"of passages of Lorem Ipsum available, but the majority have suffered\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 88,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-xs\",\n                                            children: \"12 May, 2025\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 96,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                    lineNumber: 84,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                lineNumber: 83,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex flex-col gap-2.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"#\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-black dark:text-white\",\n                                                    children: \"It is a long established fact\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                                    lineNumber: 105,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                \" \",\n                                                \"that a reader will be distracted by the readable.\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 104,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-xs\",\n                                            children: \"24 Feb, 2025\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 111,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                    lineNumber: 100,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                lineNumber: 99,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex flex-col gap-2.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"#\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-black dark:text-white\",\n                                                    children: \"There are many variations\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                                    lineNumber: 120,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                \" \",\n                                                \"of passages of Lorem Ipsum available, but the majority have suffered\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 119,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-xs\",\n                                            children: \"04 Jan, 2025\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 127,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                    lineNumber: 115,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                lineNumber: 114,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"flex flex-col gap-2.5 border-t border-stroke px-4.5 py-3 hover:bg-gray-2 dark:border-strokedark dark:hover:bg-meta-4\",\n                                    href: \"#\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-black dark:text-white\",\n                                                    children: \"There are many variations\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                                    lineNumber: 136,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                \" \",\n                                                \"of passages of Lorem Ipsum available, but the majority have suffered\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 135,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-xs\",\n                                            children: \"01 Dec, 2024\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                            lineNumber: 143,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                    lineNumber: 131,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                                lineNumber: 130,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                        lineNumber: 82,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n                lineNumber: 70,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownNotification.tsx\",\n        lineNumber: 37,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DropdownNotification, \"TXDfltWcP/JpwOt9Ne8QiHWE+Ss=\");\n_c = DropdownNotification;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DropdownNotification);\nvar _c;\n$RefreshReg$(_c, \"DropdownNotification\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Header/DropdownNotification.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Header/DropdownUser.tsx":
/*!*******************************************************!*\
  !*** ./src/components/shared/Header/DropdownUser.tsx ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst DropdownUser = ()=>{\n    _s();\n    const [dropdownOpen, setDropdownOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const trigger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dropdown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // close on click outside\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const clickHandler = (param)=>{\n            let { target } = param;\n            if (!dropdown.current) return;\n            if (!dropdownOpen || dropdown.current.contains(target) || trigger.current.contains(target)) return;\n            setDropdownOpen(false);\n        };\n        document.addEventListener(\"click\", clickHandler);\n        return ()=>document.removeEventListener(\"click\", clickHandler);\n    });\n    // close if the esc key is pressed\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const keyHandler = (param)=>{\n            let { keyCode } = param;\n            if (!dropdownOpen || keyCode !== 27) return;\n            setDropdownOpen(false);\n        };\n        document.addEventListener(\"keydown\", keyHandler);\n        return ()=>document.removeEventListener(\"keydown\", keyHandler);\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                ref: trigger,\n                onClick: ()=>setDropdownOpen(!dropdownOpen),\n                className: \"flex items-center gap-4\",\n                href: \"#\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"hidden text-right lg:block\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"block text-sm font-medium text-black dark:text-white\",\n                                children: \"Jhon.D\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"block text-xs\",\n                                children: \"Growth Simplified\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                lineNumber: 49,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"h-12 w-12 rounded-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            width: 112,\n                            height: 112,\n                            src: \"/images/user/user-01.svg\",\n                            style: {\n                                width: \"auto\",\n                                height: \"auto\",\n                                borderRadius: \"50%\"\n                            },\n                            alt: \"User\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                            lineNumber: 53,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                        lineNumber: 52,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"hidden fill-current sm:block\",\n                        width: \"12\",\n                        height: \"8\",\n                        viewBox: \"0 0 12 8\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M0.410765 0.910734C0.736202 0.585297 1.26384 0.585297 1.58928 0.910734L6.00002 5.32148L10.4108 0.910734C10.7362 0.585297 11.2638 0.585297 11.5893 0.910734C11.9147 1.23617 11.9147 1.76381 11.5893 2.08924L6.58928 7.08924C6.26384 7.41468 5.7362 7.41468 5.41077 7.08924L0.410765 2.08924C0.0853277 1.76381 0.0853277 1.23617 0.410765 0.910734Z\",\n                            fill: \"\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                            lineNumber: 74,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                        lineNumber: 66,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                lineNumber: 39,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: dropdown,\n                onFocus: ()=>setDropdownOpen(true),\n                onBlur: ()=>setDropdownOpen(false),\n                className: \"absolute right-0 mt-4 flex w-62.5 flex-col rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark \".concat(dropdownOpen === true ? \"block\" : \"hidden\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"flex flex-col gap-5 border-b border-stroke px-6 py-7.5 dark:border-strokedark\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    href: \"/profile\",\n                                    className: \"flex items-center gap-3.5 text-sm font-medium duration-300 ease-in-out hover:text-primary lg:text-base\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"fill-current\",\n                                            width: \"22\",\n                                            height: \"22\",\n                                            viewBox: \"0 0 22 22\",\n                                            fill: \"none\",\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M11 9.62499C8.42188 9.62499 6.35938 7.59687 6.35938 5.12187C6.35938 2.64687 8.42188 0.618744 11 0.618744C13.5781 0.618744 15.6406 2.64687 15.6406 5.12187C15.6406 7.59687 13.5781 9.62499 11 9.62499ZM11 2.16562C9.28125 2.16562 7.90625 3.50624 7.90625 5.12187C7.90625 6.73749 9.28125 8.07812 11 8.07812C12.7188 8.07812 14.0938 6.73749 14.0938 5.12187C14.0938 3.50624 12.7188 2.16562 11 2.16562Z\",\n                                                    fill: \"\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                                    lineNumber: 106,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M17.7719 21.4156H4.2281C3.5406 21.4156 2.9906 20.8656 2.9906 20.1781V17.0844C2.9906 13.7156 5.7406 10.9656 9.10935 10.9656H12.925C16.2937 10.9656 19.0437 13.7156 19.0437 17.0844V20.1781C19.0094 20.8312 18.4594 21.4156 17.7719 21.4156ZM4.53748 19.8687H17.4969V17.0844C17.4969 14.575 15.4344 12.5125 12.925 12.5125H9.07498C6.5656 12.5125 4.5031 14.575 4.5031 17.0844V19.8687H4.53748Z\",\n                                                    fill: \"\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                                    lineNumber: 110,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                            lineNumber: 98,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        \"My Profile\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                    lineNumber: 94,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                lineNumber: 93,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    href: \"#\",\n                                    className: \"flex items-center gap-3.5 text-sm font-medium duration-300 ease-in-out hover:text-primary lg:text-base\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"fill-current\",\n                                            width: \"22\",\n                                            height: \"22\",\n                                            viewBox: \"0 0 22 22\",\n                                            fill: \"none\",\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M17.6687 1.44374C17.1187 0.893744 16.4312 0.618744 15.675 0.618744H7.42498C6.25623 0.618744 5.25935 1.58124 5.25935 2.78437V4.12499H4.29685C3.88435 4.12499 3.50623 4.46874 3.50623 4.91562C3.50623 5.36249 3.84998 5.70624 4.29685 5.70624H5.25935V10.2781H4.29685C3.88435 10.2781 3.50623 10.6219 3.50623 11.0687C3.50623 11.4812 3.84998 11.8594 4.29685 11.8594H5.25935V16.4312H4.29685C3.88435 16.4312 3.50623 16.775 3.50623 17.2219C3.50623 17.6687 3.84998 18.0125 4.29685 18.0125H5.25935V19.25C5.25935 20.4187 6.22185 21.4156 7.42498 21.4156H15.675C17.2218 21.4156 18.4937 20.1437 18.5281 18.5969V3.47187C18.4937 2.68124 18.2187 1.95937 17.6687 1.44374ZM16.9469 18.5625C16.9469 19.2844 16.3625 19.8344 15.6406 19.8344H7.3906C7.04685 19.8344 6.77185 19.5594 6.77185 19.2156V17.875H8.6281C9.0406 17.875 9.41873 17.5312 9.41873 17.0844C9.41873 16.6375 9.07498 16.2937 8.6281 16.2937H6.77185V11.7906H8.6281C9.0406 11.7906 9.41873 11.4469 9.41873 11C9.41873 10.5875 9.07498 10.2094 8.6281 10.2094H6.77185V5.63749H8.6281C9.0406 5.63749 9.41873 5.29374 9.41873 4.84687C9.41873 4.39999 9.07498 4.05624 8.6281 4.05624H6.77185V2.74999C6.77185 2.40624 7.04685 2.13124 7.3906 2.13124H15.6406C15.9844 2.13124 16.2937 2.26874 16.5687 2.50937C16.8094 2.74999 16.9469 3.09374 16.9469 3.43749V18.5625Z\",\n                                                fill: \"\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                                lineNumber: 131,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                            lineNumber: 123,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        \"My Contacts\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                    lineNumber: 119,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                lineNumber: 118,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    href: \"/settings\",\n                                    className: \"flex items-center gap-3.5 text-sm font-medium duration-300 ease-in-out hover:text-primary lg:text-base\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"fill-current\",\n                                            width: \"22\",\n                                            height: \"22\",\n                                            viewBox: \"0 0 22 22\",\n                                            fill: \"none\",\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M20.8656 8.86874C20.5219 8.49062 20.0406 8.28437 19.525 8.28437H19.4219C19.25 8.28437 19.1125 8.18124 19.0781 8.04374C19.0437 7.90624 18.975 7.80312 18.9406 7.66562C18.8719 7.52812 18.9406 7.39062 19.0437 7.28749L19.1125 7.21874C19.4906 6.87499 19.6969 6.39374 19.6969 5.87812C19.6969 5.36249 19.525 4.88124 19.1469 4.50312L17.8062 3.12812C17.0844 2.37187 15.8469 2.33749 15.0906 3.09374L14.9875 3.16249C14.8844 3.26562 14.7125 3.29999 14.5406 3.23124C14.4031 3.16249 14.2656 3.09374 14.0937 3.05937C13.9219 2.99062 13.8187 2.85312 13.8187 2.71562V2.54374C13.8187 1.47812 12.9594 0.618744 11.8937 0.618744H9.96875C9.45312 0.618744 8.97187 0.824994 8.62812 1.16874C8.25 1.54687 8.07812 2.02812 8.07812 2.50937V2.64687C8.07812 2.78437 7.975 2.92187 7.8375 2.99062C7.76875 3.02499 7.73437 3.02499 7.66562 3.05937C7.52812 3.12812 7.35625 3.09374 7.25312 2.99062L7.18437 2.88749C6.84062 2.50937 6.35937 2.30312 5.84375 2.30312C5.32812 2.30312 4.84687 2.47499 4.46875 2.85312L3.09375 4.19374C2.3375 4.91562 2.30312 6.15312 3.05937 6.90937L3.12812 7.01249C3.23125 7.11562 3.26562 7.28749 3.19687 7.39062C3.12812 7.52812 3.09375 7.63124 3.025 7.76874C2.95625 7.90624 2.85312 7.97499 2.68125 7.97499H2.57812C2.0625 7.97499 1.58125 8.14687 1.20312 8.52499C0.824996 8.86874 0.618746 9.34999 0.618746 9.86562L0.584371 11.7906C0.549996 12.8562 1.40937 13.7156 2.475 13.75H2.57812C2.75 13.75 2.8875 13.8531 2.92187 13.9906C2.99062 14.0937 3.05937 14.1969 3.09375 14.3344C3.12812 14.4719 3.09375 14.6094 2.99062 14.7125L2.92187 14.7812C2.54375 15.125 2.3375 15.6062 2.3375 16.1219C2.3375 16.6375 2.50937 17.1187 2.8875 17.4969L4.22812 18.8719C4.95 19.6281 6.1875 19.6625 6.94375 18.9062L7.04687 18.8375C7.15 18.7344 7.32187 18.7 7.49375 18.7687C7.63125 18.8375 7.76875 18.9062 7.94062 18.9406C8.1125 19.0094 8.21562 19.1469 8.21562 19.2844V19.4219C8.21562 20.4875 9.075 21.3469 10.1406 21.3469H12.0656C13.1312 21.3469 13.9906 20.4875 13.9906 19.4219V19.2844C13.9906 19.1469 14.0937 19.0094 14.2312 18.9406C14.3 18.9062 14.3344 18.9062 14.4031 18.8719C14.575 18.8031 14.7125 18.8375 14.8156 18.9406L14.8844 19.0437C15.2281 19.4219 15.7094 19.6281 16.225 19.6281C16.7406 19.6281 17.2219 19.4562 17.6 19.0781L18.975 17.7375C19.7312 17.0156 19.7656 15.7781 19.0094 15.0219L18.9406 14.9187C18.8375 14.8156 18.8031 14.6437 18.8719 14.5406C18.9406 14.4031 18.975 14.3 19.0437 14.1625C19.1125 14.025 19.25 13.9562 19.3875 13.9562H19.4906H19.525C20.5562 13.9562 21.4156 13.1312 21.45 12.0656L21.4844 10.1406C21.4156 9.72812 21.2094 9.21249 20.8656 8.86874ZM19.8344 12.1C19.8344 12.3062 19.6625 12.4781 19.4562 12.4781H19.3531H19.3187C18.5281 12.4781 17.8062 12.9594 17.5312 13.6469C17.4969 13.75 17.4281 13.8531 17.3937 13.9562C17.0844 14.6437 17.2219 15.5031 17.7719 16.0531L17.8406 16.1562C17.9781 16.2937 17.9781 16.5344 17.8406 16.6719L16.4656 18.0125C16.3625 18.1156 16.2594 18.1156 16.1906 18.1156C16.1219 18.1156 16.0187 18.1156 15.9156 18.0125L15.8469 17.9094C15.2969 17.325 14.4719 17.1531 13.7156 17.4969L13.5781 17.5656C12.8219 17.875 12.3406 18.5625 12.3406 19.3531V19.4906C12.3406 19.6969 12.1687 19.8687 11.9625 19.8687H10.0375C9.83125 19.8687 9.65937 19.6969 9.65937 19.4906V19.3531C9.65937 18.5625 9.17812 17.8406 8.42187 17.5656C8.31875 17.5312 8.18125 17.4625 8.07812 17.4281C7.80312 17.2906 7.52812 17.2562 7.25312 17.2562C6.77187 17.2562 6.29062 17.4281 5.9125 17.8062L5.84375 17.8406C5.70625 17.9781 5.46562 17.9781 5.32812 17.8406L3.9875 16.4656C3.88437 16.3625 3.88437 16.2594 3.88437 16.1906C3.88437 16.1219 3.88437 16.0187 3.9875 15.9156L4.05625 15.8469C4.64062 15.2969 4.8125 14.4375 4.50312 13.75C4.46875 13.6469 4.43437 13.5437 4.36562 13.4406C4.09062 12.7187 3.40312 12.2031 2.6125 12.2031H2.50937C2.30312 12.2031 2.13125 12.0312 2.13125 11.825L2.16562 9.89999C2.16562 9.76249 2.23437 9.69374 2.26875 9.62499C2.30312 9.59062 2.40625 9.52187 2.54375 9.52187H2.64687C3.4375 9.55624 4.15937 9.07499 4.46875 8.35312C4.50312 8.24999 4.57187 8.14687 4.60625 8.04374C4.91562 7.35624 4.77812 6.49687 4.22812 5.94687L4.15937 5.84374C4.02187 5.70624 4.02187 5.46562 4.15937 5.32812L5.53437 3.98749C5.6375 3.88437 5.74062 3.88437 5.80937 3.88437C5.87812 3.88437 5.98125 3.88437 6.08437 3.98749L6.15312 4.09062C6.70312 4.67499 7.52812 4.84687 8.28437 4.53749L8.42187 4.46874C9.17812 4.15937 9.65937 3.47187 9.65937 2.68124V2.54374C9.65937 2.40624 9.72812 2.33749 9.7625 2.26874C9.79687 2.19999 9.9 2.16562 10.0375 2.16562H11.9625C12.1687 2.16562 12.3406 2.33749 12.3406 2.54374V2.68124C12.3406 3.47187 12.8219 4.19374 13.5781 4.46874C13.6812 4.50312 13.8187 4.57187 13.9219 4.60624C14.6437 4.94999 15.5031 4.81249 16.0875 4.26249L16.1906 4.19374C16.3281 4.05624 16.5687 4.05624 16.7062 4.19374L18.0469 5.56874C18.15 5.67187 18.15 5.77499 18.15 5.84374C18.15 5.91249 18.1156 6.01562 18.0469 6.11874L17.9781 6.18749C17.3594 6.70312 17.1875 7.56249 17.4625 8.24999C17.4969 8.35312 17.5312 8.45624 17.6 8.55937C17.875 9.28124 18.5625 9.79687 19.3531 9.79687H19.4562C19.5937 9.79687 19.6625 9.86562 19.7312 9.89999C19.8 9.93437 19.8344 10.0375 19.8344 10.175V12.1Z\",\n                                                    fill: \"\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                                    lineNumber: 152,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M11 6.32498C8.42189 6.32498 6.32501 8.42186 6.32501 11C6.32501 13.5781 8.42189 15.675 11 15.675C13.5781 15.675 15.675 13.5781 15.675 11C15.675 8.42186 13.5781 6.32498 11 6.32498ZM11 14.1281C9.28126 14.1281 7.87189 12.7187 7.87189 11C7.87189 9.28123 9.28126 7.87186 11 7.87186C12.7188 7.87186 14.1281 9.28123 14.1281 11C14.1281 12.7187 12.7188 14.1281 11 14.1281Z\",\n                                                    fill: \"\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                                    lineNumber: 156,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                            lineNumber: 144,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        \"Account Settings\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                    lineNumber: 140,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                lineNumber: 139,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                        lineNumber: 92,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"flex items-center gap-3.5 px-6 py-4 text-sm font-medium duration-300 ease-in-out hover:text-primary lg:text-base\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                className: \"fill-current\",\n                                width: \"22\",\n                                height: \"22\",\n                                viewBox: \"0 0 22 22\",\n                                fill: \"none\",\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M15.5375 0.618744H11.6531C10.7594 0.618744 10.0031 1.37499 10.0031 2.26874V4.64062C10.0031 5.05312 10.3469 5.39687 10.7594 5.39687C11.1719 5.39687 11.55 5.05312 11.55 4.64062V2.23437C11.55 2.16562 11.5844 2.13124 11.6531 2.13124H15.5375C16.3625 2.13124 17.0156 2.78437 17.0156 3.60937V18.3562C17.0156 19.1812 16.3625 19.8344 15.5375 19.8344H11.6531C11.5844 19.8344 11.55 19.8 11.55 19.7312V17.3594C11.55 16.9469 11.2062 16.6031 10.7594 16.6031C10.3125 16.6031 10.0031 16.9469 10.0031 17.3594V19.7312C10.0031 20.625 10.7594 21.3812 11.6531 21.3812H15.5375C17.2219 21.3812 18.5625 20.0062 18.5625 18.3562V3.64374C18.5625 1.95937 17.1875 0.618744 15.5375 0.618744Z\",\n                                        fill: \"\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                        lineNumber: 174,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M6.05001 11.7563H12.2031C12.6156 11.7563 12.9594 11.4125 12.9594 11C12.9594 10.5875 12.6156 10.2438 12.2031 10.2438H6.08439L8.21564 8.07813C8.52501 7.76875 8.52501 7.2875 8.21564 6.97812C7.90626 6.66875 7.42501 6.66875 7.11564 6.97812L3.67814 10.4844C3.36876 10.7938 3.36876 11.275 3.67814 11.5844L7.11564 15.0906C7.25314 15.2281 7.45939 15.3312 7.66564 15.3312C7.87189 15.3312 8.04376 15.2625 8.21564 15.125C8.52501 14.8156 8.52501 14.3344 8.21564 14.025L6.05001 11.7563Z\",\n                                        fill: \"\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                        lineNumber: 178,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                                lineNumber: 166,\n                                columnNumber: 11\n                            }, undefined),\n                            \"Log Out\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                        lineNumber: 165,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n                lineNumber: 84,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\DropdownUser.tsx\",\n        lineNumber: 38,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DropdownUser, \"gv1/SI453zSvD7RtUJ4kcwJJGpU=\");\n_c = DropdownUser;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DropdownUser);\nvar _c;\n$RefreshReg$(_c, \"DropdownUser\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Header/DropdownUser.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Header/index.tsx":
/*!************************************************!*\
  !*** ./src/components/shared/Header/index.tsx ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _DarkModeSwitcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DarkModeSwitcher */ \"(app-pages-browser)/./src/components/shared/Header/DarkModeSwitcher.tsx\");\n/* harmony import */ var _DropdownMessage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DropdownMessage */ \"(app-pages-browser)/./src/components/shared/Header/DropdownMessage.tsx\");\n/* harmony import */ var _DropdownNotification__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DropdownNotification */ \"(app-pages-browser)/./src/components/shared/Header/DropdownNotification.tsx\");\n/* harmony import */ var _DropdownUser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DropdownUser */ \"(app-pages-browser)/./src/components/shared/Header/DropdownUser.tsx\");\n\n\n\n\n\n\n\nconst Header = (props)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n        className: \"sticky top-0 z-999 flex w-full bg-white drop-shadow-1 dark:bg-boxdark dark:drop-shadow-none\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-grow items-center justify-between px-4 py-4 shadow-2 md:px-6 2xl:px-11\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-2 sm:gap-4 lg:hidden\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            \"aria-controls\": \"sidebar\",\n                            onClick: (e)=>{\n                                e.stopPropagation();\n                                props.setSidebarOpen(!props.sidebarOpen);\n                            },\n                            className: \"z-99999 block rounded-sm border border-stroke bg-white p-1.5 shadow-sm dark:border-strokedark dark:bg-boxdark lg:hidden\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"relative block h-5.5 w-5.5 cursor-pointer\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"du-block absolute right-0 h-full w-full\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-[0] duration-200 ease-in-out dark:bg-white \".concat(!props.sidebarOpen && \"!w-full delay-300\")\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 27,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-150 duration-200 ease-in-out dark:bg-white \".concat(!props.sidebarOpen && \"delay-400 !w-full\")\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 32,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-200 duration-200 ease-in-out dark:bg-white \".concat(!props.sidebarOpen && \"!w-full delay-500\")\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 37,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                        lineNumber: 26,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"absolute right-0 h-full w-full rotate-45\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"absolute left-2.5 top-0 block h-full w-0.5 rounded-sm bg-black delay-300 duration-200 ease-in-out dark:bg-white \".concat(!props.sidebarOpen && \"!h-0 !delay-[0]\")\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 44,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"delay-400 absolute left-0 top-2.5 block h-0.5 w-full rounded-sm bg-black duration-200 ease-in-out dark:bg-white \".concat(!props.sidebarOpen && \"!h-0 !delay-200\")\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 49,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                        lineNumber: 43,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                lineNumber: 25,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                            lineNumber: 17,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                            className: \"block flex-shrink-0 lg:hidden\",\n                            href: \"/\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                width: 32,\n                                height: 32,\n                                src: \"/images/logo/logo-icon.svg\",\n                                alt: \"Logo\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                lineNumber: 60,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                            lineNumber: 59,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                    lineNumber: 15,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"hidden sm:block\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                        action: \"/\",\n                        method: \"POST\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"absolute left-0 top-1/2 -translate-y-1/2\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        className: \"fill-body hover:fill-primary dark:fill-bodydark dark:hover:fill-primary\",\n                                        width: \"20\",\n                                        height: \"20\",\n                                        viewBox: \"0 0 20 20\",\n                                        fill: \"none\",\n                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                fillRule: \"evenodd\",\n                                                clipRule: \"evenodd\",\n                                                d: \"M9.16666 3.33332C5.945 3.33332 3.33332 5.945 3.33332 9.16666C3.33332 12.3883 5.945 15 9.16666 15C12.3883 15 15 12.3883 15 9.16666C15 5.945 12.3883 3.33332 9.16666 3.33332ZM1.66666 9.16666C1.66666 5.02452 5.02452 1.66666 9.16666 1.66666C13.3088 1.66666 16.6667 5.02452 16.6667 9.16666C16.6667 13.3088 13.3088 16.6667 9.16666 16.6667C5.02452 16.6667 1.66666 13.3088 1.66666 9.16666Z\",\n                                                fill: \"\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 81,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                fillRule: \"evenodd\",\n                                                clipRule: \"evenodd\",\n                                                d: \"M13.2857 13.2857C13.6112 12.9603 14.1388 12.9603 14.4642 13.2857L18.0892 16.9107C18.4147 17.2362 18.4147 17.7638 18.0892 18.0892C17.7638 18.4147 17.2362 18.4147 16.9107 18.0892L13.2857 14.4642C12.9603 14.1388 12.9603 13.6112 13.2857 13.2857Z\",\n                                                fill: \"\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                                lineNumber: 87,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                        lineNumber: 73,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                    lineNumber: 72,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"Type to search...\",\n                                    className: \"w-full bg-transparent pl-9 pr-4 font-medium focus:outline-none xl:w-125\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                    lineNumber: 96,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                        lineNumber: 70,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                    lineNumber: 69,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-3 2xsm:gap-7\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                            className: \"flex items-center gap-2 2xsm:gap-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DarkModeSwitcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                    lineNumber: 108,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DropdownNotification__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                    lineNumber: 112,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DropdownMessage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                                    lineNumber: 116,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                            lineNumber: 106,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DropdownUser__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                            lineNumber: 121,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n                    lineNumber: 105,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n            lineNumber: 14,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Header\\\\index.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Header;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Header);\nvar _c;\n$RefreshReg$(_c, \"Header\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Header/index.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Sidebar/SidebarLinkGroup.tsx":
/*!************************************************************!*\
  !*** ./src/components/shared/Sidebar/SidebarLinkGroup.tsx ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst SidebarLinkGroup = (param)=>{\n    let { children, activeCondition } = param;\n    _s();\n    const [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(activeCondition);\n    const handleClick = ()=>{\n        setOpen(!open);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n        children: children(handleClick, open)\n    }, void 0, false, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\SidebarLinkGroup.tsx\",\n        lineNumber: 20,\n        columnNumber: 10\n    }, undefined);\n};\n_s(SidebarLinkGroup, \"oER5SWmrKF4f2OKrMuwiDrH71ew=\");\n_c = SidebarLinkGroup;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SidebarLinkGroup);\nvar _c;\n$RefreshReg$(_c, \"SidebarLinkGroup\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3NoYXJlZC9TaWRlYmFyL1NpZGViYXJMaW5rR3JvdXAudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUU0QztBQU81QyxNQUFNQyxtQkFBbUI7UUFBQyxFQUN4QkMsUUFBUSxFQUNSQyxlQUFlLEVBQ087O0lBQ3RCLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHTCwrQ0FBUUEsQ0FBVUc7SUFFMUMsTUFBTUcsY0FBYztRQUNsQkQsUUFBUSxDQUFDRDtJQUNYO0lBRUEscUJBQU8sOERBQUNHO2tCQUFJTCxTQUFTSSxhQUFhRjs7Ozs7O0FBQ3BDO0dBWE1IO0tBQUFBO0FBYU4sK0RBQWVBLGdCQUFnQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9zaGFyZWQvU2lkZWJhci9TaWRlYmFyTGlua0dyb3VwLnRzeD8xMDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBSZWFjdE5vZGUsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5cbmludGVyZmFjZSBTaWRlYmFyTGlua0dyb3VwUHJvcHMge1xuICBjaGlsZHJlbjogKGhhbmRsZUNsaWNrOiAoKSA9PiB2b2lkLCBvcGVuOiBib29sZWFuKSA9PiBSZWFjdE5vZGU7XG4gIGFjdGl2ZUNvbmRpdGlvbjogYm9vbGVhbjtcbn1cblxuY29uc3QgU2lkZWJhckxpbmtHcm91cCA9ICh7XG4gIGNoaWxkcmVuLFxuICBhY3RpdmVDb25kaXRpb24sXG59OiBTaWRlYmFyTGlua0dyb3VwUHJvcHMpID0+IHtcbiAgY29uc3QgW29wZW4sIHNldE9wZW5dID0gdXNlU3RhdGU8Ym9vbGVhbj4oYWN0aXZlQ29uZGl0aW9uKTtcblxuICBjb25zdCBoYW5kbGVDbGljayA9ICgpID0+IHtcbiAgICBzZXRPcGVuKCFvcGVuKTtcbiAgfTtcblxuICByZXR1cm4gPGxpPntjaGlsZHJlbihoYW5kbGVDbGljaywgb3Blbil9PC9saT47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTaWRlYmFyTGlua0dyb3VwO1xuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwiU2lkZWJhckxpbmtHcm91cCIsImNoaWxkcmVuIiwiYWN0aXZlQ29uZGl0aW9uIiwib3BlbiIsInNldE9wZW4iLCJoYW5kbGVDbGljayIsImxpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Sidebar/SidebarLinkGroup.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/shared/Sidebar/index.tsx":
/*!*************************************************!*\
  !*** ./src/components/shared/Sidebar/index.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _SidebarLinkGroup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SidebarLinkGroup */ \"(app-pages-browser)/./src/components/shared/Sidebar/SidebarLinkGroup.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nconst Sidebar = (param)=>{\n    let { sidebarOpen, setSidebarOpen } = param;\n    _s();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    const trigger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const sidebar = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    let storedSidebarExpanded = \"true\";\n    const [sidebarExpanded, setSidebarExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(storedSidebarExpanded === null ? false : storedSidebarExpanded === \"true\");\n    // close on click outside\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const clickHandler = (param)=>{\n            let { target } = param;\n            if (!sidebar.current || !trigger.current) return;\n            if (!sidebarOpen || sidebar.current.contains(target) || trigger.current.contains(target)) return;\n            setSidebarOpen(false);\n        };\n        document.addEventListener(\"click\", clickHandler);\n        return ()=>document.removeEventListener(\"click\", clickHandler);\n    });\n    // close if the esc key is pressed\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const keyHandler = (param)=>{\n            let { key } = param;\n            if (!sidebarOpen || key !== \"Escape\") return;\n            setSidebarOpen(false);\n        };\n        document.addEventListener(\"keydown\", keyHandler);\n        return ()=>document.removeEventListener(\"keydown\", keyHandler);\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"sidebar-expanded\", sidebarExpanded.toString());\n        if (sidebarExpanded) {\n            var _document_querySelector;\n            (_document_querySelector = document.querySelector(\"body\")) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.classList.add(\"sidebar-expanded\");\n        } else {\n            var _document_querySelector1;\n            (_document_querySelector1 = document.querySelector(\"body\")) === null || _document_querySelector1 === void 0 ? void 0 : _document_querySelector1.classList.remove(\"sidebar-expanded\");\n        }\n    }, [\n        sidebarExpanded\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"aside\", {\n        ref: sidebar,\n        className: \"absolute left-0 top-0 z-9999 flex h-screen w-72.5 flex-col overflow-y-hidden bg-black duration-300 ease-linear dark:bg-boxdark lg:static lg:translate-x-0 \".concat(sidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between gap-2 px-6 py-5.5 lg:py-6.5\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        href: \"/\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            width: 170,\n                            height: 32,\n                            src: \"/images/logo/logo.svg\",\n                            alt: \"Logo\",\n                            priority: true\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                        lineNumber: 70,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        ref: trigger,\n                        onClick: ()=>setSidebarOpen(!sidebarOpen),\n                        \"aria-controls\": \"sidebar\",\n                        \"aria-expanded\": sidebarOpen,\n                        className: \"block lg:hidden\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"fill-current\",\n                            width: \"20\",\n                            height: \"18\",\n                            viewBox: \"0 0 20 18\",\n                            fill: \"none\",\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M19 8.175H2.98748L9.36248 1.6875C9.69998 1.35 9.69998 0.825 9.36248 0.4875C9.02498 0.15 8.49998 0.15 8.16248 0.4875L0.399976 8.3625C0.0624756 8.7 0.0624756 9.225 0.399976 9.5625L8.16248 17.4375C8.31248 17.5875 8.53748 17.7 8.76248 17.7C8.98748 17.7 9.17498 17.625 9.36248 17.475C9.69998 17.1375 9.69998 16.6125 9.36248 16.275L3.02498 9.8625H19C19.45 9.8625 19.825 9.4875 19.825 9.0375C19.825 8.55 19.45 8.175 19 8.175Z\",\n                                fill: \"\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                lineNumber: 95,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                            lineNumber: 87,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                        lineNumber: 80,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                lineNumber: 69,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"no-scrollbar flex flex-col overflow-y-auto duration-300 ease-linear\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                    className: \"mt-5 px-4 py-4 lg:mt-9 lg:px-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"mb-4 ml-4 text-sm font-semibold text-bodydark2\",\n                                    children: \"MENU\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                    lineNumber: 109,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                    className: \"mb-6 flex flex-col gap-1.5\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                href: \"/\",\n                                                className: \"group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 \".concat((pathname === \"/\" || pathname.includes(\"dashboard\")) && \"bg-graydark dark:bg-meta-4\"),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        className: \"fill-current\",\n                                                        width: \"18\",\n                                                        height: \"18\",\n                                                        viewBox: \"0 0 18 18\",\n                                                        fill: \"none\",\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M6.10322 0.956299H2.53135C1.5751 0.956299 0.787598 1.7438 0.787598 2.70005V6.27192C0.787598 7.22817 1.5751 8.01567 2.53135 8.01567H6.10322C7.05947 8.01567 7.84697 7.22817 7.84697 6.27192V2.72817C7.8751 1.7438 7.0876 0.956299 6.10322 0.956299ZM6.60947 6.30005C6.60947 6.5813 6.38447 6.8063 6.10322 6.8063H2.53135C2.2501 6.8063 2.0251 6.5813 2.0251 6.30005V2.72817C2.0251 2.44692 2.2501 2.22192 2.53135 2.22192H6.10322C6.38447 2.22192 6.60947 2.44692 6.60947 2.72817V6.30005Z\",\n                                                                fill: \"\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 132,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M15.4689 0.956299H11.8971C10.9408 0.956299 10.1533 1.7438 10.1533 2.70005V6.27192C10.1533 7.22817 10.9408 8.01567 11.8971 8.01567H15.4689C16.4252 8.01567 17.2127 7.22817 17.2127 6.27192V2.72817C17.2127 1.7438 16.4252 0.956299 15.4689 0.956299ZM15.9752 6.30005C15.9752 6.5813 15.7502 6.8063 15.4689 6.8063H11.8971C11.6158 6.8063 11.3908 6.5813 11.3908 6.30005V2.72817C11.3908 2.44692 11.6158 2.22192 11.8971 2.22192H15.4689C15.7502 2.22192 15.9752 2.44692 15.9752 2.72817V6.30005Z\",\n                                                                fill: \"\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 136,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M6.10322 9.92822H2.53135C1.5751 9.92822 0.787598 10.7157 0.787598 11.672V15.2438C0.787598 16.2001 1.5751 16.9876 2.53135 16.9876H6.10322C7.05947 16.9876 7.84697 16.2001 7.84697 15.2438V11.7001C7.8751 10.7157 7.0876 9.92822 6.10322 9.92822ZM6.60947 15.272C6.60947 15.5532 6.38447 15.7782 6.10322 15.7782H2.53135C2.2501 15.7782 2.0251 15.5532 2.0251 15.272V11.7001C2.0251 11.4188 2.2501 11.1938 2.53135 11.1938H6.10322C6.38447 11.1938 6.60947 11.4188 6.60947 11.7001V15.272Z\",\n                                                                fill: \"\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 140,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M15.4689 9.92822H11.8971C10.9408 9.92822 10.1533 10.7157 10.1533 11.672V15.2438C10.1533 16.2001 10.9408 16.9876 11.8971 16.9876H15.4689C16.4252 16.9876 17.2127 16.2001 17.2127 15.2438V11.7001C17.2127 10.7157 16.4252 9.92822 15.4689 9.92822ZM15.9752 15.272C15.9752 15.5532 15.7502 15.7782 15.4689 15.7782H11.8971C11.6158 15.7782 11.3908 15.5532 11.3908 15.272V11.7001C11.3908 11.4188 11.6158 11.1938 11.8971 11.1938H15.4689C15.7502 11.1938 15.9752 11.4188 15.9752 11.7001V15.272Z\",\n                                                                fill: \"\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 144,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 124,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    \"Dashboard\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                lineNumber: 116,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                            lineNumber: 115,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                href: \"/profile\",\n                                                className: \"group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 \".concat(pathname.includes(\"profile\") && \"bg-graydark dark:bg-meta-4\"),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        className: \"fill-current\",\n                                                        width: \"18\",\n                                                        height: \"18\",\n                                                        viewBox: \"0 0 18 18\",\n                                                        fill: \"none\",\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M9.0002 7.79065C11.0814 7.79065 12.7689 6.1594 12.7689 4.1344C12.7689 2.1094 11.0814 0.478149 9.0002 0.478149C6.91895 0.478149 5.23145 2.1094 5.23145 4.1344C5.23145 6.1594 6.91895 7.79065 9.0002 7.79065ZM9.0002 1.7719C10.3783 1.7719 11.5033 2.84065 11.5033 4.16252C11.5033 5.4844 10.3783 6.55315 9.0002 6.55315C7.62207 6.55315 6.49707 5.4844 6.49707 4.16252C6.49707 2.84065 7.62207 1.7719 9.0002 1.7719Z\",\n                                                                fill: \"\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 170,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M10.8283 9.05627H7.17207C4.16269 9.05627 1.71582 11.5313 1.71582 14.5406V16.875C1.71582 17.2125 1.99707 17.5219 2.3627 17.5219C2.72832 17.5219 3.00957 17.2407 3.00957 16.875V14.5406C3.00957 12.2344 4.89394 10.3219 7.22832 10.3219H10.8564C13.1627 10.3219 15.0752 12.2063 15.0752 14.5406V16.875C15.0752 17.2125 15.3564 17.5219 15.7221 17.5219C16.0877 17.5219 16.3689 17.2407 16.3689 16.875V14.5406C16.2846 11.5313 13.8377 9.05627 10.8283 9.05627Z\",\n                                                                fill: \"\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 174,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 162,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    \"Profile\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                lineNumber: 156,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                            lineNumber: 155,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                href: \"/tables\",\n                                                className: \"group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 \".concat(pathname.includes(\"tables\") && \"bg-graydark dark:bg-meta-4\"),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        className: \"fill-current\",\n                                                        width: \"18\",\n                                                        height: \"19\",\n                                                        viewBox: \"0 0 18 19\",\n                                                        fill: \"none\",\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                                                                clipPath: \"url(#clip0_130_9756)\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                    d: \"M15.7501 0.55835H2.2501C1.29385 0.55835 0.506348 1.34585 0.506348 2.3021V15.8021C0.506348 16.7584 1.29385 17.574 2.27822 17.574H15.7782C16.7345 17.574 17.5501 16.7865 17.5501 15.8021V2.3021C17.522 1.34585 16.7063 0.55835 15.7501 0.55835ZM6.69385 10.599V6.4646H11.3063V10.5709H6.69385V10.599ZM11.3063 11.8646V16.3083H6.69385V11.8646H11.3063ZM1.77197 6.4646H5.45635V10.5709H1.77197V6.4646ZM12.572 6.4646H16.2563V10.5709H12.572V6.4646ZM2.2501 1.82397H15.7501C16.0313 1.82397 16.2563 2.04897 16.2563 2.33022V5.2271H1.77197V2.3021C1.77197 2.02085 1.96885 1.82397 2.2501 1.82397ZM1.77197 15.8021V11.8646H5.45635V16.3083H2.2501C1.96885 16.3083 1.77197 16.0834 1.77197 15.8021ZM15.7501 16.3083H12.572V11.8646H16.2563V15.8021C16.2563 16.0834 16.0313 16.3083 15.7501 16.3083Z\",\n                                                                    fill: \"\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 201,\n                                                                    columnNumber: 23\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 200,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"clipPath\", {\n                                                                    id: \"clip0_130_9756\",\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                                                        width: \"18\",\n                                                                        height: \"18\",\n                                                                        fill: \"white\",\n                                                                        transform: \"translate(0 0.052124)\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 208,\n                                                                        columnNumber: 25\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 207,\n                                                                    columnNumber: 23\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 206,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 192,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    \"Tables\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                lineNumber: 186,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                            lineNumber: 185,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                href: \"/settings\",\n                                                className: \"group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 \".concat(pathname.includes(\"settings\") && \"bg-graydark dark:bg-meta-4\"),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        className: \"fill-current\",\n                                                        width: \"18\",\n                                                        height: \"19\",\n                                                        viewBox: \"0 0 18 19\",\n                                                        fill: \"none\",\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                                                                clipPath: \"url(#clip0_130_9763)\",\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                        d: \"M17.0721 7.30835C16.7909 6.99897 16.3971 6.83022 15.9752 6.83022H15.8909C15.7502 6.83022 15.6377 6.74585 15.6096 6.63335C15.5815 6.52085 15.5252 6.43647 15.4971 6.32397C15.4409 6.21147 15.4971 6.09897 15.5815 6.0146L15.6377 5.95835C15.9471 5.6771 16.1159 5.28335 16.1159 4.86147C16.1159 4.4396 15.9752 4.04585 15.6659 3.73647L14.569 2.61147C13.9784 1.99272 12.9659 1.9646 12.3471 2.58335L12.2627 2.6396C12.1784 2.72397 12.0377 2.7521 11.8971 2.69585C11.7846 2.6396 11.6721 2.58335 11.5315 2.55522C11.3909 2.49897 11.3065 2.38647 11.3065 2.27397V2.13335C11.3065 1.26147 10.6034 0.55835 9.73148 0.55835H8.15648C7.7346 0.55835 7.34085 0.7271 7.0596 1.00835C6.75023 1.31772 6.6096 1.71147 6.6096 2.10522V2.21772C6.6096 2.33022 6.52523 2.44272 6.41273 2.49897C6.35648 2.5271 6.32835 2.5271 6.2721 2.55522C6.1596 2.61147 6.01898 2.58335 5.9346 2.49897L5.87835 2.4146C5.5971 2.10522 5.20335 1.93647 4.78148 1.93647C4.3596 1.93647 3.96585 2.0771 3.65648 2.38647L2.53148 3.48335C1.91273 4.07397 1.8846 5.08647 2.50335 5.70522L2.5596 5.7896C2.64398 5.87397 2.6721 6.0146 2.61585 6.09897C2.5596 6.21147 2.53148 6.29585 2.47523 6.40835C2.41898 6.52085 2.3346 6.5771 2.19398 6.5771H2.1096C1.68773 6.5771 1.29398 6.71772 0.984604 7.0271C0.675229 7.30835 0.506479 7.7021 0.506479 8.12397L0.478354 9.69897C0.450229 10.5708 1.15335 11.274 2.02523 11.3021H2.1096C2.25023 11.3021 2.36273 11.3865 2.39085 11.499C2.4471 11.5833 2.50335 11.6677 2.53148 11.7802C2.5596 11.8927 2.53148 12.0052 2.4471 12.0896L2.39085 12.1458C2.08148 12.4271 1.91273 12.8208 1.91273 13.2427C1.91273 13.6646 2.05335 14.0583 2.36273 14.3677L3.4596 15.4927C4.05023 16.1115 5.06273 16.1396 5.68148 15.5208L5.76585 15.4646C5.85023 15.3802 5.99085 15.3521 6.13148 15.4083C6.24398 15.4646 6.35648 15.5208 6.4971 15.549C6.63773 15.6052 6.7221 15.7177 6.7221 15.8302V15.9427C6.7221 16.8146 7.42523 17.5177 8.2971 17.5177H9.8721C10.744 17.5177 11.4471 16.8146 11.4471 15.9427V15.8302C11.4471 15.7177 11.5315 15.6052 11.644 15.549C11.7002 15.5208 11.7284 15.5208 11.7846 15.4927C11.9252 15.4365 12.0377 15.4646 12.1221 15.549L12.1784 15.6333C12.4596 15.9427 12.8534 16.1115 13.2752 16.1115C13.6971 16.1115 14.0909 15.9708 14.4002 15.6615L15.5252 14.5646C16.144 13.974 16.1721 12.9615 15.5534 12.3427L15.4971 12.2583C15.4127 12.174 15.3846 12.0333 15.4409 11.949C15.4971 11.8365 15.5252 11.7521 15.5815 11.6396C15.6377 11.5271 15.7502 11.4708 15.8627 11.4708H15.9471H15.9752C16.819 11.4708 17.5221 10.7958 17.5502 9.92397L17.5784 8.34897C17.5221 8.01147 17.3534 7.5896 17.0721 7.30835ZM16.2284 9.9521C16.2284 10.1208 16.0877 10.2615 15.919 10.2615H15.8346H15.8065C15.1596 10.2615 14.569 10.6552 14.344 11.2177C14.3159 11.3021 14.2596 11.3865 14.2315 11.4708C13.9784 12.0333 14.0909 12.7365 14.5409 13.1865L14.5971 13.2708C14.7096 13.3833 14.7096 13.5802 14.5971 13.6927L13.4721 14.7896C13.3877 14.874 13.3034 14.874 13.2471 14.874C13.1909 14.874 13.1065 14.874 13.0221 14.7896L12.9659 14.7052C12.5159 14.2271 11.8409 14.0865 11.2221 14.3677L11.1096 14.424C10.4909 14.6771 10.0971 15.2396 10.0971 15.8865V15.999C10.0971 16.1677 9.95648 16.3083 9.78773 16.3083H8.21273C8.04398 16.3083 7.90335 16.1677 7.90335 15.999V15.8865C7.90335 15.2396 7.5096 14.649 6.89085 14.424C6.80648 14.3958 6.69398 14.3396 6.6096 14.3115C6.3846 14.199 6.1596 14.1708 5.9346 14.1708C5.54085 14.1708 5.1471 14.3115 4.83773 14.6208L4.78148 14.649C4.66898 14.7615 4.4721 14.7615 4.3596 14.649L3.26273 13.524C3.17835 13.4396 3.17835 13.3552 3.17835 13.299C3.17835 13.2427 3.17835 13.1583 3.26273 13.074L3.31898 13.0177C3.7971 12.5677 3.93773 11.8646 3.6846 11.3021C3.65648 11.2177 3.62835 11.1333 3.5721 11.049C3.3471 10.4583 2.7846 10.0365 2.13773 10.0365H2.05335C1.8846 10.0365 1.74398 9.89585 1.74398 9.7271L1.7721 8.1521C1.7721 8.0396 1.82835 7.98335 1.85648 7.9271C1.8846 7.89897 1.96898 7.84272 2.08148 7.84272H2.16585C2.81273 7.87085 3.40335 7.4771 3.65648 6.88647C3.6846 6.8021 3.74085 6.71772 3.76898 6.63335C4.0221 6.07085 3.9096 5.36772 3.4596 4.91772L3.40335 4.83335C3.29085 4.72085 3.29085 4.52397 3.40335 4.41147L4.52835 3.3146C4.61273 3.23022 4.6971 3.23022 4.75335 3.23022C4.8096 3.23022 4.89398 3.23022 4.97835 3.3146L5.0346 3.39897C5.4846 3.8771 6.1596 4.01772 6.77835 3.7646L6.89085 3.70835C7.5096 3.45522 7.90335 2.89272 7.90335 2.24585V2.13335C7.90335 2.02085 7.9596 1.9646 7.98773 1.90835C8.01585 1.8521 8.10023 1.82397 8.21273 1.82397H9.78773C9.95648 1.82397 10.0971 1.9646 10.0971 2.13335V2.24585C10.0971 2.89272 10.4909 3.48335 11.1096 3.70835C11.194 3.73647 11.3065 3.79272 11.3909 3.82085C11.9815 4.1021 12.6846 3.9896 13.1627 3.5396L13.2471 3.48335C13.3596 3.37085 13.5565 3.37085 13.669 3.48335L14.7659 4.60835C14.8502 4.69272 14.8502 4.7771 14.8502 4.83335C14.8502 4.8896 14.8221 4.97397 14.7659 5.05835L14.7096 5.1146C14.2034 5.53647 14.0627 6.2396 14.2877 6.8021C14.3159 6.88647 14.344 6.97085 14.4002 7.05522C14.6252 7.64585 15.1877 8.06772 15.8346 8.06772H15.919C16.0315 8.06772 16.0877 8.12397 16.144 8.1521C16.2002 8.18022 16.2284 8.2646 16.2284 8.3771V9.9521Z\",\n                                                                        fill: \"\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 240,\n                                                                        columnNumber: 23\n                                                                    }, undefined),\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                        d: \"M9.00029 5.22705C6.89092 5.22705 5.17529 6.94268 5.17529 9.05205C5.17529 11.1614 6.89092 12.8771 9.00029 12.8771C11.1097 12.8771 12.8253 11.1614 12.8253 9.05205C12.8253 6.94268 11.1097 5.22705 9.00029 5.22705ZM9.00029 11.6114C7.59404 11.6114 6.44092 10.4583 6.44092 9.05205C6.44092 7.6458 7.59404 6.49268 9.00029 6.49268C10.4065 6.49268 11.5597 7.6458 11.5597 9.05205C11.5597 10.4583 10.4065 11.6114 9.00029 11.6114Z\",\n                                                                        fill: \"\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 244,\n                                                                        columnNumber: 23\n                                                                    }, undefined)\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 239,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"clipPath\", {\n                                                                    id: \"clip0_130_9763\",\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                                                        width: \"18\",\n                                                                        height: \"18\",\n                                                                        fill: \"white\",\n                                                                        transform: \"translate(0 0.052124)\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 251,\n                                                                        columnNumber: 25\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 250,\n                                                                    columnNumber: 23\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 249,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 231,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    \"Settings\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                lineNumber: 224,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                            lineNumber: 223,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                href: \"/chart\",\n                                                className: \"group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 \".concat(pathname.includes(\"chart\") && \"bg-graydark dark:bg-meta-4\"),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        className: \"fill-current\",\n                                                        width: \"18\",\n                                                        height: \"19\",\n                                                        viewBox: \"0 0 18 19\",\n                                                        fill: \"none\",\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                                                                clipPath: \"url(#clip0_130_9801)\",\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                        d: \"M10.8563 0.55835C10.5188 0.55835 10.2095 0.8396 10.2095 1.20522V6.83022C10.2095 7.16773 10.4907 7.4771 10.8563 7.4771H16.8751C17.0438 7.4771 17.2126 7.39272 17.3251 7.28022C17.4376 7.1396 17.4938 6.97085 17.4938 6.8021C17.2688 3.28647 14.3438 0.55835 10.8563 0.55835ZM11.4751 6.15522V1.8521C13.8095 2.13335 15.6938 3.8771 16.1438 6.18335H11.4751V6.15522Z\",\n                                                                        fill: \"\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 281,\n                                                                        columnNumber: 23\n                                                                    }, undefined),\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                        d: \"M15.3845 8.7427H9.1126V2.69582C9.1126 2.35832 8.83135 2.07707 8.49385 2.07707C8.40947 2.07707 8.3251 2.07707 8.24072 2.07707C3.96572 2.04895 0.506348 5.53645 0.506348 9.81145C0.506348 14.0864 3.99385 17.5739 8.26885 17.5739C12.5438 17.5739 16.0313 14.0864 16.0313 9.81145C16.0313 9.6427 16.0313 9.47395 16.0032 9.33332C16.0032 8.99582 15.722 8.7427 15.3845 8.7427ZM8.26885 16.3083C4.66885 16.3083 1.77197 13.4114 1.77197 9.81145C1.77197 6.3802 4.47197 3.53957 7.8751 3.3427V9.36145C7.8751 9.69895 8.15635 10.0083 8.52197 10.0083H14.7938C14.6813 13.4958 11.7845 16.3083 8.26885 16.3083Z\",\n                                                                        fill: \"\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 285,\n                                                                        columnNumber: 23\n                                                                    }, undefined)\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 280,\n                                                                columnNumber: 21\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"clipPath\", {\n                                                                    id: \"clip0_130_9801\",\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                                                        width: \"18\",\n                                                                        height: \"18\",\n                                                                        fill: \"white\",\n                                                                        transform: \"translate(0 0.052124)\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 292,\n                                                                        columnNumber: 25\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 291,\n                                                                    columnNumber: 23\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 290,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 272,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    \"Chart\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                lineNumber: 266,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                            lineNumber: 265,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                    lineNumber: 113,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                            lineNumber: 108,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"mb-4 ml-4 text-sm font-semibold text-bodydark2\",\n                                    children: \"OTHERS\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                    lineNumber: 310,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                    className: \"mb-6 flex flex-col gap-1.5\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SidebarLinkGroup__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                        activeCondition: pathname === \"/auth\" || pathname.includes(\"auth\"),\n                                        children: (handleClick, open)=>{\n                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                        href: \"#\",\n                                                        className: \"group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 \".concat((pathname === \"/auth\" || pathname.includes(\"auth\")) && \"bg-graydark dark:bg-meta-4\"),\n                                                        onClick: (e)=>{\n                                                            e.preventDefault();\n                                                            sidebarExpanded ? handleClick() : setSidebarExpanded(true);\n                                                        },\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                                className: \"fill-current\",\n                                                                width: \"18\",\n                                                                height: \"19\",\n                                                                viewBox: \"0 0 18 19\",\n                                                                fill: \"none\",\n                                                                xmlns: \"http://www.w3.org/2000/svg\",\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                                                                        clipPath: \"url(#clip0_130_9814)\",\n                                                                        children: [\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                                d: \"M12.7127 0.55835H9.53457C8.80332 0.55835 8.18457 1.1771 8.18457 1.90835V3.84897C8.18457 4.18647 8.46582 4.46772 8.80332 4.46772C9.14082 4.46772 9.45019 4.18647 9.45019 3.84897V1.88022C9.45019 1.82397 9.47832 1.79585 9.53457 1.79585H12.7127C13.3877 1.79585 13.9221 2.33022 13.9221 3.00522V15.0709C13.9221 15.7459 13.3877 16.2802 12.7127 16.2802H9.53457C9.47832 16.2802 9.45019 16.2521 9.45019 16.1959V14.2552C9.45019 13.9177 9.16894 13.6365 8.80332 13.6365C8.43769 13.6365 8.18457 13.9177 8.18457 14.2552V16.1959C8.18457 16.9271 8.80332 17.5459 9.53457 17.5459H12.7127C14.0908 17.5459 15.1877 16.4209 15.1877 15.0709V3.03335C15.1877 1.65522 14.0627 0.55835 12.7127 0.55835Z\",\n                                                                                fill: \"\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                                lineNumber: 346,\n                                                                                columnNumber: 29\n                                                                            }, undefined),\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                                d: \"M10.4346 8.60205L7.62207 5.7333C7.36895 5.48018 6.97519 5.48018 6.72207 5.7333C6.46895 5.98643 6.46895 6.38018 6.72207 6.6333L8.46582 8.40518H3.45957C3.12207 8.40518 2.84082 8.68643 2.84082 9.02393C2.84082 9.36143 3.12207 9.64268 3.45957 9.64268H8.49395L6.72207 11.4427C6.46895 11.6958 6.46895 12.0896 6.72207 12.3427C6.83457 12.4552 7.00332 12.5114 7.17207 12.5114C7.34082 12.5114 7.50957 12.4552 7.62207 12.3145L10.4346 9.4458C10.6877 9.24893 10.6877 8.85518 10.4346 8.60205Z\",\n                                                                                fill: \"\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                                lineNumber: 350,\n                                                                                columnNumber: 29\n                                                                            }, undefined)\n                                                                        ]\n                                                                    }, void 0, true, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 345,\n                                                                        columnNumber: 27\n                                                                    }, undefined),\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"clipPath\", {\n                                                                            id: \"clip0_130_9814\",\n                                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                                                                width: \"18\",\n                                                                                height: \"18\",\n                                                                                fill: \"white\",\n                                                                                transform: \"translate(0 0.052124)\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                                lineNumber: 357,\n                                                                                columnNumber: 31\n                                                                            }, undefined)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                            lineNumber: 356,\n                                                                            columnNumber: 29\n                                                                        }, undefined)\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 355,\n                                                                        columnNumber: 27\n                                                                    }, undefined)\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 337,\n                                                                columnNumber: 25\n                                                            }, undefined),\n                                                            \"Authentication\",\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                                className: \"absolute right-4 top-1/2 -translate-y-1/2 fill-current \".concat(open && \"rotate-180\"),\n                                                                width: \"20\",\n                                                                height: \"20\",\n                                                                viewBox: \"0 0 20 20\",\n                                                                fill: \"none\",\n                                                                xmlns: \"http://www.w3.org/2000/svg\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                    fillRule: \"evenodd\",\n                                                                    clipRule: \"evenodd\",\n                                                                    d: \"M4.41107 6.9107C4.73651 6.58527 5.26414 6.58527 5.58958 6.9107L10.0003 11.3214L14.4111 6.91071C14.7365 6.58527 15.2641 6.58527 15.5896 6.91071C15.915 7.23614 15.915 7.76378 15.5896 8.08922L10.5896 13.0892C10.2641 13.4147 9.73651 13.4147 9.41107 13.0892L4.41107 8.08922C4.08563 7.76378 4.08563 7.23614 4.41107 6.9107Z\",\n                                                                    fill: \"\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 377,\n                                                                    columnNumber: 27\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                lineNumber: 367,\n                                                                columnNumber: 25\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 324,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"translate transform overflow-hidden \".concat(!open && \"hidden\"),\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                            className: \"mb-5.5 mt-4 flex flex-col gap-2.5 pl-6\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                                        href: \"/auth/signin\",\n                                                                        className: \"group relative flex items-center gap-2.5 rounded-md px-4 font-medium text-bodydark2 duration-300 ease-in-out hover:text-white \".concat(pathname === \"/auth/signin\" && \"text-white\"),\n                                                                        children: \"Sign In\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 393,\n                                                                        columnNumber: 29\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 392,\n                                                                    columnNumber: 27\n                                                                }, undefined),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                                        href: \"/auth/signup\",\n                                                                        className: \"group relative flex items-center gap-2.5 rounded-md px-4 font-medium text-bodydark2 duration-300 ease-in-out hover:text-white \".concat(pathname === \"/auth/signup\" && \"text-white\"),\n                                                                        children: \"Sign Up\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                        lineNumber: 403,\n                                                                        columnNumber: 29\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                                    lineNumber: 402,\n                                                                    columnNumber: 27\n                                                                }, undefined)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                            lineNumber: 391,\n                                                            columnNumber: 25\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                        lineNumber: 386,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                                lineNumber: 323,\n                                                columnNumber: 21\n                                            }, undefined);\n                                        }\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                        lineNumber: 316,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                                    lineNumber: 314,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                            lineNumber: 309,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                    lineNumber: 106,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n                lineNumber: 104,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\shared\\\\Sidebar\\\\index.tsx\",\n        lineNumber: 62,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Sidebar, \"oA5ordi+84FrMMXEP+9ZXl+eSbc=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname\n    ];\n});\n_c = Sidebar;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sidebar);\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/shared/Sidebar/index.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/utility/Lottie/SigninLottie.tsx":
/*!********************************************************!*\
  !*** ./src/components/utility/Lottie/SigninLottie.tsx ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lottiefiles_react_lottie_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lottiefiles/react-lottie-player */ \"(app-pages-browser)/./node_modules/@lottiefiles/react-lottie-player/dist/lottie-react.esm.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nconst LottiePlayer = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lottiefiles_react_lottie_player__WEBPACK_IMPORTED_MODULE_2__.Player, {\n            autoplay: true,\n            loop: true,\n            src: \"/images/lottie/signin.json\",\n            style: {\n                height: \"500px\",\n                width: \"500px\"\n            }\n        }, void 0, false, {\n            fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\utility\\\\Lottie\\\\SigninLottie.tsx\",\n            lineNumber: 9,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\Noticed\\\\documents\\\\fa\\\\nextjs-dashboard\\\\src\\\\components\\\\utility\\\\Lottie\\\\SigninLottie.tsx\",\n        lineNumber: 8,\n        columnNumber: 7\n    }, undefined);\n};\n_c = LottiePlayer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LottiePlayer);\nvar _c;\n$RefreshReg$(_c, \"LottiePlayer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3V0aWxpdHkvTG90dGllL1NpZ25pbkxvdHRpZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRXlCO0FBQ2lDO0FBRTFELE1BQU1FLGVBQXlCO0lBQzNCLHFCQUNFLDhEQUFDQztrQkFDQyw0RUFBQ0Ysb0VBQU1BO1lBQ0hHLFFBQVE7WUFDUkMsSUFBSTtZQUNKQyxLQUFLO1lBQ0xDLE9BQU87Z0JBQUVDLFFBQVE7Z0JBQVNDLE9BQU87WUFBUTs7Ozs7Ozs7Ozs7QUFLbkQ7S0FaSVA7QUFjTiwrREFBZUEsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy91dGlsaXR5L0xvdHRpZS9TaWduaW5Mb3R0aWUudHN4PzBlNjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IFBsYXllciB9IGZyb20gJ0Bsb3R0aWVmaWxlcy9yZWFjdC1sb3R0aWUtcGxheWVyJztcclxuXHJcbmNvbnN0IExvdHRpZVBsYXllcjogUmVhY3QuRkMgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxQbGF5ZXJcclxuICAgICAgICAgICAgYXV0b3BsYXlcclxuICAgICAgICAgICAgbG9vcFxyXG4gICAgICAgICAgICBzcmM9e1wiL2ltYWdlcy9sb3R0aWUvc2lnbmluLmpzb25cIn1cclxuICAgICAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiAnNTAwcHgnLCB3aWR0aDogJzUwMHB4JyB9fVxyXG4gICAgICAgID5cclxuICAgICAgICA8L1BsYXllcj5cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMb3R0aWVQbGF5ZXI7XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlBsYXllciIsIkxvdHRpZVBsYXllciIsImRpdiIsImF1dG9wbGF5IiwibG9vcCIsInNyYyIsInN0eWxlIiwiaGVpZ2h0Iiwid2lkdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/utility/Lottie/SigninLottie.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/hooks/useColorMode.tsx":
/*!************************************!*\
  !*** ./src/hooks/useColorMode.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useLocalStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useLocalStorage */ \"(app-pages-browser)/./src/hooks/useLocalStorage.tsx\");\nvar _s = $RefreshSig$();\n\n\nconst useColorMode = ()=>{\n    _s();\n    const [colorMode, setColorMode] = (0,_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"color-theme\", \"light\");\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const className = \"dark\";\n        const bodyClass = window.document.body.classList;\n        colorMode === \"dark\" ? bodyClass.add(className) : bodyClass.remove(className);\n    }, [\n        colorMode\n    ]);\n    return [\n        colorMode,\n        setColorMode\n    ];\n};\n_s(useColorMode, \"nfcEHN4gLknmEYOfpU/tbfAL/mU=\", false, function() {\n    return [\n        _useLocalStorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (useColorMode);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VDb2xvck1vZGUudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQ2M7QUFFaEQsTUFBTUUsZUFBZTs7SUFDbkIsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUdILDREQUFlQSxDQUFDLGVBQWU7SUFFakVELGdEQUFTQSxDQUFDO1FBQ1IsTUFBTUssWUFBWTtRQUNsQixNQUFNQyxZQUFZQyxPQUFPQyxRQUFRLENBQUNDLElBQUksQ0FBQ0MsU0FBUztRQUVoRFAsY0FBYyxTQUNWRyxVQUFVSyxHQUFHLENBQUNOLGFBQ2RDLFVBQVVNLE1BQU0sQ0FBQ1A7SUFDdkIsR0FBRztRQUFDRjtLQUFVO0lBRWQsT0FBTztRQUFDQTtRQUFXQztLQUFhO0FBQ2xDO0dBYk1GOztRQUM4QkQsd0RBQWVBOzs7QUFjbkQsK0RBQWVDLFlBQVlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2hvb2tzL3VzZUNvbG9yTW9kZS50c3g/NGQzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB1c2VMb2NhbFN0b3JhZ2UgZnJvbSBcIi4vdXNlTG9jYWxTdG9yYWdlXCI7XG5cbmNvbnN0IHVzZUNvbG9yTW9kZSA9ICgpID0+IHtcbiAgY29uc3QgW2NvbG9yTW9kZSwgc2V0Q29sb3JNb2RlXSA9IHVzZUxvY2FsU3RvcmFnZShcImNvbG9yLXRoZW1lXCIsIFwibGlnaHRcIik7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjbGFzc05hbWUgPSBcImRhcmtcIjtcbiAgICBjb25zdCBib2R5Q2xhc3MgPSB3aW5kb3cuZG9jdW1lbnQuYm9keS5jbGFzc0xpc3Q7XG5cbiAgICBjb2xvck1vZGUgPT09IFwiZGFya1wiXG4gICAgICA/IGJvZHlDbGFzcy5hZGQoY2xhc3NOYW1lKVxuICAgICAgOiBib2R5Q2xhc3MucmVtb3ZlKGNsYXNzTmFtZSk7XG4gIH0sIFtjb2xvck1vZGVdKTtcblxuICByZXR1cm4gW2NvbG9yTW9kZSwgc2V0Q29sb3JNb2RlXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUNvbG9yTW9kZTtcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VMb2NhbFN0b3JhZ2UiLCJ1c2VDb2xvck1vZGUiLCJjb2xvck1vZGUiLCJzZXRDb2xvck1vZGUiLCJjbGFzc05hbWUiLCJib2R5Q2xhc3MiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImJvZHkiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useColorMode.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/hooks/useLocalStorage.tsx":
/*!***************************************!*\
  !*** ./src/hooks/useLocalStorage.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\nfunction useLocalStorage(key, initialValue) {\n    _s();\n    // State to store our value\n    // Pass  initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        try {\n            // Get from local storage by key\n            if (true) {\n                // browser code\n                const item = window.localStorage.getItem(key);\n                // Parse stored json or if none return initialValue\n                return item ? JSON.parse(item) : initialValue;\n            }\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n    // useEffect to update local storage when the state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = typeof storedValue === \"function\" ? storedValue(storedValue) : storedValue;\n            // Save state\n            if (true) {\n                // browser code\n                window.localStorage.setItem(key, JSON.stringify(valueToStore));\n            }\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    }, [\n        key,\n        storedValue\n    ]);\n    return [\n        storedValue,\n        setStoredValue\n    ];\n}\n_s(useLocalStorage, \"E4FYgWHiGR6T2hKNHeDxqQf/QGU=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (useLocalStorage);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VMb2NhbFN0b3JhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFFNEM7QUFJNUMsU0FBU0UsZ0JBQ1BDLEdBQVcsRUFDWEMsWUFBZTs7SUFFZiwyQkFBMkI7SUFDM0IsMEVBQTBFO0lBQzFFLE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHTCwrQ0FBUUEsQ0FBQztRQUM3QyxJQUFJO1lBQ0YsZ0NBQWdDO1lBQ2hDLElBQUksSUFBNkIsRUFBRTtnQkFDakMsZUFBZTtnQkFDZixNQUFNTSxPQUFPQyxPQUFPQyxZQUFZLENBQUNDLE9BQU8sQ0FBQ1A7Z0JBQ3pDLG1EQUFtRDtnQkFDbkQsT0FBT0ksT0FBT0ksS0FBS0MsS0FBSyxDQUFDTCxRQUFRSDtZQUNuQztRQUNGLEVBQUUsT0FBT1MsT0FBTztZQUNkLG9DQUFvQztZQUNwQ0MsUUFBUUMsR0FBRyxDQUFDRjtZQUNaLE9BQU9UO1FBQ1Q7SUFDRjtJQUVBLDJEQUEyRDtJQUMzREosZ0RBQVNBLENBQUM7UUFDUixJQUFJO1lBQ0YsK0RBQStEO1lBQy9ELE1BQU1nQixlQUNKLE9BQU9YLGdCQUFnQixhQUNuQkEsWUFBWUEsZUFDWkE7WUFDTixhQUFhO1lBQ2IsSUFBSSxJQUE2QixFQUFFO2dCQUNqQyxlQUFlO2dCQUNmRyxPQUFPQyxZQUFZLENBQUNRLE9BQU8sQ0FBQ2QsS0FBS1EsS0FBS08sU0FBUyxDQUFDRjtZQUNsRDtRQUNGLEVBQUUsT0FBT0gsT0FBTztZQUNkLDZEQUE2RDtZQUM3REMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO0lBQ0YsR0FBRztRQUFDVjtRQUFLRTtLQUFZO0lBRXJCLE9BQU87UUFBQ0E7UUFBYUM7S0FBZTtBQUN0QztHQTFDU0o7QUE0Q1QsK0RBQWVBLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2hvb2tzL3VzZUxvY2FsU3RvcmFnZS50c3g/MGU3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuXG50eXBlIFNldFZhbHVlPFQ+ID0gVCB8ICgodmFsOiBUKSA9PiBUKTtcblxuZnVuY3Rpb24gdXNlTG9jYWxTdG9yYWdlPFQ+KFxuICBrZXk6IHN0cmluZyxcbiAgaW5pdGlhbFZhbHVlOiBULFxuKTogW1QsICh2YWx1ZTogU2V0VmFsdWU8VD4pID0+IHZvaWRdIHtcbiAgLy8gU3RhdGUgdG8gc3RvcmUgb3VyIHZhbHVlXG4gIC8vIFBhc3MgIGluaXRpYWwgc3RhdGUgZnVuY3Rpb24gdG8gdXNlU3RhdGUgc28gbG9naWMgaXMgb25seSBleGVjdXRlZCBvbmNlXG4gIGNvbnN0IFtzdG9yZWRWYWx1ZSwgc2V0U3RvcmVkVmFsdWVdID0gdXNlU3RhdGUoKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBHZXQgZnJvbSBsb2NhbCBzdG9yYWdlIGJ5IGtleVxuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgLy8gYnJvd3NlciBjb2RlXG4gICAgICAgIGNvbnN0IGl0ZW0gPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICAgICAgLy8gUGFyc2Ugc3RvcmVkIGpzb24gb3IgaWYgbm9uZSByZXR1cm4gaW5pdGlhbFZhbHVlXG4gICAgICAgIHJldHVybiBpdGVtID8gSlNPTi5wYXJzZShpdGVtKSA6IGluaXRpYWxWYWx1ZTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gSWYgZXJyb3IgYWxzbyByZXR1cm4gaW5pdGlhbFZhbHVlXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICByZXR1cm4gaW5pdGlhbFZhbHVlO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gdXNlRWZmZWN0IHRvIHVwZGF0ZSBsb2NhbCBzdG9yYWdlIHdoZW4gdGhlIHN0YXRlIGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gQWxsb3cgdmFsdWUgdG8gYmUgYSBmdW5jdGlvbiBzbyB3ZSBoYXZlIHNhbWUgQVBJIGFzIHVzZVN0YXRlXG4gICAgICBjb25zdCB2YWx1ZVRvU3RvcmUgPVxuICAgICAgICB0eXBlb2Ygc3RvcmVkVmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gc3RvcmVkVmFsdWUoc3RvcmVkVmFsdWUpXG4gICAgICAgICAgOiBzdG9yZWRWYWx1ZTtcbiAgICAgIC8vIFNhdmUgc3RhdGVcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIC8vIGJyb3dzZXIgY29kZVxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZVRvU3RvcmUpKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gQSBtb3JlIGFkdmFuY2VkIGltcGxlbWVudGF0aW9uIHdvdWxkIGhhbmRsZSB0aGUgZXJyb3IgY2FzZVxuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfSwgW2tleSwgc3RvcmVkVmFsdWVdKTtcblxuICByZXR1cm4gW3N0b3JlZFZhbHVlLCBzZXRTdG9yZWRWYWx1ZV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUxvY2FsU3RvcmFnZTtcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZUxvY2FsU3RvcmFnZSIsImtleSIsImluaXRpYWxWYWx1ZSIsInN0b3JlZFZhbHVlIiwic2V0U3RvcmVkVmFsdWUiLCJpdGVtIiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiY29uc29sZSIsImxvZyIsInZhbHVlVG9TdG9yZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useLocalStorage.tsx\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Cimage-component.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Clink.js&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Clayouts%5CDefaultLayout.tsx&modules=D%3A%5CNoticed%5Cdocuments%5Cfa%5Cnextjs-dashboard%5Csrc%5Ccomponents%5Cutility%5CLottie%5CSigninLottie.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);